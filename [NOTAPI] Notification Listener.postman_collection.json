{
	"info": {
		"_postman_id": "cb5c0aff-9c22-4aa9-952f-aad85e4da166",
		"name": "[NOTAPI] Notification Listener",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3409554"
	},
	"item": [
		{
			"name": "Only for DEV - Token Step 2",
			"item": [
				{
					"name": "MFA - AccessToken (2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"if (jsonData != null && jsonData.access_token != null) {\r",
									"    console.info(\"Set collection variable - accessToken\");\r",
									"    pm.collectionVariables.set(\"accessToken\", jsonData.access_token);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{tokenClientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{tokenClientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "multi_factor",
									"type": "text"
								},
								{
									"key": "mfa_code",
									"value": "{{mfaToken}}",
									"type": "text"
								},
								{
									"key": "fraudData",
									"value": "{\n   \"channel\":\"KIN\",\n   \"fraud\":{\n      \"event\":{\n         \"originator\":{\n            \"alias\": null,\n            \"personalInformation\":{\n               \"id\": null\n            },\n            \"user\":{\n               \"authenticationMethod\":\"P\",\n               \"name\": null\n            }\n         },\n         \"beneficiary\":{\n            \"alias\":null,\n            \"personalInformation\": null,\n            \"user\": null\n         },\n         \"paymentEntity\": null\n      },\n      \"result\":{\n         \"externalResult\": null\n      },\n      \"transaction\":{\n         \"trxResponse\":{\n            \"reasonCode\":\"OP01\",\n            \"authenticationAttempts\":\"1\",\n            \"balance\": null,\n            \"statusCode\":\"ACCP\"\n         },\n         \"transactionId\":{\n            \"localDatetime\":\"2019-05-14 18:58:55\",\n            \"datetime\":\"2019-05-14 18:58:55\",\n            \"originalTransactionToken\":\"Lg20190622155800oEso1yQqfo2v+7nLMXVURJNgIkk=\",\n            \"operationCode\":\"LOGIN\",\n            \"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"\n         },\n         \"transactionDetails\":{\n            \"strongAuthIndicator\":\"1\",\n            \"clientType\":\"C\",\n            \"fraudOperationCode\":\"Lg\"\n         }\n      },\n      \"context\":{\n         \"originatorData\": {\n            \"account\": null,\n            \"transactionDescription\": null,\n            \"card\": null\n         },\n         \"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\n         \"channelSelectedType\":\"10\",\n         \"beneficiaryData\":{\n            \"device\": null,\n            \"application\": null,\n            \"account\": null\n         },\n         \"institutionalEntity\":{\n            \"institutionalId\":{\n               \"id\":\"0018\"\n            }\n         }\n      }\n   }\n}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{securityUrl}}/oauth/token",
							"host": [
								"{{securityUrl}}"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AccessToken (1) - 1006",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData.access_token != null) {\r",
							"    console.info(\"Set collection variable - accessToken\");\r",
							"    pm.collectionVariables.set(\"accessToken\", jsonData.access_token);\r",
							"} else {\r",
							"    console.info(\"Set collection variable - mfaCode\");\r",
							"    pm.collectionVariables.set(\"mfaToken\", jsonData.additional_info.mfa_code);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "{{tokenClientId}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{tokenClientSecret}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "1006",
							"type": "text"
						},
						{
							"key": "password",
							"value": "8f43e7e76d50bc529817f5ad284a7563d41f502b52b5eeadc5c1fe426488dffee5b78f221afecace8cb64aed6cd1ce48cd9783de86e4cb3b4281f0f4573d5691d6e2725fb812e3744156d2cd84abdd65d36af38a15977193021740b8909b9f20a6aed4f34d0a0ab829bc8ee48fdef32247975971f91689f76b9e66e2fd0e77941e4994f97e980ed0f121e97f6b495144cb9f65bbc64def461a884647e974ffc687271275efd29544d3891cd9ecbb1a1c8076e2a0ce3efd2a78c82369c5595a9c5e431f527314b017869564efcea5309d22d8eb4834a1df9e2c6325d6e14bfa15f10167a61c21b1343e9d787b71025f1f700331da9500126a6969d7f4267ffdd0",
							"type": "text"
						},
						{
							"key": "role",
							"value": "Web",
							"type": "text"
						},
						{
							"key": "captcha",
							"value": "true",
							"type": "text"
						},
						{
							"key": "channel",
							"value": "WEB",
							"type": "text"
						},
						{
							"key": "fraudData",
							"value": "{\n   \"channel\":\"KIN\",\n   \"fraud\":{\n      \"event\":{\n         \"originator\":{\n            \"alias\":null,\n            \"personalInformation\":{\n               \"id\":\"null\"\n            },\n            \"user\":{\n               \"authenticationMethod\":\"P\",\n               \"name\": null\n            }\n         },\n         \"beneficiary\":{\n            \"alias\":null,\n            \"personalInformation\": null,\n            \"user\": null\n         },\n         \"paymentEntity\": null\n      },\n      \"result\":{\n         \"externalResult\": null\n      },\n      \"transaction\":{\n         \"trxResponse\":{\n            \"authenticationAttempts\":\"1\"\n         },\n         \"transactionId\":{\n            \"localDatetime\":\"2019-05-14 18:58:55\",\n            \"datetime\":\"2019-05-14 18:58:55\",\n            \"operationCode\":\"LOGIN\",\n            \"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"\n         },\n         \"transactionDetails\":{\n            \"strongAuthIndicator\":\"0\",\n            \"clientType\":\"C\",\n            \"fraudOperationCode\":\"Lg\"\n         }\n      },\n      \"context\":{\n         \"originatorData\": {\n            \"account\": null,\n            \"transactionDescription\": null,\n            \"card\": null\n         },\n         \"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\n         \"channelSelectedType\":\"10\",\n         \"beneficiaryData\":{\n            \"device\":null,\n            \"application\": null,\n            \"account\": null\n         },\n         \"institutionalEntity\":{\n            \"institutionalId\":{\n               \"id\":\"0018\"\n            }\n         }\n      }\n   }\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{securityUrl}}/oauth/token",
					"host": [
						"{{securityUrl}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Send (first_login)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"to\": [ \"joaofi.pereira@servexternos.santander.pt\" ],\r\n    \"subject\": \"QWxlcnRhIGRlIFNlZ3VyYW7Dp2E=\",\r\n    \"bodyBase64\": \"\",\r\n    \"template\": {\r\n        \"notificationType\": \"first_login\",\r\n        \"channelId\": \"MBP\",\r\n        \"acceptLanguage\": \"pt-PT\",\r\n        \"deliveryMethod\": \"EMAIL\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{intraUrl}}/notifications/v2/email/send",
					"host": [
						"{{intraUrl}}"
					],
					"path": [
						"notifications",
						"v2",
						"email",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Send (iban_proof)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"to\": [ \"joaofi.pereira@servexternos.santander.pt\" ],\r\n    \"subject\": \"QWxlcnRhIGRlIFNlZ3VyYW7Dp2E=\",\r\n    \"bodyBase64\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{intraUrl}}/notifications/v2/email/send",
					"host": [
						"{{intraUrl}}"
					],
					"path": [
						"notifications",
						"v2",
						"email",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Send (iban_proof) +attach",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkFQSW1TYW5QdEludHJhbmV0X1JTMjU2In0.eyJzdWIiOiJ1aWQ6UERBMDEiLCJuYmYiOjE2ODE5MTc4NzMsImlzc3VlZF90b2tlbl90eXBlIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOnRva2VuLXR5cGU6YWNjZXNzLXRva2VuIiwidXNlcl9uYW1lIjoiSHVnbyBJbsOhY2lvIiwic2NvcGUiOiJwYXllZS5kZXRhaWwgYWNjdHJhbi5yZWFkIGV4dC1zZWMtaW50LmNhcmJvbiB1c2VyX2RldmljZV9tZ210X2RldmljZXMuY2hhbmdlIG1ibmV0X3JldGFpbC5saXN0IGNhcmRsaXN0LnJlYWQgYWNjZGV0LnJlYWQgc3RhbmRpbmdvcmRlcnNhY2NvdW50LmV4ZWN1dGVkIGNhcmR0cmFuLnJlYWQgbm90YXBpY2YucmVhZCBjYXJkX3JldGFpbC5waW4gaW5zdGFudF9wYXltZW50LmRldGFpbHMgY3VzbWFuYWdlcnMucmVhZCBtYm5ldF9yZXRhaWwuYmFsYW5jZSB3cml0ZSBtYm5ldF9yZXRhaWwucmVnaXN0ZXIgdmVyYWdlLnJlYWQgY2FyZF9yZXRhaWwuYWN0aXZlIG5vdGlmaWNhdGlvbi5yZWFkIGFjY2RldGNpZC5yZWFkIGluc3RhbnRfcGF5bWVudC5zdGF0dXMgZW1haWwud3JpdGUgbWJ3YXkubm90aWZpY2F0aW9ucyBub3RpcHVzaC5wb3N0IGNhcmRzbGltaXRzLnN1Ym1pdCBub3RhcGljZmEud3JpdGUgbWJuZXRfcmV0YWlsLmNoYW5nZSBzbXNwYXJzZS53cml0ZSBwZm1fY2F0LmdldCBzY2hlZHVsZWQuY2FuY2VsIGV4ZWN1dGVzY2Eud3JpdGUgcGF5bWVudHNwZWNpYWxwcmljZS5yZWFkIHNtcy53cml0ZSBtYndheS5zZGtDb2RlIHRvcHVwcy5zaW11bGF0ZSBjYXJkY3Z2LnJlYWQgY2FyZF9yZXRhaWwubW9kaWZ5IGluc3RhbnRfcGF5bWVudC5saXN0IGFjY291bnRyZWNvdmVyeS5yZWZlcmVuY2VudW1iZXIgaW52ZXN0cHJvZC5yZWFkIGNvbnRyY3VzdG9tZXIucmVhZCBhY2NsaXN0Y2lkLnJlYWQgcHVzaC53cml0ZSBjYXJkcmVwbGFjZSBzdGNhbGwud3JpdGUgbWJ3YXkuc2ltdWxhdGUgdHBwY29uc2VudHMuZWRpdCBub3RpcHVzaGlkLmdldCBjdXN0b21lcnNEZXRhaWxSZXRhaWwuZ2V0IGNhcmRfcmV0YWlsLnJlcGxhY2UgbWJuZXQub3BlcmF0aW9ucyBtYm5ldC5saXN0IGVudGl0eXBheS5zdGF0ZXBheSBwYXllZS51cGRhdGUgc3RhbmRpbmdvcmRlcnNhY2NvdW50LmRlbGV0ZSB0b3B1cHMubGlzdFByb3ZpZGVycyBiYW5rYnJhbmNoLnJlYWQgbWJ3YXkuc2RrQ2FyZFRva2VuIHNhZnN0cy53cml0ZSBtYndheW1hbi5jaGFuZ2VyZWcgc2NhdmFsaWRhdGUud3JpdGUgY2FyZHBpbi5yZWFkIHRvcHVwcy5leGVjdXRlIHN0YW5kaW5nb3JkZXJzYWNjb3VudC5tb2RpZnkgaW5zdGFudF9wYXltZW50LmNyZWF0ZSBtYndheS5ub3RpZmljYXRpb25BY3Rpb24gbWJ3YXkuY2FuY2VsVHJhbnNhY3Rpb24gbG9hbnNwYXltZW50cy5yZWFkIG5vdGFwaWNmLndyaXRlIHN0YW5kaW5nb3JkZXJzYWNjb3VudC5zY2hlZHVsZWQgYWNjb3VudHJlY292ZXJ5Lmxpc3RsYXRlcGF5bWVudHMgZXZlbnQuY3JlYXRlIG1ibmV0LnJlZ2lzdGVyIGN1c2FkZGNvbnRhY3Qud3JpdGUgc3RhbmRpbmdvcmRlcnNhY2NvdW50LmZyZWV6cGF0Y2ggbWJ3YXkudjIuM2RzIG1id2F5LmNvbnRhY3RzIG1id2F5LmRldGFpbFRyYW5zYWN0aW9uIG5vdGlwdXNoaWQucHV0IGxvYW5zbGlzdC5yZWFkIG1ibmV0LmNoYW5nZSB1c2VyX2RldmljZV9tZ210X2RldmljZXMubGlzdCBub3RpcHVzaGlkLmRlbCBjb21tZXJjaWFsQWN0aW9ucy5saXN0IHN0YW5kaW5nb3JkZXJzYWNjb3VudC5saXN0IHVzZXJfZGV2aWNlX21nbXRfZGV2aWNlcy5kZWxldGUgbWJuZXQuZGV0YWlsIGN1c3RvbWVyc0RldGFpbFJldGFpbC5jb250YWN0cyBtYm5ldC5iYWxhbmNlIG5vdGVBcGlwdXNoLndyaXRlIHJlYWQgbG9hbnNhY2NvdW50cy5yZWFkIHBheWVlLmRlbGV0ZSBnYmxwb3MudmlldyBsb2Fuc2RldC5yZWFkIGNhcmRwYW4ucmVhZCBtYndheS5yZWNlbnRDb250YWN0cyBzdGFuZGluZ29yZGVyc2FjY291bnQuZnJlZXogbWJ3YXltYW4uY2FuY2VscmVnIGNhcmRhY3RpdmUgY29udHJpZGVudGlmLnJlYWQgY3VzYmFzaWMucmVhZCBnYmxwb3MucmVhZCBiaWxsX3BheW1lbnRzLmdldCBtYm5ldF9yZXRhaWwuZGVsZXRlIG1ibmV0LnNlY3VyaXR5SW5mbyBjYXJkc2xpbWl0cy5saXN0IHZlcnNsaC5yZWFkIGNvbnRycGFydGljLnJlYWQgbWJuZXRfcmV0YWlsLnNlY3VyaXR5SW5mbyBpbnN0YW50X3BheW1lbnQuZGVsZXRlIG1id2F5Lmxpc3RUcmFuc2FjdGlvbnMgbWJuZXRfcmV0YWlsLm9wZXJhdGlvbnMgYWNjb3VudHJlY292ZXJ5LnByb21pc2V0b3BheSBpbnZlc3RtZW50ZnVuZC5yZWFkIHN0YW5kaW5nb3JkZXJzYWNjb3VudC5kZXRhaWxzIGluc3RwYXlwYWNrcy5yZWFkIG1id2F5bWFuLnJlZ2lzdGVyIG1id2F5LmV4ZWN1dGUgbG9hbnNpbnN0YWxsbWVudC5yZWFkIGV2ZW50LnVwZGF0ZSBjYXJkc3RhdC5yZWFkIHN0YW5kaW5nb3JkZXJzYWNjb3VudC5jcmVhdGUgbm90ZUFwaXNtcy53cml0ZSBzY2FnZW5lcmF0ZWludGVybmFsLnJlYWQgbm90YXBpc3BjZi5yZWFkIG5vdGFwaXNwaWRjZi5yZWFkIG5vdGlwdXNoLmdldCBub3RlQXBpc21zcGFyc2Uud3JpdGUgY2FyZHVzYWIgZnJhdWQudmFsaWRhdGlvbiBtYm5ldF9yZXRhaWwuZGV0YWlsIGNhcmRzbGltaXRzLmRlY2lzaW9uIGNhcmQzZHNlYyBzY2hlZHVsZWQubGlzdCBub3RhcGlzcGNmLndyaXRlIHNhZnN0cy5yZWFkIGNhcmRkZXQucmVhZCBjdXN0ZWNvbm9tLnJlYWQgbm90ZUFwaWVtYWlsLndyaXRlIGVudGl0eXBheS5zZXJ2aWNlcGF5IHBheWVlLnBvc3QgaW5zdGFudF9wYXltZW50LnNpbXVsYXRpb24gdHBwY29uc2VudHMucmVhZCBwYXllZS5nZXRsaXN0IGFjY3RyYW5jaWQucmVhZCBtYm5ldC5kZWxldGUgYWNjbGlzdC5yZWFkIG1id2F5Lmxpc3RDYXJkcyBzY2F2YWxpZGF0ZWludGVybmFsLndyaXRlIiwiaXNzIjoiMDAxOFNlY3VyaXR5TWljcm9zZXJ2aWNlIiwiYWN0aXZlIjp0cnVlLCJleHAiOjE2ODE5MjE0NzMsInNlY0N0eCI6eyJzZXNzaW9uRGV0YWlscyI6eyJzZXNzaW9uVXNlcklkIjoiMDAwOTM5NTkwMiIsImlzU2FmRW5hYmxlZCI6dHJ1ZSwiYXV0aGVudGljYXRpb25NZXRob2QiOiJOIiwiY3VzdG9tZXJQYXJ0ZW5vbiI6eyJjdXN0b21lclR5cGUiOiJGIiwiY3VzdG9tZXJJZCI6Ijk3NjQ1MzAifSwic2Vzc2lvblVzZXJuYW1lIjoiSHVnbyBJbsOhY2lvIiwiY29udGV4dCI6Ik1vYmlsZSIsImNoYW5uZWwiOiJBUFAiLCJkZXZpY2VEYXRhIjp7ImRldmljZUlkIjoiMDAwOTM5NTkwMjAwMDAzIiwiZGV2aWNlVWlkIjoiR1IwK21ncjJha0VtS0ZhVG1LQm1uYU9lVFlCSjIxWHFabEg2NGozL21RQT0iLCJjZXJ0aWZpZWQiOnRydWV9LCJjbGllbnROdW1iZXIiOiI3NDAyMjY0NzE2In0sImhlYWRlclNpbnRyYSI6eyJlbXBVdGlsIjoiMzEiLCJjb2RCYWxjYW9PcmlnZW0iOiI2OTM2Iiwibml2ZWxBdXRvcml6Q2VudHJhbCI6IjAiLCJjb2RCYWxjYW9PcGVyYW50ZSI6IjY5MzYiLCJnZXN0b3JDb250YSI6Ik4iLCJudW1FbXByZWdhZG8iOiIxMTExMTExMTEiLCJ0ZXJtaW5hbCI6IjAwMVkiLCJlbXByZXNhT3BlcmFudGUiOiIgICIsInRlcm1pbmFscyI6WyIwMDFZIiwiMDAxWiIsIjAwMkEiLCIwMDNRIiwiMDAzUiIsIjAwM1MiLCIwMDNUIiwiMDAzVSIsIjAwNDciLCIwMDUyIiwiMDAzViIsIjAwM1ciLCIwMDNYIiwiMDAzWSIsIjAwM1oiLCIwMDQwIiwiMDA0MSIsIjAwNDIiLCIwMDQzIiwiMDA0NCJdLCJjb2RCYWxjYW8iOiI2OTM2IiwiY29kQW1iaWVudGUiOiJOQiIsInBlcmZpbCI6Ik5FVDAwMSIsImluZFN0YWZmIjoiUyIsImdlc3RvckNsaWVudGUiOiJOIn19LCJpYXQiOjE2ODE5MTc4NzMsImNsaWVudF9pZCI6ImExNDhiMDhlLTA4MTEtNGYyYy1iZmVjLWExOTdiNDQ2OWNlYSIsImF1ZCI6IiIsImp0aSI6Ijk1OTgxYzJhLTlkOWMtNDIxNS05MmZkLTZjZWNjMTVkNGZkZSJ9.njd0OazhQkQAkqbRIsA_UmEO-9UMsvBQJQNIPmzmWUA3Iz3Spyir3lX7xQu5KpXW_HykjWpdEdVvcUPLd7sYASeZK3cKQJHp0ZVilkZvcBLXYiVdjvmOyEIuWx4IsxVGT1Ok5GBbyDz75WftGKmAXSdUhh4LP6X0VX3TusOkmie51hi-y-sb6cF4d-thn8hWwBQ0QUvP7O9YZ50cCWRAgDoIwZTh7o455tQLkKQ-oyibVVeuxEwkcCJtnSmE65tPB8X3KttxQJBzdaIvRQjJ5A5iQdsBJcpCiDeXA4VywAVGiQ51Ug7qFdDVKk9L4ZsLiIcIb7zf-Q1B-a1fvoOQoA",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from\": {\r\n        \"address\": \"apiproportugal@santander.pt\",\r\n        \"name\": \"API PRO Portugal\"\r\n    },\r\n    \"to\": [\r\n        \"joaofi.pereira@servexternos.santander.pt\"\r\n    ],\r\n    \"subject\": \"QWxlcnRhIGRlIFNlZ3VyYW7Dp2E=\",\r\n    \"bodyBase64\": \"\",\r\n    \"template\": {\r\n        \"notificationType\": \"iban_proof_email\",\r\n        \"channelId\": \"MBP\",\r\n        \"acceptLanguage\": \"pt-PT\",\r\n        \"deliveryMethod\": \"EMAIL\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{intraUrl}}/notifications/v2/email/send",
					"host": [
						"{{intraUrl}}"
					],
					"path": [
						"notifications",
						"v2",
						"email",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Send (iban_proof) +template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"to\": [ \"joaofi.pereira@servexternos.santander.pt\" ],\r\n    \"subject\": \"QWxlcnRhIGRlIFNlZ3VyYW7Dp2E=\",\r\n    \"bodyBase64\": \"dmFtb3MgY29tZXIgdW5zIGJ1cmd1ZXJzPw==\",\r\n    \"template\": {\r\n        \"notificationType\": \"mbway_accepted_debit\",\r\n        \"channelId\": \"MBP\",\r\n        \"acceptLanguage\": \"pt-PT\",\r\n        \"deliveryMethod\": \"EMAIL\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{intraUrl}}/notifications/v2/email/send",
					"host": [
						"{{intraUrl}}"
					],
					"path": [
						"notifications",
						"v2",
						"email",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Email Send (mbway_accepted_debit) +template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"to\": [ \"joaofi.pereira@servexternos.santander.pt\" ],\r\n    \"subject\": \"QWxlcnRhIGRlIFNlZ3VyYW7Dp2E=\",\r\n    \"bodyBase64\": \"\",\r\n    \"template\": {\r\n        \"notificationType\": \"mbway_accepted_debit\",\r\n        \"channelId\": \"MBP\",\r\n        \"acceptLanguage\": \"pt-PT\",\r\n        \"deliveryMethod\": \"EMAIL\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{intraUrl}}/notifications/v2/email/send",
					"host": [
						"{{intraUrl}}"
					],
					"path": [
						"notifications",
						"v2",
						"email",
						"send"
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish IBM MQ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"3DS                                     PUSH      1000596831                                                                                                                                                      Santander                                                                                                                                                                                               Compra online por autorizardeeplink_code|sf9fdafd00|language|PT|notificationId|006537259|phoneNumber|r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{mcsUrl}}/ibm/mq",
					"host": [
						"{{mcsUrl}}"
					],
					"path": [
						"ibm",
						"mq"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sms Parse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"if (jsonData != null && jsonData.fileId != null) {\r",
							"    console.info(\"Set collection variable - fileId\");\r",
							"    pm.collectionVariables.set(\"fileId\", jsonData.fileId);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "x-ibm-client-id",
						"value": "{{intraClientId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"4321 stop\",\r\n    \"contentType\": \"text\",\r\n    \"mobileNumber\": \"919085282\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8078/notifications/v2/sms_parse/send",
					"host": [
						"localhost"
					],
					"port": "8078",
					"path": [
						"notifications",
						"v2",
						"sms_parse",
						"send"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var environment = pm.collectionVariables.get(\"env\");",
					"",
					"if(environment==\"localhost\"){",
					"    pm.collectionVariables.set(\"securityUrl\", \"https://security-internet.totta.dev.corp\");",
					"    pm.collectionVariables.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"    pm.collectionVariables.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"",
					"    pm.collectionVariables.set(\"mcsUrl\", \"localhost:8080\");",
					"    pm.collectionVariables.set(\"intraUrl\", \"localhost:8080\");",
					"    pm.collectionVariables.set(\"intraClientId\", \"80ef9187-302f-4820-92cb-d3adca9b0e06\"); // Notification Service V2 Test",
					"};",
					"",
					"if(environment==\"dev\"){",
					"    pm.collectionVariables.set(\"securityUrl\", \"https://security-internet.totta.dev.corp\");",
					"    pm.collectionVariables.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"    pm.collectionVariables.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"",
					"    pm.collectionVariables.set(\"mcsUrl\", \"https://notification-listener.totta.dev.corp\");",
					"    pm.collectionVariables.set(\"intraUrl\", \"https://apigw.intraclient.totta.dev.corp/sanpt/internal\");",
					"    pm.collectionVariables.set(\"intraClientId\", \"80ef9187-302f-4820-92cb-d3adca9b0e06\"); // Notification Service V2 Test",
					"};",
					"",
					"if(environment==\"pre\"){",
					"    pm.collectionVariables.set(\"securityUrl\", \"https://security-internet.totta.pre.corp\");",
					"    pm.collectionVariables.set(\"tokenClientId\", \"4853771c-70b4-4c9e-a575-1ab701678311\");",
					"    pm.collectionVariables.set(\"tokenClientSecret\", \"T1tK7iA7rG8oW0uP3kD7oF1eM4iC1wJ2yL2eQ6wH0aY4wN6uY2\");",
					"    ",
					"    pm.collectionVariables.set(\"mcsUrl\", \"https://notification-query-service.totta.pre.corp\");",
					"    pm.collectionVariables.set(\"intraUrl\", \"https://apigw.intraclient.totta.pre.corp/sanpt/internal\");",
					"    pm.collectionVariables.set(\"intraClientId\", \"b3886577-0341-41e3-8fba-17dfd99df673\");  // Testes API's Locais Internal",
					"};",
					"",
					"if(environment==\"pro\"){",
					"    pm.collectionVariables.set(\"mcsUrl\", \"https://notification-query-service.totta.gs.corp\");",
					"    pm.collectionVariables.set(\"intraUrl\", \"https://apigw.intraclient.totta.gs.corp/sanpt/internal\");",
					"    pm.collectionVariables.set(\"intraClientId\", \"60262bd3-a580-472a-9a1e-9e580b907db2\");  // Notifications API",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "env",
			"value": "pro",
			"type": "string"
		},
		{
			"key": "securityUrl",
			"value": ""
		},
		{
			"key": "tokenClientId",
			"value": ""
		},
		{
			"key": "tokenClientSecret",
			"value": ""
		},
		{
			"key": "mcsUrl",
			"value": ""
		},
		{
			"key": "intraUrl",
			"value": ""
		},
		{
			"key": "mfaToken",
			"value": ""
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "intraClientId",
			"value": ""
		},
		{
			"key": "fileId",
			"value": ""
		}
	]
}