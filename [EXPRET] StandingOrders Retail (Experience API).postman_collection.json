{
	"info": {
		"_postman_id": "691642fb-adf2-40b2-ac43-4f18a89e2225",
		"name": "[EXPRET] StandingOrders Retail (Experience API)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3409554"
	},
	"item": [
		{
			"name": "StandingOrders Scenarios",
			"item": [
				{
					"name": "Standing Order List",
					"item": [
						{
							"name": "Standing Orders List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "PT50001800035437246102070",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_sort",
											"value": "-executionNumber",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "130",
											"disabled": true
										},
										{
											"key": "is_experience_retail",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Standing Orders List - 1000586988",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders"
											],
											"query": [
												{
													"key": "_sort",
													"value": "-executionNumber",
													"disabled": true
												},
												{
													"key": "_limit",
													"value": "130",
													"disabled": true
												},
												{
													"key": "is_experience_retail",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Backside-Transport",
											"value": "OK OK"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Wed, 31 Aug 2022 10:20:48 GMT"
										},
										{
											"key": "X-Global-Transaction-ID",
											"value": "196c5565630f35fe040ea280"
										},
										{
											"key": "x-b3-traceid",
											"value": "046f60ced5ce2d1c"
										},
										{
											"key": "x-b3-spanid",
											"value": "046f60ced5ce2d1c"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "cache-control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "expires",
											"value": "0"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "x-frame-options",
											"value": "DENY"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "APIm-Debug-Trans-Id, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-Global-Transaction-ID"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"displayNumber\": \"PT50001800035437246102070\",\n    \"standingOrdersAccountNumber\": {\n        \"accountId\": \"PT50001800035437246102070\",\n        \"accountType\": \"IBAN\"\n    },\n    \"standingOrdersDataList\": [\n        {\n            \"standingOrderAccountId\": \"10816853\",\n            \"creditorName\": \"Caixa\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 20\n            },\n            \"standingOrderStartDate\": \"2021-01-13\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"4173\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"week\"\n        },\n        {\n            \"standingOrderAccountId\": \"10816855\",\n            \"creditorName\": \"Caixa\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 20\n            },\n            \"standingOrderStartDate\": \"2021-01-13\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"4173\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"week\"\n        },\n        {\n            \"standingOrderAccountId\": \"10838428\",\n            \"creditorName\": \"Miriam ahahah\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 54\n            },\n            \"standingOrderStartDate\": \"2022-04-27\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"9272\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"week\"\n        },\n        {\n            \"standingOrderAccountId\": \"10835810\",\n            \"creditorName\": \"Conta Espanha\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 5\n            },\n            \"standingOrderStartDate\": \"2022-02-05\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"2135\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"monthly\"\n        },\n        {\n            \"standingOrderAccountId\": \"10817153\",\n            \"creditorName\": \"Caixa\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 20\n            },\n            \"standingOrderStartDate\": \"2021-01-18\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"4172\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"week\"\n        },\n        {\n            \"standingOrderAccountId\": \"10816854\",\n            \"creditorName\": \"Caixa\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 15\n            },\n            \"standingOrderStartDate\": \"2021-01-13\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"960\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"monthly\"\n        },\n        {\n            \"standingOrderAccountId\": \"10816969\",\n            \"creditorName\": \"HERCULANO INDU\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 50\n            },\n            \"standingOrderStartDate\": \"2021-01-14\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"60\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"monthly\"\n        },\n        {\n            \"standingOrderAccountId\": \"10817154\",\n            \"creditorName\": \"Caixa\",\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 10\n            },\n            \"standingOrderStartDate\": \"2021-01-18\",\n            \"_linksStandingOrderDetail\": {\n                \"_href2\": \"/retail_standing_orders/PT50001800035437246102070\"\n            },\n            \"executedNumber\": \"4172\",\n            \"standingOrderStatus\": \"active\",\n            \"standingOrderType\": \"recurrent\",\n            \"standingOrderPeriod\": \"week\"\n        }\n    ],\n    \"_links\": {\n        \"_first\": \"/retail_standing_orders?_limit=20\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "StandingOrders With SCA (Success Scenario)",
					"item": [
						{
							"name": "1 - Execute (expecting SCA)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var soAmount = 3.52;\r",
											"var soIbanOriginator = \"PT50001800035437246102070\";\r",
											"var soIbanBeneficiary = \"PT50003500410000748690034\";\r",
											"\r",
											"//Fixed\r",
											"let soPayload =\r",
											"{\r",
											"    \"standingOrdersInformation\": {\r",
											"        \"bankHolidayRule\": \"prev_day\",\r",
											"        \"standingOrderEndDate\": \"2023-12-26\",\r",
											"        \"standingOrderFixDateType\": [\r",
											"            {\r",
											"                \"fixDate\": \"2022-11-25\"\r",
											"            }\r",
											"        ],\r",
											"        \"standingOrderPeriod\": \"fixed\",\r",
											"        \"standingOrderStartDate\": \"2022-11-25\"\r",
											"    },\r",
											"    \"transferInformation\": {\r",
											"        \"chargeBearer\": \"OUR\",\r",
											"        \"countryDestinationFunds\": \"PT\",\r",
											"        \"creditorCreditAccount\": {\r",
											"            \"accountId\": soIbanBeneficiary,\r",
											"            \"accountIdType\": \"IBAN\"\r",
											"        },\r",
											"        \"creditorName\": \"Edite\",\r",
											"        \"debtorAccount\": {\r",
											"            \"accountId\": soIbanOriginator,\r",
											"            \"accountIdType\": \"IBAN\"\r",
											"        },\r",
											"        \"paymentAmount\": {\r",
											"            \"amount\": soAmount,\r",
											"            \"currency\": \"EUR\"\r",
											"        },\r",
											"        \"subject\": \"deposit \",\r",
											"        \"urgencyIndicator\": \"Standard\"\r",
											"    }\r",
											"}\r",
											"\r",
											"//Monthly\r",
											"/*let soPayload =\r",
											"{\r",
											"\t\"standingOrdersInformation\": {\r",
											"\t\t\"bankHolidayRule\": \"prev_day\",\r",
											"\t\t\"standingOrderDayType\": [\r",
											"\t\t\t{\r",
											"\t\t\t\t\"byDayName\": {\r",
											"\t\t\t\t\t\"dayName\": \"monday\",\r",
											"\t\t\t\t\t\"orderInPeriod\": \"1st\"\r",
											"\t\t\t\t},\r",
											"\t\t\t\t\"byDayNumber\": \"2\"\r",
											"\t\t\t}\r",
											"\t\t],\r",
											"\t\t\"standingOrderEndDate\": \"2022-01-19\",\r",
											"\t\t\"standingOrderPeriod\": \"monthly\",\r",
											"\t\t\"standingOrderStartDate\": \"2021-06-01\"\r",
											"\t},\r",
											"\t\"transferInformation\": {\r",
											"\t\t\"chargeBearer\": \"OUR\",\r",
											"\t\t\"countryDestinationFunds\": \"PT\",\r",
											"\t\t\"creditorCreditAccount\": {\r",
											"\t\t\t\"accountId\": soIbanBeneficiary,\r",
											"\t\t\t\"accountIdType\": \"IBAN\"\r",
											"\t\t},\r",
											"\t\t\"creditorName\": \"\",\r",
											"\t\t\"debtorAccount\": {\r",
											"\t\t\t\"accountId\": soIbanOriginator,\r",
											"\t\t\t\"accountIdType\": \"IBAN\"\r",
											"\t\t},\r",
											"\t\t\"paymentAmount\": {\r",
											"\t\t\t\"amount\": soAmount,\r",
											"\t\t\t\"currency\": \"EUR\"\r",
											"\t\t},\r",
											"\t\t\"subject\": \"\",\r",
											"\t\t\"urgencyIndicator\": \"Immediate\"\r",
											"\t}\r",
											"}*/\r",
											"\r",
											"//Annual\r",
											"/*let soPayload =\r",
											"{\r",
											"\t\"standingOrdersInformation\": {\r",
											"\t\t\"bankHolidayRule\": \"prev_day\",\r",
											"\t\t\"standingOrderDayType\": [\r",
											"\t\t\t{\r",
											"\t\t\t\t\"byDayName\": {\r",
											"\t\t\t\t\t\"dayName\": \"monday\",\r",
											"\t\t\t\t\t\"orderInPeriod\": \"1st\"\r",
											"\t\t\t\t},\r",
											"\t\t\t\t\"byDayNumber\": \"2\"\r",
											"\t\t\t}\r",
											"\t\t],\r",
											"\t\t\"standingOrderEndDate\": \"2022-12-26\",\r",
											"\t\t\"standingOrderPeriod\": \"annual\",\r",
											"\t\t\"standingOrderStartDate\": \"2021-12-23\"\r",
											"\t},\r",
											"\t\"transferInformation\": {\r",
											"\t\t\"chargeBearer\": \"OUR\",\r",
											"\t\t\"countryDestinationFunds\": \"PT\",\r",
											"\t\t\"creditorCreditAccount\": {\r",
											"\t\t\t\"accountId\": soIbanBeneficiary,\r",
											"\t\t\t\"accountIdType\": \"IBAN\"\r",
											"\t\t},\r",
											"\t\t\"creditorName\": \"\",\r",
											"\t\t\"debtorAccount\": {\r",
											"\t\t\t\"accountId\": soIbanOriginator,\r",
											"\t\t\t\"accountIdType\": \"IBAN\"\r",
											"\t\t},\r",
											"\t\t\"paymentAmount\": {\r",
											"\t\t\t\"amount\": soAmount,\r",
											"\t\t\t\"currency\": \"EUR\"\r",
											"\t\t},\r",
											"\t\t\"subject\": \"\",\r",
											"\t\t\"urgencyIndicator\": \"immediate\"\r",
											"\t}\r",
											"} */\r",
											"\r",
											"//Week\r",
											"/*let soPayload =\r",
											"{\r",
											"    \"standingOrdersInformation\": {\r",
											"\t\t\"bankHolidayRule\": \"prev_day\",\r",
											"        \"standingOrderDayType\": [\r",
											"\t\t\t{\r",
											"\t\t\t\t\"byDayName\": {\r",
											"\t\t\t\t\t\"dayName\": \"monday\",\r",
											"\t\t\t\t\t\"orderInPeriod\": \"1st\"\r",
											"\t\t\t\t},\r",
											"\t\t\t\t\"byDayNumber\": \"2\"\r",
											"\t\t\t}\r",
											"\t\t],\r",
											"        \"standingOrderEndDate\": \"2021-12-30\",\r",
											"        \"standingOrderPeriod\": \"week\",\r",
											"\t\t\"standingOrderStartDate\": \"2021-11-25\"\r",
											"    },\r",
											"    \"transferInformation\": {\r",
											"\t\t\"chargeBearer\": \"OUR\",\r",
											"\t\t\"creditorCreditAccount\": {\r",
											"\t\t\t\"accountIdType\": \"IBAN\",\r",
											"\t\t\t\"accountId\": soIbanBeneficiary\r",
											"\t\t},\r",
											"\t\t\"countryDestinationFunds\": \"PT\",\r",
											"\t\t\"debtorAccount\": {\r",
											"\t\t\t\"accountIdType\": \"IBAN\",\r",
											"\t\t\t\"accountId\": soIbanOriginator\r",
											"\t\t},\r",
											"\t\t\"paymentAmount\": {\r",
											"\t\t\t\"currency\": \"EUR\",\r",
											"\t\t\t\"amount\": soAmount\r",
											"\t\t},\r",
											"\t\t\"urgencyIndicator\": \"STANDARD\"\r",
											"\t}\r",
											"}\r",
											"*/\r",
											"// Setting globals:\r",
											"pm.globals.set('standingOrdersPayload', JSON.stringify(soPayload));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"pm.globals.set(\"scaId\", response.scaId);\r",
											"\r",
											"pm.test(\"Status code is 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Account-id",
										"value": "PT50001800035437246102070",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "device-info-token",
										"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
										"type": "text"
									},
									{
										"key": "access-channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "isTest",
										"value": "true",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"paramStandingOrderStructureDTO\": {{standingOrdersPayload}}\r\n    \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									]
								}
							},
							"response": [
								{
									"name": "1 - Execute (expecting SCA)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Account-id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "device-info-token",
												"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
												"type": "text"
											},
											{
												"key": "access-channel",
												"value": "web",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"paramStandingOrderStructureDTO\": {{standingOrdersPayload}}\r\n    \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Backside-Transport",
											"value": "OK OK"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Wed, 31 Aug 2022 10:30:00 GMT"
										},
										{
											"key": "X-Global-Transaction-ID",
											"value": "196c5565630f3823044526b1"
										},
										{
											"key": "x-b3-traceid",
											"value": "e43a56e2151da9b8"
										},
										{
											"key": "x-b3-spanid",
											"value": "e43a56e2151da9b8"
										},
										{
											"key": "traceid",
											"value": "e43a56e2151da9b8"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "cache-control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "pragma",
											"value": "no-cache"
										},
										{
											"key": "expires",
											"value": "0"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "x-frame-options",
											"value": "DENY"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "APIm-Debug-Trans-Id, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-Global-Transaction-ID"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "POST"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"scaId\": \"02b4b9d7-6de8-49c7-a53e-4c0d5b87be6c\"\n}"
								}
							]
						},
						{
							"name": "2 - Execute",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Account-id",
										"value": "PT50001800035437246102070",
										"type": "text"
									},
									{
										"key": "access-channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"paramStandingOrderStructureDTO\": {{standingOrdersPayload}},\r\n    \"scaRequest\": {\r\n        \"otpCode\": \"654321\",\r\n        \"scaId\": \"{{scaId}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Errors",
					"item": [
						{
							"name": "Wrong BBA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(400)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"errors\": [\r",
											"        {\r",
											"            \"code\": \"400\",\r",
											"            \"message\": \"The Account-Id does not have the correct length for the type BBA\",\r",
											"            \"level\": \"ERROR\",\r",
											"            \"description\": \"The Account-Id does not have the correct length for the type BBA\"\r",
											"        }\r",
											"    ]\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "000180003544564390",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "BBA",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Wrong amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(400)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"errors\": [\r",
											"        {\r",
											"            \"code\": \"400\",\r",
											"            \"message\": \"Invalid field: from_payment_amount\",\r",
											"            \"level\": \"ERROR\",\r",
											"            \"description\": \"Failed to convert value of type 'java.lang.String[]' to required type 'java.math.BigDecimal'; nested exception is java.lang.NumberFormatException\"\r",
											"        },\r",
											"        {\r",
											"            \"code\": \"400\",\r",
											"            \"message\": \"Invalid field: to_payment_amount\",\r",
											"            \"level\": \"ERROR\",\r",
											"            \"description\": \"Failed to convert value of type 'java.lang.String[]' to required type 'java.math.BigDecimal'; nested exception is java.lang.NumberFormatException\"\r",
											"        }\r",
											"    ]\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "PT50001800035445643902096",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders?from_payment_amount=a&to_payment_amount=a",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_offset",
											"value": "a",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "a",
											"disabled": true
										},
										{
											"key": "standing_creditor_name",
											"value": "Transf Internacional_ZonaEuro",
											"disabled": true
										},
										{
											"key": "from_payment_amount",
											"value": "a"
										},
										{
											"key": "to_payment_amount",
											"value": "a"
										},
										{
											"key": "_sort",
											"value": "-aaNumber",
											"disabled": true
										},
										{
											"key": "standing_order_alias",
											"value": "1",
											"disabled": true
										},
										{
											"key": "from_last_standing_order_run_date",
											"value": "1",
											"disabled": true
										},
										{
											"key": "to_last_standing_order_run_date",
											"value": "1",
											"disabled": true
										},
										{
											"key": "standingOrderStatus",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Wrong IBA",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(400)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"errors\": [\r",
											"        {\r",
											"            \"code\": \"400\",\r",
											"            \"message\": \"The Account-Id does not have the correct length for the type IBA\",\r",
											"            \"level\": \"ERROR\",\r",
											"            \"description\": \"The Account-Id does not have the correct length for the type IBA\"\r",
											"        }\r",
											"    ]\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "PT50001800035445643902096",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBA",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "filters",
					"item": [
						{
							"name": "Creditor Name Filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"displayNumber\": \"PT50001800035433149102012\",\r",
											"    \"accountId\": \"000354331491020\",\r",
											"    \"accountType\": \"BBA\",\r",
											"    \"standingOrdersDataList\": [\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10801211\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 1.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2020-05-19\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10801211\"\r",
											"            },\r",
											"            \"executedNumber\": \"3\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696853\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696853\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696856\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696856\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696858\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696858\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696861\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696861\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696863\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696863\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696865\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696865\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696867\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696867\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696869\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696869\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696871\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696871\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696873\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696873\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696874\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696874\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696875\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696875\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696879\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696879\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696881\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696881\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696883\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696883\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696885\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696885\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696887\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696887\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696892\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696892\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696894\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696894\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/standing_orders_account?_limit=20&standing_creditor_name=Transf+Internacional_ZonaEuro\",\r",
											"        \"_next\": \"/standing_orders_account?_limit=20&standing_creditor_name=Transf+Internacional_ZonaEuro&_offset=20\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "PT50001800035445643902096",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders?from_payment_amount=4000&to_payment_amount=5000",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_offset",
											"value": "",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "500",
											"disabled": true
										},
										{
											"key": "standing_creditor_name",
											"value": "Transf Internacional_ZonaEuro",
											"disabled": true
										},
										{
											"key": "from_payment_amount",
											"value": "4000"
										},
										{
											"key": "to_payment_amount",
											"value": "5000"
										},
										{
											"key": "_sort",
											"value": "executionNumber",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "first page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"displayNumber\": \"PT50001800035433149102012\",\r",
											"    \"accountId\": \"000354331491020\",\r",
											"    \"accountType\": \"BBA\",\r",
											"    \"standingOrdersDataList\": [\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10801211\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 1.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2020-05-19\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10801211\"\r",
											"            },\r",
											"            \"executedNumber\": \"3\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696853\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696853\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696856\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696856\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696858\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696858\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696861\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696861\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696863\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696863\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696865\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696865\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696867\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696867\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696869\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696869\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696871\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696871\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696873\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696873\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696874\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696874\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696875\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696875\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696879\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696879\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696881\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696881\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696883\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696883\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696885\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696885\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696887\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696887\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696892\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696892\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696894\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696894\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/standing_orders_account?_limit=20\",\r",
											"        \"_next\": \"/standing_orders_account?_limit=20&_offset=20\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"value": "PT50001800035437246102070",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_sort",
											"value": "-executionNumber",
											"disabled": true
										},
										{
											"key": "_offset",
											"value": "20",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"displayNumber\": \"PT50001800035433149102012\",\r",
											"    \"accountId\": \"000354331491020\",\r",
											"    \"accountType\": \"BBA\",\r",
											"    \"standingOrdersDataList\": [\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10801211\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 1.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2020-05-19\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10801211\"\r",
											"            },\r",
											"            \"executedNumber\": \"3\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696853\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696853\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696856\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696856\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696858\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696858\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696861\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696861\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696863\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696863\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696865\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696865\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696867\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696867\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696869\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696869\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696871\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696871\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696873\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696873\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696874\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696874\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696875\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696875\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696879\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696879\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696881\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696881\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696883\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696883\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696885\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696885\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696887\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696887\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696892\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696892\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696894\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696894\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/standing_orders_account?_limit=20&from_payment_amount=0&to_payment_amount=300\",\r",
											"        \"_next\": \"/standing_orders_account?_limit=20&from_payment_amount=0&to_payment_amount=300&_offset=20\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"type": "text",
										"value": "PT50001800035445643902096"
									},
									{
										"key": "Account-Type",
										"type": "text",
										"value": "IBAN"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders?from_payment_amount=4000&to_payment_amount=",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "from_payment_amount",
											"value": "4000"
										},
										{
											"key": "to_payment_amount",
											"value": ""
										},
										{
											"key": "offset",
											"value": "20",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"console.log(actual);\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"displayNumber\": \"PT50001800035433149102012\",\r",
											"    \"accountId\": \"000354331491020\",\r",
											"    \"accountType\": \"BBA\",\r",
											"    \"standingOrdersDataList\": [\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10801211\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 1.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2020-05-19\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10801211\"\r",
											"            },\r",
											"            \"executedNumber\": \"3\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696925\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696925\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696923\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696923\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696920\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696920\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696918\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696918\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696911\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696911\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696909\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696909\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696907\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696907\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696903\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696903\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696901\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696901\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696899\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696899\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696894\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696894\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696892\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696892\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696887\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696887\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696885\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696885\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696883\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696883\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696881\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696881\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696879\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696879\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696875\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696875\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696874\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696874\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/standing_orders_account?_limit=20&_sort=-executionNumber\",\r",
											"        \"_next\": \"/standing_orders_account?_limit=20&_sort=-executionNumber&_offset=20\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"type": "text",
										"value": "PT50001800035445643902096"
									},
									{
										"key": "Account-Type",
										"type": "text",
										"value": "IBAN"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders?_sort=-executionNumber",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_sort",
											"value": "-executionNumber"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Second page ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"const actual = response.json();\r",
											"const expected = pm.globals.get('expected');\r",
											"const test = pm.test;\r",
											"\r",
											"test('OK', () => {\r",
											"       if(response.to.have.status(200)){\r",
											"            test('VALID Result', () => {\r",
											"           pm.expect(_.isEqual(expected, actual)).to.be.true;\r",
											"        });\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expected = {\r",
											"    \"displayNumber\": \"PT50001800035433149102012\",\r",
											"    \"accountId\": \"000354331491020\",\r",
											"    \"accountType\": \"BBA\",\r",
											"    \"standingOrdersDataList\": [\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696899\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696899\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696901\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696901\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696903\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696903\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696907\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696907\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696909\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696909\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696911\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696911\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696918\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696918\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696920\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696920\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696923\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696923\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        },\r",
											"        {\r",
											"            \"standingOrderAccountId\": \"10696925\",\r",
											"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
											"            \"paymentAmount\": {\r",
											"                \"currency\": \"EUR\",\r",
											"                \"amount\": 300.00\r",
											"            },\r",
											"            \"standingOrderStartDate\": \"2018-04-30\",\r",
											"            \"_linksStandingOrderDetail\": {\r",
											"                \"_href2\": \"/standing_orders_account/10696925\"\r",
											"            },\r",
											"            \"executedNumber\": \"9480\",\r",
											"            \"standingOrderStatus\": \"active\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/standing_orders_account?_limit=20\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set('expected', expected);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"type": "text",
										"value": "PT50001800035445643902096"
									},
									{
										"key": "Account-Type",
										"type": "text",
										"value": "IBAN"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders?_offset=20",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders"
									],
									"query": [
										{
											"key": "_offset",
											"value": "20"
										},
										{
											"key": "_limit",
											"value": "5",
											"disabled": true
										},
										{
											"key": "standing_creditor_name",
											"value": "Transf Internacional_ZonaEuro",
											"disabled": true
										},
										{
											"key": "from_payment_amount",
											"value": "0",
											"disabled": true
										},
										{
											"key": "to_payment_amount",
											"value": "100",
											"disabled": true
										},
										{
											"key": "_sort",
											"value": "-executionNumber",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "scheduledlist",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Limit 2",
									"item": [
										{
											"name": "Get SO Scheduled List SecondPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const expectedResponse =\r",
															"{\r",
															"    \"scheduledDates\": [\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-28\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-21\"\r",
															"        }\r",
															"    ],\r",
															"    \"_links\": {\r",
															"        \"_first\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100\",\r",
															"        \"_next\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_offset=4\"\r",
															"    }\r",
															"};\r",
															"pm.globals.set('expectedResponse', expectedResponse);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Account-Id",
														"type": "text",
														"value": "PT50001800035445643902096"
													},
													{
														"key": "Account-Type",
														"type": "text",
														"value": "IBAN"
													},
													{
														"key": "Access-Channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Client-Id",
														"value": "{{clientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/retail_standing_orders/10820638/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=2&_offset=2",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"retail_standing_orders",
														"10820638",
														"scheduled"
													],
													"query": [
														{
															"key": "from_scheduled_date",
															"value": "20161228T105858000-0100"
														},
														{
															"key": "to_scheduled_date",
															"value": "99991231T105858000-0100"
														},
														{
															"key": "_sort",
															"value": "-scheduledDate"
														},
														{
															"key": "_limit",
															"value": "2"
														},
														{
															"key": "_offset",
															"value": "2"
														},
														{
															"key": "is_experience_retail",
															"value": "true",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get SO Scheduled List FirstPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const expectedResponse =\r",
															"{\r",
															"    \"scheduledDates\": [\r",
															"        {\r",
															"            \"scheduledDate\": \"2199-12-26\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-12-05\"\r",
															"        }\r",
															"    ],\r",
															"    \"_links\": {\r",
															"        \"_first\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100\",\r",
															"        \"_next\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_offset=2\"\r",
															"    }\r",
															"}\r",
															"pm.globals.set('expectedResponse', expectedResponse);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Account-Id",
														"type": "text",
														"value": "PT50001800035445643902096"
													},
													{
														"key": "Account-Type",
														"type": "text",
														"value": "IBAN"
													},
													{
														"key": "Access-Channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Client-Id",
														"value": "{{clientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/retail_standing_orders/10820638/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=2",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"retail_standing_orders",
														"10820638",
														"scheduled"
													],
													"query": [
														{
															"key": "from_scheduled_date",
															"value": "20161228T105858000-0100"
														},
														{
															"key": "to_scheduled_date",
															"value": "99991231T105858000-0100"
														},
														{
															"key": "_sort",
															"value": "-scheduledDate"
														},
														{
															"key": "_limit",
															"value": "2"
														},
														{
															"key": "_offset",
															"value": "62",
															"disabled": true
														},
														{
															"key": "is_experience_retail",
															"value": "true",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get SO Scheduled List  LastPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const expectedResponse =\r",
															"{\r",
															"    \"scheduledDates\": [\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-10-25\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-10-18\"\r",
															"        }\r",
															"    ],\r",
															"    \"_links\": {\r",
															"        \"_first\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100\",\r",
															"        \"_prev\": \"/standing_orders_account/10767736/scheduled?_limit=2&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_offset=60\"\r",
															"    }\r",
															"}\r",
															"pm.globals.set('expectedResponse', expectedResponse);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Account-Id",
														"type": "text",
														"value": "PT50001800035445643902096"
													},
													{
														"key": "Account-Type",
														"type": "text",
														"value": "IBAN"
													},
													{
														"key": "Access-Channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Client-Id",
														"value": "{{clientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/retail_standing_orders/10820638/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=2&_offset=62",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"retail_standing_orders",
														"10820638",
														"scheduled"
													],
													"query": [
														{
															"key": "from_scheduled_date",
															"value": "20161228T105858000-0100"
														},
														{
															"key": "to_scheduled_date",
															"value": "99991231T105858000-0100"
														},
														{
															"key": "_sort",
															"value": "-scheduledDate"
														},
														{
															"key": "_limit",
															"value": "2"
														},
														{
															"key": "_offset",
															"value": "62"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": " all",
									"item": [
										{
											"name": "Get SO Scheduled List",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"const expectedResponse =\r",
															"{\r",
															"    \"scheduledDates\": [\r",
															"        {\r",
															"            \"scheduledDate\": \"2199-12-26\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-12-05\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-28\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-21\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-21\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-14\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-11-07\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-10-31\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-10-24\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-10-17\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-10-10\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-10-03\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-09-26\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-09-19\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-09-12\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-09-05\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-08-29\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-08-22\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-08-15\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-08-08\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-08-01\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-07-25\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-07-18\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-07-11\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-07-11\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-07-04\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-06-27\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-06-20\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-06-13\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-06-06\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-05-30\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-05-23\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-05-16\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-05-09\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-05-02\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-04-25\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-04-18\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-04-11\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-04-04\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-03-28\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-03-21\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-03-14\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-03-07\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-02-28\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-02-28\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-02-21\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-02-14\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-02-07\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-01-31\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-01-24\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-01-17\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-01-10\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2019-01-03\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-12-27\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-12-20\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-12-13\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-12-06\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-11-29\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-11-22\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-11-15\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-11-08\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-11-01\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-10-25\"\r",
															"        },\r",
															"        {\r",
															"            \"scheduledDate\": \"2018-10-18\"\r",
															"        }\r",
															"    ],\r",
															"    \"_links\": {\r",
															"        \"_first\": \"/standing_orders_account/10767736/scheduled?_limit=64&from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100\"\r",
															"    }\r",
															"}\r",
															"pm.globals.set('expectedResponse', expectedResponse);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Account-Id",
														"value": "PT50001800035445643902096",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "IBAN",
														"type": "text"
													},
													{
														"key": "Access-Channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Client-Id",
														"value": "{{clientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/retail_standing_orders/10820638/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=64",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"retail_standing_orders",
														"10820638",
														"scheduled"
													],
													"query": [
														{
															"key": "from_scheduled_date",
															"value": "20161228T105858000-0100"
														},
														{
															"key": "to_scheduled_date",
															"value": "99991231T105858000-0100"
														},
														{
															"key": "_sort",
															"value": "-scheduledDate"
														},
														{
															"key": "_limit",
															"value": "64"
														},
														{
															"key": "_offset",
															"value": "62",
															"disabled": true
														},
														{
															"key": "is_experience_retail",
															"value": "true",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test\", () => {",
											"    var expected = pm.globals.get(\"expectedResponse\");",
											"    var result = pm.response.json();",
											"",
											"    if (result.details && result.details.trxNumber) {",
											"        delete result.details.trxNumber;",
											"    }",
											"",
											"    pm.expect(_.isEqual(result, expected)).to.be.true;",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Get SheduledList Standing Order_NOT_EXIST",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"404\",\r",
													"            \"message\": \"This standing order does not exist.\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"This standing order does not exist.\"\r",
													"        }\r",
													"    ]\r",
													"};\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820865/scheduled",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820865",
												"scheduled"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SO Scheduled List  fromdate is higher toDate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse =\r",
													"{\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"end date must be higher than the start date.\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"end date must be higher than the start date.\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820638/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=20151231T105858000-0100&_sort=-scheduledDate&_limit=2&_offset=80",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820638",
												"scheduled"
											],
											"query": [
												{
													"key": "from_scheduled_date",
													"value": "20161228T105858000-0100"
												},
												{
													"key": "to_scheduled_date",
													"value": "20151231T105858000-0100"
												},
												{
													"key": "_sort",
													"value": "-scheduledDate"
												},
												{
													"key": "_limit",
													"value": "2"
												},
												{
													"key": "_offset",
													"value": "80"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SO Scheduled List  Wrong Date",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse =\r",
													"{\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"Invalid field: fromScheduledDate\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The date must follow the pattern yyyyMMddThhmmssfff±timezone.\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10767736/scheduled?from_scheduled_date=2011228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=2&_offset=80",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10767736",
												"scheduled"
											],
											"query": [
												{
													"key": "from_scheduled_date",
													"value": "2011228T105858000-0100"
												},
												{
													"key": "to_scheduled_date",
													"value": "99991231T105858000-0100"
												},
												{
													"key": "_sort",
													"value": "-scheduledDate"
												},
												{
													"key": "_limit",
													"value": "2"
												},
												{
													"key": "_offset",
													"value": "80"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SheduledList_WRONG_BBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"\"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type BBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type BBA\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "BBA"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/107914981/scheduled",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"107914981",
												"scheduled"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SheduledList_WRONG_IBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"  \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type IBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type IBA\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT500018000354331491020531"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820865/scheduled",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820865",
												"scheduled"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SheduledList_WITHOUT_ACCOUNT_ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"org.springframework.web.bind.MissingRequestHeaderException: Missing request header 'Account-Id' for method parameter of type String\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"Missing request header 'Account-Id' for method parameter of type String\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053",
												"disabled": true
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10767736/scheduled",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10767736",
												"scheduled"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get SO Scheduled List  Wrong Sort",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse =\r",
													"{\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"Invalid field: sort\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The sort allowed values: +scheduledDate for ascending or -scheduledDate for descending.\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10767736/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=scheduledDate&_limit=2&_offset=80",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10767736",
												"scheduled"
											],
											"query": [
												{
													"key": "from_scheduled_date",
													"value": "20161228T105858000-0100"
												},
												{
													"key": "to_scheduled_date",
													"value": "99991231T105858000-0100"
												},
												{
													"key": "_sort",
													"value": "scheduledDate"
												},
												{
													"key": "_limit",
													"value": "2"
												},
												{
													"key": "_offset",
													"value": "80"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test\", () => {",
											"    var expected = pm.globals.get(\"expectedResponse\");",
											"    var result = pm.response.json();",
											"",
											"    if (result.details && result.details.trxNumber) {",
											"        delete result.details.trxNumber;",
											"    }",
											"",
											"    pm.expect(_.isEqual(result, expected)).to.be.true;",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Get SO Scheduled List  Wrong Offset",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response;\r",
											"\r",
											"pm.test('NO CONTENT', () => {\r",
											"response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Account-Id",
										"type": "text",
										"value": "001800035433149102053"
									},
									{
										"key": "Account-Type",
										"type": "text",
										"value": "BBA"
									},
									{
										"key": "Client-Id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dmzUrl}}/retail_standing_orders/10767736/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=2&_offset=80",
									"host": [
										"{{dmzUrl}}"
									],
									"path": [
										"retail_standing_orders",
										"10767736",
										"scheduled"
									],
									"query": [
										{
											"key": "from_scheduled_date",
											"value": "20161228T105858000-0100"
										},
										{
											"key": "to_scheduled_date",
											"value": "99991231T105858000-0100"
										},
										{
											"key": "_sort",
											"value": "-scheduledDate"
										},
										{
											"key": "_limit",
											"value": "2"
										},
										{
											"key": "_offset",
											"value": "80"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Update Standing Orders With SCA",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Execute (Expecting SCA)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var soAmount = 10.52;\r",
													"var soIbanOriginator = \"PT50001800035445643902096\";\r",
													"var soIbanBeneficiary = \"PT50003300000019333254405\";\r",
													"\r",
													"let soEditPayload = \r",
													"{\r",
													"   \"standingOrdersInformation\":{\r",
													"      \"bankHolidayRule\":\"prev_day\",\r",
													"      \"standingOrderEndDate\":\"\",\r",
													"      \"standingOrderPeriod\":\"monthly\",\r",
													"      \"standingOrderStartDate\":\"\"\r",
													"   },\r",
													"   \"transferInformation\":{\r",
													"      \"chargeBearer\": \"OUR\",\r",
													"      \"countryDestinationFunds\":\"PT\",\r",
													"      \"creditorCreditAccount\":{\r",
													"         \"accountId\":soIbanBeneficiary,\r",
													"         \"accountIdType\":\"IBAN\"\r",
													"      },\r",
													"      \"creditorName\":\"\",\r",
													"      \"debtorAccount\":{\r",
													"         \"accountId\":soIbanOriginator,\r",
													"         \"accountIdType\":\"IBAN\"\r",
													"      },\r",
													"      \"paymentAmount\":{\r",
													"         \"amount\":soAmount,\r",
													"         \"currency\":\"EUR\"\r",
													"      },\r",
													"      \"subject\":\"\",\r",
													"      \"urgencyIndicator\":\"Standard\"\r",
													"   }\r",
													"}\r",
													"\r",
													"// Setting globals:\r",
													"pm.globals.set('soEditPayload', JSON.stringify(soEditPayload));\r",
													"pm.globals.set('encryptedEditSOPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account/10820192}#{}#\" + JSON.stringify(soEditPayload))));\r",
													"\r",
													"\r",
													"console.log(\"soEditPayload: \" + JSON.stringify(pm.globals.get(\"soEditPayload\")));\r",
													"console.log(\"encryptedEditSOPayload: \" + JSON.stringify(pm.globals.get(\"encryptedEditSOPayload\")));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"SCA-EDIT-SO-ID\", responseJson.scaId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035445643902096",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"paramStandingOrderStructureDTO\": {{soEditPayload}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820614",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820614"
											]
										}
									},
									"response": []
								},
								{
									"name": "Execute",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var soAmount = 40.3;\r",
													"var soIbanOriginator = \"PT50001800035445643902096\";\r",
													"var soIbanBeneficiary = \"PT50003300000019333254405\";\r",
													"\r",
													"let soPayload ={\r",
													"   \"standingOrdersInformation\":{\r",
													"      \"bankHolidayRule\":\"prev_day\",\r",
													"      \"standingOrderEndDate\":\"2021-12-28\",\r",
													"      \"standingOrderPeriod\":\"monthly\",\r",
													"      \"standingOrderStartDate\":\"2021-04-28\"\r",
													"   },\r",
													"   \"transferInformation\":{\r",
													"      \"chargeBearer\": \"OUR\",\r",
													"      \"countryDestinationFunds\":\"PT\",\r",
													"      \"creditorCreditAccount\":{\r",
													"         \"accountId\":soIbanBeneficiary,\r",
													"         \"accountIdType\":\"IBAN\"\r",
													"      },\r",
													"      \"creditorName\":\"\",\r",
													"      \"debtorAccount\":{\r",
													"         \"accountId\":soIbanOriginator,\r",
													"         \"accountIdType\":\"IBAN\"\r",
													"      },\r",
													"      \"paymentAmount\":{\r",
													"         \"amount\":soAmount,\r",
													"         \"currency\":\"EUR\"\r",
													"      },\r",
													"      \"subject\":\"\",\r",
													"      \"urgencyIndicator\":\"Standard\"\r",
													"   }\r",
													"}\r",
													"\r",
													"\r",
													"// Setting globals:\r",
													"pm.globals.set('soPayload', JSON.stringify(soPayload));\r",
													"pm.environment.set('encryptedSOPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account/10811307}#{}#\" + JSON.stringify(soPayload))));\r",
													"\r",
													"\r",
													"console.log(\"soPayload: \" + JSON.stringify(pm.globals.get(\"soPayload\")));\r",
													"console.log(\"encryptedSOPayload: \" + JSON.stringify(pm.globals.get(\"encryptedSOPayload\")));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.globals.set(\"Update-SO-SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035445643902096",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"paramStandingOrderStructureDTO\": {{soEditPayload}},\r\n    \"scaRequest\": {\r\n        \"otpCode\": \"654321\",\r\n        \"scaId\": \"{{SCA-EDIT-SO-ID}}\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820614",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820614"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Edit Standing Order_WRONG_CORRENCY",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													" \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"Invalid field: transferInformation.paymentAmount.currency\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"Values allowed: EUR\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"US\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit Standing Order_NOT_EXIST",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"404\",\r",
													"            \"message\": \"This standing order does not exist.\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"This standing order does not exist.\"\r",
													"        }\r",
													"    ]\r",
													"};\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit Standing Order_WRONG_IBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"  \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type IBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type IBA\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT500018000354331491020531"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit Standing Order_FIELD_MISSING",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"   \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"Invalid field: transferInformation.countryDestinationFunds\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"must not be null\"\r",
													"        }\r",
													"    ]\r",
													"    \r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n       \r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit Standing Order_WRONG_BBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"\"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type BBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type BBA\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "BBA"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit Standing Order_WITHOUT_ACCOUNT_ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"org.springframework.web.bind.MissingRequestHeaderException: Missing request header 'Account-Id' for method parameter of type String\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"Missing request header 'Account-Id' for method parameter of type String\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035433149102053",
												"disabled": true
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBA"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{urlSO}}/standing_orders_account/107914981",
											"host": [
												"{{urlSO}}"
											],
											"path": [
												"standing_orders_account",
												"107914981"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test\", () => {",
									"    var expected = pm.globals.get(\"expectedResponse\");",
									"    var result = pm.response.json();",
									"",
									"    if (result.details && result.details.trxNumber) {",
									"        delete result.details.trxNumber;",
									"    }",
									"",
									"    pm.expect(_.isEqual(result, expected)).to.be.true;",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "1- Delete Standing Order (Expecting SCA)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"SCA-SO-ID\", responseJson.scaId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-channel",
												"value": "Web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "isTest",
												"value": "true",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10838428",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10838428"
											]
										}
									},
									"response": []
								},
								{
									"name": "2 - Delete Standing Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035445643902096",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-channel",
												"value": "Web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10820614?otpCode=654321&scaId={{SCA-SO-ID}}&isTest=true",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10820614"
											],
											"query": [
												{
													"key": "otpCode",
													"value": "654321"
												},
												{
													"key": "scaId",
													"value": "{{SCA-SO-ID}}"
												},
												{
													"key": "isTest",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Response body is null\", function () {",
											"    pm.responseBody === null",
											"})"
										]
									}
								}
							]
						},
						{
							"name": "fail",
							"item": [
								{
									"name": "Delete Standing Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"      \"errors\": [\r",
													"        {\r",
													"            \"code\": \"404\",\r",
													"            \"message\": \"This standing orders cannot be deleted.\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"This standing orders cannot be deleted.\"\r",
													"        }\r",
													"    ]\r",
													"\r",
													"}\r",
													"pm.globals.set('expectedResponse', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Account-Id",
												"type": "text",
												"value": "PT50001800035445643902096"
											},
											{
												"key": "Account-Type",
												"type": "text",
												"value": "IBAN"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/1069701166?isTest=false",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"1069701166"
											],
											"query": [
												{
													"key": "isTest",
													"value": "false"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test\", () => {",
											"    var expected = pm.globals.get(\"expectedResponse\");",
											"    var result = pm.response.json();",
											"",
											"    if (result.details && result.details.trxNumber) {",
											"        delete result.details.trxNumber;",
											"    }",
											"",
											"    pm.expect(_.isEqual(result, expected)).to.be.true;",
											"});"
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GetStandingOrders",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Get Standing Order",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expected = {\r",
													"    \"standingCommonData\": {\r",
													"        \"transferInformation\": {\r",
													"            \"creditorName\": \"Transf Internacional_ZonaEuro\",\r",
													"            \"creditorCreditAccount\": {\r",
													"                \"accountIdType\": \"IBA\",\r",
													"                \"accountId\": \"ES5300492418272295265316\"\r",
													"            },\r",
													"            \"countryDestinationFunds\": \"ES\",\r",
													"            \"debtorAccount\": {\r",
													"                \"accountIdType\": \"IBA\",\r",
													"                \"accountId\": \"PT50001800035433149102012\"\r",
													"            },\r",
													"            \"paymentAmount\": {\r",
													"                \"currency\": \"EUR\",\r",
													"                \"amount\": 300.00\r",
													"            },\r",
													"            \"urgencyIndicator\": \"Standard\",\r",
													"            \"subject\": \"Extrato\"\r",
													"        },\r",
													"        \"standingOrdersInformation\": {\r",
													"            \"bankHolidayRule\": \"prev_day\",\r",
													"            \"standingOrderStartDate\": \"2018-04-30\"\r",
													"        }\r",
													"    },\r",
													"    \"standingOrderAccountId\": \"10696853\",\r",
													"    \"standingOrderStatus\": \"active\"\r",
													"};\r",
													"pm.globals.set('expected', expected);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBAN",
												"type": "text"
											},
											{
												"key": "Access-channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10816853"
											]
										}
									},
									"response": [
										{
											"name": "Get Standing Order - 1000586988",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Account-Id",
														"value": "PT50001800035437246102070",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "IBAN",
														"type": "text"
													},
													{
														"key": "Access-channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Client-Id",
														"value": "{{clientId}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"retail_standing_orders",
														"10816853"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Backside-Transport",
													"value": "OK OK"
												},
												{
													"key": "Connection",
													"value": "Keep-Alive"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Date",
													"value": "Wed, 31 Aug 2022 10:24:11 GMT"
												},
												{
													"key": "X-Global-Transaction-ID",
													"value": "196c5565630f36ca036cbc03"
												},
												{
													"key": "x-b3-traceid",
													"value": "da1598d5555d404c"
												},
												{
													"key": "x-b3-spanid",
													"value": "da1598d5555d404c"
												},
												{
													"key": "x-content-type-options",
													"value": "nosniff"
												},
												{
													"key": "x-xss-protection",
													"value": "1; mode=block"
												},
												{
													"key": "cache-control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "pragma",
													"value": "no-cache"
												},
												{
													"key": "expires",
													"value": "0"
												},
												{
													"key": "strict-transport-security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "x-frame-options",
													"value": "DENY"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "APIm-Debug-Trans-Id, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-Global-Transaction-ID"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Methods",
													"value": "GET"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"standingCommonData\": {\n        \"transferInformation\": {\n            \"creditorName\": \"Caixa\",\n            \"creditorCreditAccount\": {\n                \"accountIdType\": \"IBAN\",\n                \"accountId\": \"PT50003500410000748690034\"\n            },\n            \"countryDestinationFunds\": \"PT\",\n            \"debtorAccount\": {\n                \"accountIdType\": \"IBAN\",\n                \"accountId\": \"PT50001800035437246102070\"\n            },\n            \"paymentAmount\": {\n                \"currency\": \"EUR\",\n                \"amount\": 20\n            },\n            \"urgencyIndicator\": \"Standard\",\n            \"chargeBearer\": \"OUR\"\n        },\n        \"standingOrdersInformation\": {\n            \"standingOrderPeriod\": \"week\",\n            \"standingOrderType\": \"recurrent\",\n            \"bankHolidayRule\": \"following_day\",\n            \"standingOrderStartDate\": \"2021-01-13\",\n            \"standingOrderEndDate\": \"2100-12-29\",\n            \"standingOrderNextScheduledDate\": \"2022-09-02\"\n        }\n    },\n    \"standingOrderAccountId\": \"10816853\",\n    \"standingOrderStatus\": \"active\"\n}"
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Fail",
							"item": [
								{
									"name": "Get Standing Order_WRONG_IBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"     \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type IBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type IBA\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expected', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBA",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "WEB",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10816853"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Standing Order_WRONG_BBA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"The Account-Id does not have the correct length for the type BBA\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"The Account-Id does not have the correct length for the type BBA\"\r",
													"        }\r",
													"    ]\r",
													"\r",
													"}\r",
													"pm.globals.set('expected', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "BBA",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "WEB",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"transferInformation\": {\r\n        \r\n        \"creditorCreditAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"countryDestinationFunds\": \"PT\",\r\n        \"debtorAccount\": {\r\n            \"accountIdType\": \"IBA\",\r\n            \"accountId\": \"PT50001800035444829502027\"\r\n        },\r\n       \r\n        \"paymentAmount\": {\r\n            \"currency\": \"EUR\",\r\n            \"amount\": 40.3\r\n        },\r\n      \r\n        \"urgencyIndicator\": \"STANDARD\"\r\n\r\n    },\r\n    \"standingOrdersInformation\": {\r\n\r\n        \"standingOrderPeriod\": \"WEEK\",\r\n    \r\n        \"bankHolidayRule\": \"PREV_DAY\",\r\n        \"standingOrderStartDate\": \"\",\r\n        \"standingOrderEndDate\": \"\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10816853"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Standing Order_WITHOUT_ACCOUNT_ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"      \"errors\": [\r",
													"        {\r",
													"            \"code\": \"400\",\r",
													"            \"message\": \"org.springframework.web.bind.MissingRequestHeaderException: Missing request header 'Account-Id' for method parameter of type String\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"Missing request header 'Account-Id' for method parameter of type String\"\r",
													"        }\r",
													"    ]\r",
													"};\r",
													"pm.globals.set('expected', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBA",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10816853"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Standing Order_NOT_EXIST",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const expectedResponse = {\r",
													"    \"errors\": [\r",
													"        {\r",
													"            \"code\": \"404\",\r",
													"            \"message\": \"This standing order does not exist.\",\r",
													"            \"level\": \"ERROR\",\r",
													"            \"description\": \"This standing order does not exist.\"\r",
													"        }\r",
													"    ]\r",
													"}\r",
													"pm.globals.set('expected', expectedResponse);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Account-Id",
												"value": "PT50001800035437246102070",
												"type": "text"
											},
											{
												"key": "Account-Type",
												"value": "IBA",
												"type": "text"
											},
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/retail_standing_orders/10816853",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"retail_standing_orders",
												"10816853"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test\", () => {",
									"    var expected = pm.globals.get(\"expected\");",
									"    var result = pm.response.json();",
									"",
									"    if (result.details && result.details.trxNumber) {",
									"        delete result.details.trxNumber;",
									"    }",
									"",
									"    pm.expect(_.isEqual(result, expected)).to.be.true;",
									"});"
								]
							}
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenType",
				"value": "",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let authorizationHandlerUrl = \"https://confluence.alm.europe.cloudcenter.corp/download/attachments/177504065/Authorization-Handler.js?version=2&modificationDate=1637581631554&api=v2\";",
					"",
					"let customerPassword = \"7a44b720c93a4478257c42fa892a0032a8556af42ad0361e0d7afc72d2960063d9117924845610e0ec788648a48a36eab910403a436e982691fcf42870dd76ce6bbcc7cc00ed452ec35321975b41c6121f8b3c58f1d4f794a0ed98b8d62f1f10d4af6f5f4e929d969224a942031442d4c03803012676baeee4bccb50ca0646f538642c5c13b07f9e64e64d4177df058dabd5ad338690fe00be9e66bcc6c6b25eea85deb292ae7f7ed4f6a0d56e4cac6324a4a10ceedf415e8d8e69f982f98815f1df20e84e49f58cda4b81e56abe429d4f8a15a23edd406164a926c511c29e36c057806a86fc9dfaf852c1219bc58632df4d4f5e85cffb62d1d89998bf7e49cd\";",
					"",
					"let customerPasswordPreExternal = \"21fe94ae8b91eae38b15dfa331ed5950f1df736cb7b19e6736fdf6a7a2a959b921fc7bb07f6a2eb80fdd21d40908625a61d2f48e2a2869a49f9cfe92cbea78b1116fba81834de3e1a32b76c32f43bc2c53dd29301f56764e7b556d67f66121bfed61a402c83587b3c4abc7d564df735a6fa79ab0788227fe9dacc718a732fc8b5eda9f96e5a8bde2c538fd02eb1e54260485aa45d8d71265d41bc6b172b64a03f88ff2c7b314ea72d06d40233ce2fc278ec9d82ada8a9bb44665d57d2d3a56f02ad439b865979c7703935b05d66f9463a0dbd2c4357d667f485e2e266218f2cb0fd52746911711ad3ebb35f067f319517f3c34fd81beb49f970018ce663ccee9\";",
					"",
					"pm.sendRequest(authorizationHandlerUrl, function (error, response) {",
					"    var environment = pm.variables.get(\"env1\");",
					"    var catalog = pm.variables.get(\"catalog\");",
					"    pm.environment.set(\"env\", environment);",
					"",
					"",
					"    if(environment==\"dev\"){",
					"        pm.environment.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"        pm.environment.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"        pm.environment.set(\"dmzUrl\", \"https://apigw.dmzbackclient.totta.dev.corp/sanpt/internal-dmz\");",
					"        pm.environment.set(\"intraUrl\", \"https://apigw.intraclient.totta.dev.corp/sanpt/internal\"); ",
					"        pm.globals.set(\"clientIdInternal\", \"edc91ff5-7975-413e-9040-4bb31cb6637b\");",
					"    };",
					"",
					"    if(environment==\"pre\"){",
					"        if (catalog === \"external\") {",
					"            pm.environment.set(\"tokenClientId\", \"3d32073c-6317-4b54-a4c6-6ca3b766758e\");",
					"            pm.environment.set(\"dmzUrl\", \"https://eeic9.apis.santander.pt/sanpt/external-intcons\");",
					"        } else {",
					"            pm.environment.set(\"tokenClientId\", \"4853771c-70b4-4c9e-a575-1ab701678311\");",
					"            pm.environment.set(\"tokenClientSecret\", \"T1tK7iA7rG8oW0uP3kD7oF1eM4iC1wJ2yL2eQ6wH0aY4wN6uY2\");",
					"            pm.environment.set(\"dmzUrl\", \"https://apigw.dmzbackclient.totta.pre.corp/sanpt/internal-dmz\");",
					"            pm.environment.set(\"intraUrl\", \"https://apigw.intraclient.totta.pre.corp/sanpt/internal\");",
					"        }",
					"    };",
					"",
					"    if(environment==\"localhost\"){",
					"        pm.environment.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"        pm.environment.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"        pm.environment.set(\"env\", \"dev\");",
					"        pm.environment.set(\"dmzUrl\", \"localhost:8080\");",
					"        pm.environment.set(\"intraUrl\", \"localhost:8080\");",
					"    };  ",
					"",
					"    pm.globals.set(\"clientId\", pm.environment.get(\"tokenClientId\"));",
					"",
					"    eval(String.fromCharCode.apply(String, new Uint8Array(response.stream)));",
					"    //auth9002565390();",
					"    if(environment==\"pre\" && catalog === \"external\") {",
					"        eval(pm.variables.get(\"lib\"));",
					"        const config = {",
					"            channelType: \"mobile\"",
					"        }",
					"        //createToken(\"1000586687\", \"1000586687\", ",
					"        //createToken(\"45441\", \"45441\", // OK - account: /retail_accounts/000336486827020/transactions",
					"        createToken(\"1700015181\", \"1700015181\", customerPasswordPreExternal, config);",
					"        pm.globals.set(\"accountId\", \"000051321205001\");",
					"    } else {",
					"        const config = {",
					"            channelType: \"mobile\"",
					"        }",
					"        //let customerId = 1000586391; //OK",
					"        //let customerId = 1000596392;",
					"        //let customerId = 1000590086 // OK",
					"        let customerId = 1000586988 // OK",
					"        //let customerId = 1006",
					"        //let customerId = 1000586687;",
					"        //let customerId = 1000586687;",
					"        //let customerId = 1000585644;",
					"        createToken(customerId, customerId, customerPassword, config);",
					"        //pm.globals.set(\"accountId\", \"000051321205001\");",
					"    }",
					"",
					"});",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "lib",
			"value": "var\n//==================//\n//  PHYSICAL USERS  //\n//==================//\n/*\n * All purpose user for testing\n * Has a plethora of different products\n */\nauth1000585557 = function () {\n    let customerNumber = \"1000585557\";\n    let customerUsername = \"1000585557\";\n    let customerPassword = \"7a44b720c93a4478257c42fa892a0032a8556af42ad0361e0d7afc72d2960063d9117924845610e0ec788648a48a36eab910403a436e982691fcf42870dd76ce6bbcc7cc00ed452ec35321975b41c6121f8b3c58f1d4f794a0ed98b8d62f1f10d4af6f5f4e929d969224a942031442d4c03803012676baeee4bccb50ca0646f538642c5c13b07f9e64e64d4177df058dabd5ad338690fe00be9e66bcc6c6b25eea85deb292ae7f7ed4f6a0d56e4cac6324a4a10ceedf415e8d8e69f982f98815f1df20e84e49f58cda4b81e56abe429d4f8a15a23edd406164a926c511c29e36c057806a86fc9dfaf852c1219bc58632df4d4f5e85cffb62d1d89998bf7e49cd\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\nauth1000596831 = function () {\n    let customerNumber = \"1000596831\";\n    let customerUsername = \"1000596831\";\n    let customerPassword = \"8f43e7e76d50bc529817f5ad284a7563d41f502b52b5eeadc5c1fe426488dffee5b78f221afecace8cb64aed6cd1ce48cd9783de86e4cb3b4281f0f4573d5691d6e2725fb812e3744156d2cd84abdd65d36af38a15977193021740b8909b9f20a6aed4f34d0a0ab829bc8ee48fdef32247975971f91689f76b9e66e2fd0e77941e4994f97e980ed0f121e97f6b495144cb9f65bbc64def461a884647e974ffc687271275efd29544d3891cd9ecbb1a1c8076e2a0ce3efd2a78c82369c5595a9c5e431f527314b017869564efcea5309d22d8eb4834a1df9e2c6325d6e14bfa15f10167a61c21b1343e9d787b71025f1f700331da9500126a6969d7f4267ffdd0\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\n/*\n * User with only 1 account\n */\nauth2321006585 = function () {\n    let customerNumber = \"2321006585\";\n    let customerUsername = \"2321006585\";\n    let customerPassword = \"4bac44e306347a6d42a4efc4e229584ecae152ba896c1f6113f1bf3d53e0b5f4aad2d12850069986483d310bf07db50923aed4f7df47885c99ddeefeb532d02c743c20b3a91dc4bf710bde14d7e7883f0e183c3206cb9eee9c74ea5cb1f37dd49d6e48df4574bc229b49cf64a93a4197f2d4df749f7536a2ed5629a1098b3365f42fbdb6ddfc113c8f08cf0d14b4ed9dcb5f2f09bc6462c136713f6d8b283fc94060626039c964fdf5006384c32f90e9cd73fbaebc8a178bbffaab4794cff46744ef182d71e783b4fd7beb3821137809fc81b65ea983219d5b196d1dc226d81299922139dc8fd65a1c8d6a99fe4df80928987aecb2e632a6a112d5a5c93718cb\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\n/*\n * User without deposits, pensions, cards\n */\nauth9002565390 = function () {\n    let customerNumber = \"9002565390\";\n    let customerUsername = \"9002565390\";\n    let customerPassword = \"7aee03310d32538c168952868bd60e0dc40fa2541a18cd6edb2d4b6d564d52a27889459e32b114d79a9798acd20c42773f7aac48ce6322a86817373600af0cb2e86aca33f1091b2a5fe041ad282d09efcbe88347f4f0de797593f246c9ef4c66bc7676eba104d91e29158eb3fa5b8854c2755b64aa5650077f9dc03510dcd1aafd16c1dba15778564e3ee5093afc1ef265e3a60f92942c07ee01c967c64b0346d314e3ccee2eced111e32134ae196a1c324d6a62483d5611ba0dd90b95752b306392cea58d06e70c6acc4ca61695451bac86cb8bc945f9c43a906581b235dec8832ee56d33bb34f6ff50c02e6590bb875731968fc59b18509068eaa94aedef01\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\n/*\n * User whose accounts are all in EUR.\n * Recommended for testing Global Position\n */\nauthUser157789 = function () {\n    let customerNumber = \"157789\";\n    let customerUsername = \"User157789\";\n    let customerPassword = \"12ce4647945644cc739c3dbdc70693f5e03ecea5a332c8f018d1cdd815887be718aeb30b2af2fbd80767db80dc48d666cac6d4781f483db3addc38c0d9af3e896c393207c719b4aa9ba596bd6fafd0b22379b0ceaf7e310a032f02d1d2f7aa53a350638e791100896d835696f3d50b5fd7d99b9089ec333b339e98be334bec58764afb5a7c79a685c46078edeb6a641ec59a176013a914c705ad47b795a0b2bfc254aea635df9c040506b98dab67de0fe28c55948b958f08afc2409c3aa161832cfc19300673b28ef93e54219b33ae62be3fca04e9936c9c10c93887b1b5be1875b291317b27c7e6ae505518691f8329c269ba61e6ab9e4b1d4fafc23ef29734\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\nauthGlobile5100011467 = function () {\n    let customerNumber = \"5100011467\";\n    let customerUsername = \"Globile5100011467\";\n    let customerPassword = \"8f43e7e76d50bc529817f5ad284a7563d41f502b52b5eeadc5c1fe426488dffee5b78f221afecace8cb64aed6cd1ce48cd9783de86e4cb3b4281f0f4573d5691d6e2725fb812e3744156d2cd84abdd65d36af38a15977193021740b8909b9f20a6aed4f34d0a0ab829bc8ee48fdef32247975971f91689f76b9e66e2fd0e77941e4994f97e980ed0f121e97f6b495144cb9f65bbc64def461a884647e974ffc687271275efd29544d3891cd9ecbb1a1c8076e2a0ce3efd2a78c82369c5595a9c5e431f527314b017869564efcea5309d22d8eb4834a1df9e2c6325d6e14bfa15f10167a61c21b1343e9d787b71025f1f700331da9500126a6969d7f4267ffdd0\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\nautGlobile9000796656 = function () {\n    let customerNumber = \"9000796656\";\n    let customerUsername = \"Globile9000796656\";\n    let customerPassword = \"8f43e7e76d50bc529817f5ad284a7563d41f502b52b5eeadc5c1fe426488dffee5b78f221afecace8cb64aed6cd1ce48cd9783de86e4cb3b4281f0f4573d5691d6e2725fb812e3744156d2cd84abdd65d36af38a15977193021740b8909b9f20a6aed4f34d0a0ab829bc8ee48fdef32247975971f91689f76b9e66e2fd0e77941e4994f97e980ed0f121e97f6b495144cb9f65bbc64def461a884647e974ffc687271275efd29544d3891cd9ecbb1a1c8076e2a0ce3efd2a78c82369c5595a9c5e431f527314b017869564efcea5309d22d8eb4834a1df9e2c6325d6e14bfa15f10167a61c21b1343e9d787b71025f1f700331da9500126a6969d7f4267ffdd0\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\nauthGlobile9001905564 = function () {\n    let customerNumber = \"9001905564\";\n    let customerUsername = \"Globile9001905564\";\n    let customerPassword = \"8f43e7e76d50bc529817f5ad284a7563d41f502b52b5eeadc5c1fe426488dffee5b78f221afecace8cb64aed6cd1ce48cd9783de86e4cb3b4281f0f4573d5691d6e2725fb812e3744156d2cd84abdd65d36af38a15977193021740b8909b9f20a6aed4f34d0a0ab829bc8ee48fdef32247975971f91689f76b9e66e2fd0e77941e4994f97e980ed0f121e97f6b495144cb9f65bbc64def461a884647e974ffc687271275efd29544d3891cd9ecbb1a1c8076e2a0ce3efd2a78c82369c5595a9c5e431f527314b017869564efcea5309d22d8eb4834a1df9e2c6325d6e14bfa15f10167a61c21b1343e9d787b71025f1f700331da9500126a6969d7f4267ffdd0\";\n    createToken(customerNumber, customerUsername, customerPassword);\n},\n//===================//\n//  CORPORATE USERS  //\n//===================//\nauthMagneto = function () {\n    let username = \"magneto\";\n    let password = \"Santander1\";\n    createCorpToken(username, password);\n},\n//==========================//\n// PHYSICAL TOKEN CREATION  //\n//==========================//\ncreateToken = function (customerNumber, customerUsername, customerPassword) {\n    let environment = pm.environment.get(\"env\");\n    if (environment === \"local\") {\n        environment = \"dev\";\n    }\n    console.log(\"CHECKING TOKEN\");\n    pm.sendRequest({\n        url: \"https://security-internet.totta.\" + environment + \".corp/oauth/check_token\",\n        method: \"POST\",\n        header: {\n            \"User-Agent\": \"PostmanRuntime/7.17.1\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: {\n            mode: 'urlencoded',\n            urlencoded: [{\n                    key: \"token\",\n                    value: pm.globals.get(\"accessToken\"),\n                    disabled: false\n                }\n            ]\n        }\n    },\n        function (err, res) {\n        if (res.json().user_name == customerUsername) {\n            console.log(\"TOKEN ALREADY CREATED\");\n        } else {\n            console.log(\"CREATING NEW TOKEN\");\n            const role = pm.variables.get(\"role\") ? pm.variables.get(\"role\") : \"Web\";\n            const urlencoded = [{\n                key: \"client_id\",\n                value: pm.environment.get(\"tokenClientId\"),\n                disabled: false\n            }, {\n                key: \"grant_type\",\n                value: \"password\",\n                disabled: false\n            }, {\n                key: \"username\",\n                value: customerUsername,\n                disabled: false\n            }, {\n                key: \"password\",\n                value: customerPassword,\n                disabled: false\n            }, {\n                key: \"role\",\n                value: role,\n                disabled: false\n            }, {\n                key: \"captcha\",\n                value: true,\n                disabled: false\n            }, {\n                key: \"channel\",\n                value: \"WEB\",\n                disabled: false\n            }, {\n                key: \"fraudData\",\n                value: getFraudData(false, customerNumber),\n                disabled: false\n            }];\n            if(pm.environment.get(\"tokenClientSecret\") != null \n                && pm.environment.get(\"tokenClientSecret\") != undefined \n                && pm.environment.get(\"tokenClientSecret\") != \"\") {\n                    urlencoded.push({\n                        key: \"client_secret\",\n                        value: pm.environment.get(\"tokenClientSecret\"),\n                        disabled: false\n                    });\n            }\n            pm.sendRequest({\n                url: \"https://security-internet.totta.\" + environment + \".corp/oauth/token\",\n                method: \"POST\",\n                header: {\n                    \"User-Agent\": \"PostmanRuntime/7.17.1\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: {\n                    mode: 'urlencoded',\n                    urlencoded: urlencoded\n                }\n            },\n                function (err, res) {\n                if (res.json().error == \"fraud_sca\") {\n                    console.log(\"SECOND FACTOR AUTHENTICATION\");\n                    const urlencoded = [{\n                        key: \"client_id\",\n                        value: pm.environment.get(\"tokenClientId\"),\n                        disabled: false\n                    }, {\n                        key: \"grant_type\",\n                        value: \"multi_factor\",\n                        disabled: false\n                    }, {\n                        key: \"mfa_code\",\n                        value: res.json().additional_info.mfa_code,\n                        disabled: false\n                    }, {\n                        key: \"fraudData\",\n                        value: getFraudData(true, customerNumber),\n                        disabled: false\n                    }];\n                    if(pm.environment.get(\"tokenClientSecret\") != null \n                    && pm.environment.get(\"tokenClientSecret\") != undefined \n                    && pm.environment.get(\"tokenClientSecret\") != \"\") {\n                        urlencoded.push({\n                            key: \"client_secret\",\n                            value: pm.environment.get(\"tokenClientSecret\"),\n                            disabled: false\n                        });\n                }\n                    pm.sendRequest({\n                        url: \"https://security-internet.totta.\" + environment + \".corp/oauth/token\",\n                        method: \"POST\",\n                        header: {\n                            \"User-Agent\": \"PostmanRuntime/7.17.1\",\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        },\n                        body: {\n                            mode: 'urlencoded',\n                            urlencoded: urlencoded\n                        }\n                    },\n                        function (err, response) {\n                        pm.globals.set(\"accessToken\", response.json().access_token);\n                    });\n                } else {\n                    pm.globals.set(\"accessToken\", res.json().access_token);\n                }\n            });\n        }\n    });\n},\ngetFraudData = function (isSCA, customerNumber) {\n    if (isSCA) {\n        return \"{\\\"channel\\\":\\\"KIN\\\",\\\"refOperation\\\":\\\"\\\",\\\"codeError\\\":\\\"\\\",\\\"messageError\\\":\\\"\\\",\\\"fraud\\\":{\\\"event\\\":{\\\"originator\\\":{\\\"alias\\\":{\\\"name\\\":\\\"\\\"},\\\"personalInformation\\\":{\\\"name\\\":\\\"\\\",\\\"birthCountry\\\":\\\"\\\",\\\"clientToken\\\":\\\"\\\",\\\"birthDate\\\":\\\"\\\",\\\"adressDetails\\\":{\\\"address\\\":\\\"\\\",\\\"country\\\":\\\"\\\"},\\\"id\\\":\\\"\" + customerNumber + \"\\\"},\\\"user\\\":{\\\"authenticationMethod\\\":\\\"P\\\",\\\"certificatePresenceInd\\\":\\\"\\\",\\\"name\\\":\\\"\" + customerNumber + \"\\\",\\\"type\\\":\\\"\\\",\\\"preparationUserName\\\":\\\"\\\",\\\"signatureRequiredCounter\\\":\\\"\\\"},\\\"corporateClientId\\\":\\\"\\\"},\\\"beneficiary\\\":{\\\"alias\\\":{\\\"name\\\":\\\"\\\"},\\\"personalInformation\\\":{\\\"name\\\":\\\"\\\",\\\"birthCountry\\\":\\\"\\\",\\\"clientToken\\\":\\\"\\\",\\\"birthDate\\\":\\\"\\\",\\\"adressDetails\\\":{\\\"address\\\":\\\"\\\",\\\"country\\\":\\\"\\\"},\\\"id\\\":\\\"\\\"},\\\"trustedIndicator\\\":\\\"\\\",\\\"user\\\":{\\\"name\\\":\\\"\\\"}},\\\"paymentEntity\\\":{\\\"reference\\\":\\\"\\\",\\\"institutionalId\\\":{\\\"id\\\":\\\"\\\"}}},\\\"result\\\":{\\\"externalResult\\\":{\\\"transactionScore\\\":\\\"\\\",\\\"ruleName\\\":\\\"\\\",\\\"refusedIndicator\\\":\\\"\\\"}},\\\"transaction\\\":{\\\"trxResponse\\\":{\\\"reasonCode\\\":\\\"OP01\\\",\\\"authenticationAttempts\\\":\\\"1\\\",\\\"balance\\\":{\\\"currentAccountBalance\\\":\\\"\\\"},\\\"statusCode\\\":\\\"ACCP\\\"},\\\"transactionId\\\":{\\\"localDatetime\\\":\\\"2019-05-14 18:58:55\\\",\\\"datetime\\\":\\\"2019-05-14 18:58:55\\\",\\\"originalTransactionToken\\\":\\\"Lg20190622155800oEso1yQqfo2v+7nLMXVURJNgIkk=\\\",\\\"operationCode\\\":\\\"LOGIN\\\",\\\"transactionToken\\\":\\\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\\\"},\\\"transactionDetails\\\":{\\\"localCurrencyAmount\\\":\\\"\\\",\\\"operationIndicator\\\":\\\"\\\",\\\"currency\\\":\\\"\\\",\\\"amount\\\":\\\"\\\",\\\"recurringIndicator\\\":\\\"\\\",\\\"strongAuthIndicator\\\":\\\"1\\\",\\\"clientType\\\":\\\"C\\\",\\\"fraudOperationCode\\\":\\\"Lg\\\",\\\"localCurrency\\\":\\\"\\\"}},\\\"context\\\":{\\\"originatorData\\\":{\\\"device\\\":null,\\\"application\\\":{\\\"language\\\":\\\"\\\"},\\\"account\\\":{\\\"bic\\\":\\\"\\\",\\\"currency\\\":\\\"\\\",\\\"iban\\\":\\\"\\\"},\\\"transactionDescription\\\":{\\\"toBeneficiary\\\":\\\"\\\",\\\"toOriginator\\\":\\\"\\\"},\\\"card\\\":{\\\"pan\\\":\\\"\\\",\\\"panExpiryDate\\\":\\\"\\\",\\\"tokenPanExpiryDate\\\":\\\"\\\",\\\"tokenPan\\\":\\\"\\\"}},\\\"sessionId\\\":\\\"G77rKInuIoARX9mnr5sYOlHnsPk=\\\",\\\"channelSelectedType\\\":\\\"10\\\",\\\"beneficiaryData\\\":{\\\"device\\\":null,\\\"application\\\":{\\\"language\\\":\\\"\\\"},\\\"account\\\":{\\\"bic\\\":\\\"\\\",\\\"iban\\\":\\\"\\\"}},\\\"institutionalEntity\\\":{\\\"institutionalId\\\":{\\\"id\\\":\\\"0018\\\"}}}}}\";\n    } else {\n        return \"{\\\"channel\\\":\\\"KIN\\\",\\\"refOperation\\\":\\\"\\\",\\\"codeError\\\":\\\"\\\",\\\"messageError\\\":\\\"\\\",\\\"fraud\\\":{\\\"event\\\":{\\\"originator\\\":{\\\"alias\\\":{\\\"name\\\":\\\"\\\"},\\\"personalInformation\\\":{\\\"name\\\":\\\"\\\",\\\"birthCountry\\\":\\\"\\\",\\\"clientToken\\\":\\\"\\\",\\\"birthDate\\\":\\\"\\\",\\\"adressDetails\\\":{\\\"address\\\":\\\"\\\",\\\"country\\\":\\\"\\\"},\\\"id\\\":\\\"\" + customerNumber + \"\\\"},\\\"user\\\":{\\\"authenticationMethod\\\":\\\"P\\\",\\\"certificatePresenceInd\\\":\\\"\\\",\\\"name\\\":\\\"\" + customerNumber + \"\\\",\\\"type\\\":\\\"\\\",\\\"preparationUserName\\\":\\\"\\\",\\\"signatureRequiredCounter\\\":\\\"\\\"},\\\"corporateClientId\\\":\\\"\\\"},\\\"beneficiary\\\":{\\\"alias\\\":{\\\"name\\\":\\\"\\\"},\\\"personalInformation\\\":{\\\"name\\\":\\\"\\\",\\\"birthCountry\\\":\\\"\\\",\\\"clientToken\\\":\\\"\\\",\\\"birthDate\\\":\\\"\\\",\\\"adressDetails\\\":{\\\"address\\\":\\\"\\\",\\\"country\\\":\\\"\\\"},\\\"id\\\":\\\"\\\"},\\\"trustedIndicator\\\":\\\"\\\",\\\"user\\\":{\\\"name\\\":\\\"\\\"}},\\\"paymentEntity\\\":{\\\"reference\\\":\\\"\\\",\\\"institutionalId\\\":{\\\"id\\\":\\\"\\\"}}},\\\"result\\\":{\\\"externalResult\\\":{\\\"transactionScore\\\":\\\"\\\",\\\"ruleName\\\":\\\"\\\",\\\"refusedIndicator\\\":\\\"\\\"}},\\\"transaction\\\":{\\\"trxResponse\\\":{\\\"reasonCode\\\":\\\"\\\",\\\"authenticationAttempts\\\":\\\"1\\\",\\\"balance\\\":{\\\"currentAccountBalance\\\":\\\"\\\"},\\\"statusCode\\\":\\\"\\\"},\\\"transactionId\\\":{\\\"localDatetime\\\":\\\"2019-05-14 18:58:55\\\",\\\"datetime\\\":\\\"2019-05-14 18:58:55\\\",\\\"originalTransactionToken\\\":\\\"\\\",\\\"operationCode\\\":\\\"LOGIN\\\",\\\"transactionToken\\\":\\\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\\\"},\\\"transactionDetails\\\":{\\\"localCurrencyAmount\\\":\\\"\\\",\\\"operationIndicator\\\":\\\"\\\",\\\"currency\\\":\\\"\\\",\\\"amount\\\":\\\"\\\",\\\"recurringIndicator\\\":\\\"\\\",\\\"strongAuthIndicator\\\":\\\"0\\\",\\\"clientType\\\":\\\"C\\\",\\\"fraudOperationCode\\\":\\\"Lg\\\",\\\"localCurrency\\\":\\\"\\\"}},\\\"context\\\":{\\\"originatorData\\\":{\\\"device\\\":null,\\\"application\\\":{\\\"language\\\":\\\"\\\"},\\\"account\\\":{\\\"bic\\\":\\\"\\\",\\\"currency\\\":\\\"\\\",\\\"iban\\\":\\\"\\\"},\\\"transactionDescription\\\":{\\\"toBeneficiary\\\":\\\"\\\",\\\"toOriginator\\\":\\\"\\\"},\\\"card\\\":{\\\"pan\\\":\\\"\\\",\\\"panExpiryDate\\\":\\\"\\\",\\\"tokenPanExpiryDate\\\":\\\"\\\",\\\"tokenPan\\\":\\\"\\\"}},\\\"sessionId\\\":\\\"G77rKInuIoARX9mnr5sYOlHnsPk=\\\",\\\"channelSelectedType\\\":\\\"10\\\",\\\"beneficiaryData\\\":{\\\"device\\\":null,\\\"application\\\":{\\\"language\\\":\\\"\\\"},\\\"account\\\":{\\\"bic\\\":\\\"\\\",\\\"iban\\\":\\\"\\\"}},\\\"institutionalEntity\\\":{\\\"institutionalId\\\":{\\\"id\\\":\\\"0018\\\"}}}}}\";\n    }\n},\n//===========================//\n// CORPORATE TOKEN CREATION  //\n//===========================//\ncreateCorpToken = function (username, password) {\n    pm.sendRequest({\n        url: \"https://security-internet.totta.\" + pm.environment.get(\"env\") + \".corp/oauth/token\",\n        method: \"POST\",\n        header: {\n            \"User-Agent\": \"PostmanRuntime/7.17.1\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: {\n            mode: 'urlencoded',\n            urlencoded: [{\n                    key: \"client_id\",\n                    value: pm.environment.get(\"tokenClientId\"),\n                    disabled: false\n                }, {\n                    key: \"client_secret\",\n                    value: pm.environment.get(\"tokenClientSecret\"),\n                    disabled: false\n                }, {\n                    key: \"grant_type\",\n                    value: \"password\",\n                    disabled: false\n                }, {\n                    key: \"username\",\n                    value: username,\n                    disabled: false\n                }, {\n                    key: \"password\",\n                    value: password,\n                    disabled: false\n                }, {\n                    key: \"role\",\n                    value: \"CorporateWeb\",\n                    disabled: false\n                }, {\n                    key: \"userLanguage\",\n                    value: \"pt\",\n                    disabled: false\n                }, {\n                    key: \"ip\",\n                    value: \"192.100.0.1\",\n                    disabled: false\n                }, {\n                    key: \"userAgent\",\n                    value: \"Nokia 3310 android\",\n                    disabled: false\n                }, {\n                    key: \"isRooted\",\n                    value: false,\n                    disabled: false\n                }\n            ]\n        }\n    },\n        function (err, res) {\n        pm.globals.set(\"accessToken\", res.json().access_token);\n    });\n},\ncreateTokenEstruturais = function (user, password, clientId) {\n    if (!clientId) {\n        clientId = pm.environment.get(\"tokenClientId\");\n    }\n    let environment = pm.environment.get(\"env\");\n    if (environment === \"local\") {\n        environment = \"dev\";\n    }\n    pm.sendRequest({\n        url: \"http://estructurais.totta.pre.corp/SSOTottaTokenAS/ws/SECMR_Def_Listener/ws/SECMR_Def_Listener\",\n        method: \"POST\",\n        header: {\n            'Content-Type': 'text/xml',\n            'SOAPAction': '\"\"'\n        },\n        body: {\n            mode: 'raw',\n            raw: \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:v1=\\\"http://www.isban.es/webservices/TECHNICAL_FACADES/Security/F_facseg_security/intranet/ACFACSEGSecurity/v1\\\"><soapenv:Header> <wsse:Security soapenv:mustUnderstand=\\\"1\\\" xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\"><wsse:UsernameToken><wsse:Username>\" + user + \"</wsse:Username><wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + password + \"</wsse:Password></wsse:UsernameToken></wsse:Security></soapenv:Header><soapenv:Body><v1:authenticateCredential facade=\\\"ACFACSEGSecurity\\\"><CB_AuthenticationData><!--Optional:--><user>\" + user + \"</user><!--Optional:--><password>\" + password + \"</password></CB_AuthenticationData><userAddress>127.0.0.1</userAddress></v1:authenticateCredential></soapenv:Body></soapenv:Envelope>\"\n        }\n    },\n        function (err, res) {\n        function arrayBufferToString(buffer) {\n            var arr = new Uint8Array(buffer);\n            var str = String.fromCharCode.apply(String, arr);\n            return str;\n        }\n        var jsonResponse = xml2Json(arrayBufferToString(res.stream));\n        var token = jsonResponse['soap-env:Envelope']['soap-env:Body']['prefixRigel0:authenticateCredentialResponse'].methodResult.tokenCredential;\n        pm.globals.set(\"accessToken\", token);\n        pm.sendRequest({\n            url: \"https://security-service.totta.\" + environment + \".corp/oauth/token\",\n            method: \"POST\",\n            header: {\n                \"User-Agent\": \"PostmanRuntime/7.17.1\",\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            body: {\n                mode: 'urlencoded',\n                urlencoded: [{\n                        key: \"client_id\",\n                        value: clientId,\n                        disabled: false\n                    }, {\n                        key: \"grant_type\",\n                        value: \"bks_token\",\n                        disabled: false\n                    }, {\n                        key: \"token\",\n                        value: pm.globals.get(\"accessToken\"),\n                        disabled: false\n                    }\n                ]\n            }\n        },\n            function (err, res) {\n            pm.globals.set(\"accessToken\", res.json().access_token);\n        });\n    });\n}"
		},
		{
			"key": "env",
			"value": "dev",
			"disabled": true
		},
		{
			"key": "catalog",
			"value": "external"
		},
		{
			"key": "role",
			"value": "Mobile"
		},
		{
			"key": "env1",
			"value": "dev"
		},
		{
			"key": "tokenClientId",
			"value": ""
		},
		{
			"key": "commonLayer",
			"value": ""
		},
		{
			"key": "localLayer",
			"value": ""
		},
		{
			"key": "channelLayer",
			"value": ""
		},
		{
			"key": "tokenClientSecret",
			"value": ""
		},
		{
			"key": "env",
			"value": ""
		},
		{
			"key": "accessToken",
			"value": ""
		}
	]
}