{
	"info": {
		"_postman_id": "7d2b63df-3949-4dae-80f6-89acbc9929eb",
		"name": "[ONEAPP] API's Login + JWT Profile PRE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3409554"
	},
	"item": [
		{
			"name": "PRE",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Login PIN",
							"item": [
								{
									"name": "1 - Challenge",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "sessionId",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "MBP",
												"type": "text"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "pin",
													"type": "text"
												},
												{
													"key": "device_id",
													"value": "000227266100034",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/challenge",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"challenge"
											]
										}
									},
									"response": []
								},
								{
									"name": "2 - Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "sessionId",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "MBP",
												"type": "text"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "pin",
													"type": "text"
												},
												{
													"key": "device_id",
													"value": "000227266100032",
													"type": "text"
												},
												{
													"key": "challenge",
													"value": "6BjUdT9fF1HwvstK0xaMGDRPWpEyzYrI",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "3 - Login JWT Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-B3-Span-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-Trace-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-TraceId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-SpanId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "client-id",
												"value": "{{client-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{access_token}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/oauth-server-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"oauth-server-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login with SCA",
							"item": [
								{
									"name": "SCA 1000585557",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"session_id\", jsonData.additional_info.session_id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "Santander-Session-Id",
												"type": "text",
												"value": "3ee1d2c-9675-42b5-9b68-b626c1c61bf8"
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "OFX"
											},
											{
												"key": "X-B3-TraceId",
												"value": "123456789",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "1000585557",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text"
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text"
												},
												{
													"key": "phone_id",
													"value": "7c540709-c17c-4767-9875-fb3af7456cd7",
													"type": "text"
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "SCA 9002539970",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"session_id\", jsonData.additional_info.session_id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "Mobile",
												"type": "text"
											},
											{
												"key": "Santander-Session-Id",
												"value": "c0d96a02-1aa8-48d1-9447-8d2ec39c155b",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client-secret-prt}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "9002539970",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text"
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text"
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "phone_id",
													"value": "6b6d6c5d-41b7-4d64-850f-ba96627e9ef4",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "SCA 8043607161",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"session_id\", jsonData.additional_info.session_id);",
													"if (jsonData.additional_info.phone_list != null && jsonData.additional_info.phone_list.length > 0) {",
													"    pm.environment.set(\"phone_id\", jsonData.additional_info.phone_list[0].uuid);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "Mobile",
												"type": "text"
											},
											{
												"key": "Santander-Session-Id",
												"value": "{{session_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client-secret-prt}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "8043607161",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text"
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text"
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "phone_id",
													"value": "{{phone_id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTP Validate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);",
													"pm.environment.set(\"customer_id\", response.customer_id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Santander-Session-Id",
												"type": "text",
												"value": "{{session_id}}"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "multi_factor",
													"type": "text"
												},
												{
													"key": "sca_code",
													"value": "654321",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text",
													"disabled": true
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "phone_id",
													"value": "4e8c088d-7114-450a-a506-082d4f599f0c",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login JWT Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-B3-Span-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-Trace-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-TraceId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-SpanId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "client-id",
												"value": "{{client-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{access_token}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/oauth-server-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"oauth-server-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "terms_and_conditions",
							"item": [
								{
									"name": "terms_and_conditions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"session_id\", jsonData.additional_info.session_id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "OFX"
											},
											{
												"key": "X-B3-TraceId",
												"value": "123456789",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "1000619611",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text"
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text"
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "SCA 9002539970",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"session_id\", jsonData.additional_info.session_id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "Mobile",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "{{client-secret-prt}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "9002539970",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text"
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text"
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "OTP Validate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Santander-Session-Id",
												"type": "text",
												"value": "{{session_id}}"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "multi_factor",
													"type": "text"
												},
												{
													"key": "sca_code",
													"value": "654321",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text",
													"disabled": true
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "WEB",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isRooted",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "osApp",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "id",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isCertificated",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ip",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "fraudData",
													"value": "{\"channel\":\"KIN\",\"refOperation\":\"\",\"codeError\":\"\",\"messageError\":\"\",\"fraud\":{\"event\":{\"originator\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"8000022653\"},\"user\":{\"authenticationMethod\":\"P\",\"certificatePresenceInd\":\"\",\"name\":\"8000022653\",\"type\":\"\",\"preparationUserName\":\"\",\"signatureRequiredCounter\":\"\"},\"corporateClientId\":\"\"},\"beneficiary\":{\"alias\":{\"name\":\"\"},\"personalInformation\":{\"name\":\"\",\"birthCountry\":\"\",\"clientToken\":\"\",\"birthDate\":\"\",\"adressDetails\":{\"address\":\"\",\"country\":\"\"},\"id\":\"\"},\"trustedIndicator\":\"\",\"user\":{\"name\":\"\"}},\"paymentEntity\":{\"reference\":\"\",\"institutionalId\":{\"id\":\"\"}}},\"result\":{\"externalResult\":{\"transactionScore\":\"\",\"ruleName\":\"\",\"refusedIndicator\":\"\"}},\"transaction\":{\"trxResponse\":{\"reasonCode\":\"\",\"authenticationAttempts\":\"1\",\"balance\":{\"currentAccountBalance\":\"\"},\"statusCode\":\"\"},\"transactionId\":{\"localDatetime\":\"2019-05-14 18:58:55\",\"datetime\":\"2019-05-14 18:58:55\",\"originalTransactionToken\":\"\",\"operationCode\":\"LOGIN\",\"transactionToken\":\"Lg20190514185855G77rKInuIoARX9mnr5sYOlHnsPk=\"},\"transactionDetails\":{\"localCurrencyAmount\":\"\",\"operationIndicator\":\"\",\"currency\":\"\",\"amount\":\"\",\"recurringIndicator\":\"\",\"strongAuthIndicator\":\"0\",\"clientType\":\"C\",\"fraudOperationCode\":\"Lg\",\"localCurrency\":\"\"}},\"context\":{\"originatorData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"currency\":\"\",\"iban\":\"\"},\"transactionDescription\":{\"toBeneficiary\":\"\",\"toOriginator\":\"\"},\"card\":{\"pan\":\"\",\"panExpiryDate\":\"\",\"tokenPanExpiryDate\":\"\",\"tokenPan\":\"\"}},\"sessionId\":\"G77rKInuIoARX9mnr5sYOlHnsPk=\",\"channelSelectedType\":\"10\",\"beneficiaryData\":{\"device\":null,\"application\":{\"language\":\"\"},\"account\":{\"bic\":\"\",\"iban\":\"\"}},\"institutionalEntity\":{\"institutionalId\":{\"id\":\"0018\"}}}}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login JWT Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-B3-Span-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-Trace-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-TraceId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-SpanId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "client-id",
												"value": "{{client-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{access_token}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/oauth-server-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"oauth-server-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Login User/Pass",
							"item": [
								{
									"name": "Login User/Pass 1000585557",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "sessionId",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "GBL",
												"type": "text"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "1000585557",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass 8043607161",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "sessionId",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "GBL",
												"type": "text"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "8043607161",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass 1000596831",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "sessionId",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"value": "GBL",
												"type": "text"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "1000596831",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass Globile5100011467",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "Globile5100011467",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass Globile1000585458",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "Globile1000585458",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass Globile2341004999",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "Globile2341004999",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass Globile9001905564 - Locked",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "Globile9001905564",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass 1000596831 - T&C",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "123"
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "1000596831",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass 8029772565",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "8029772565",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{ext-intURL}}/idp-channel/oauth/token",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User/Pass 9002539970 - SCA",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept-encoding": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "sessionId",
												"type": "text",
												"value": "9b2dc3b7-b003-4182-9c8a-2b7caf8ed297",
												"disabled": true
											},
											{
												"key": "Santander-Channel",
												"type": "text",
												"value": "GBL"
											},
											{
												"key": "Santander-Finger-Print-Elements",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Language",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Ip-Address",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Charging-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Malware-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Operating-System",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Timezone",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Latitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Longitude",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Inclination",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Browser",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Fingerprint",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Device-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Universal-Id",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-Rooted-Indicator",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Device-User-Agent",
												"type": "text",
												"value": "",
												"disabled": true
											},
											{
												"key": "Santander-Application-Language",
												"type": "text",
												"value": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "9002539970",
													"type": "text"
												},
												{
													"key": "password",
													"value": "9639639",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												},
												{
													"key": "channel",
													"value": "APP",
													"type": "text"
												},
												{
													"key": "role",
													"value": "Mobile",
													"type": "text"
												},
												{
													"key": "captcha",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scaCode",
													"value": "654321",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login JWT Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var response = JSON.parse(responseBody);",
													"",
													"pm.environment.set(\"access_token\", response.access_token);",
													"pm.environment.set(\"refresh_token\", response.refresh_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Basic  dXNlcjpwYXNzd29yZA==",
												"disabled": true
											},
											{
												"key": "X-Auth-Token",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-B3-Span-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-Trace-Id",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-TraceId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "X-B3-SpanId",
												"value": "8268c12c-c58d-123",
												"type": "text"
											},
											{
												"key": "client-id",
												"value": "{{client-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{client-id}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{access_token}}",
													"type": "text"
												},
												{
													"key": "client_secret",
													"value": "oJ6uL5cB8tX6eT4yE6gC6jV8tP0cK1iS3mE3gV3eO0nQ4wP4tX",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/oauth-server-channel/oauth/token",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"oauth-server-channel",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Logout",
							"item": [
								{
									"name": "Revoke Token",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "client-Id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "540b2e7b-9a5b-4440-a9de-230b94c675c0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "https://eeic9.apis.santander.pt/sanpt/external-intcons/idp-channel/oauth/revoke",
											"protocol": "https",
											"host": [
												"eeic9",
												"apis",
												"santander",
												"pt"
											],
											"path": [
												"sanpt",
												"external-intcons",
												"idp-channel",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Global Position",
					"item": [
						{
							"name": "Retrieve",
							"item": [
								{
									"name": "Global Position - All items",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/global_position",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=accounts",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "accounts"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Cards",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=cards",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "cards"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Loans",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=loans",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "loans"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Deposits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=deposits",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "deposits"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Pensions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=pensions",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "pensions"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - findBy Securities",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position?active_only=true&family_product=securities",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position"
											],
											"query": [
												{
													"key": "active_only",
													"value": "true"
												},
												{
													"key": "family_product",
													"value": "securities"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Global Position - All Views",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position/view",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position",
												"view"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Global Position View - Update Card Main Item success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{client-id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"accountsListView\": {\r\n       \"accountsList\": [\r\n      {\r\n        \"accountId\": \"000321426826024\",\r\n        \"alias\": \"MY CHEQUING ACCOUNT\",\r\n        \"mainItem\": \"FALSE\",\r\n        \"visibilityIndicator\": \"TRUE\"\r\n      }\r\n    ]\r\n  },\r\n  \"cardsListView\": {\r\n       \"cardsList\": [\r\n      {\r\n        \"cardId\": \"2hQnig-tlT8LMqfgJc2WeQ\",\r\n        \"alias\": \"Card for family expenses\",\r\n        \"mainItem\": \"TRUE\",\r\n        \"visibilityIndicator\": \"TRUE\"\r\n      }\r\n    ]\r\n  },\r\n  \"loansListView\": {\r\n    \"loansList\": [\r\n      {\r\n        \"loanId\": \"000320824016096\",\r\n        \"alias\": \"MY LOAN ACCOUNT\",\r\n        \"mainItem\": \"TRUE\",\r\n        \"visibilityIndicator\": \"TRUE\"\r\n      }\r\n    ]\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/v2/common/me/global_position/view",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"v2",
												"common",
												"me",
												"global_position",
												"view"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Payments",
							"item": []
						}
					]
				},
				{
					"name": "Accounts Retail",
					"item": [
						{
							"name": "Accounts list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/retail_accounts",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Account Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/retail_accounts/000031893960002",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_accounts",
										"000031893960002"
									]
								}
							},
							"response": []
						},
						{
							"name": "Account Transactions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"displayNumber\": \"PT50001800000882966400117\",\r",
											"    \"accountId\": \"000008829664001\",\r",
											"    \"transactionsDataList\": [\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019061999999\",\r",
											"                \"creationDate\": \"20190619T000000000-0000\",\r",
											"                \"processedDate\": \"20190619T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-1000.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019061999999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019061900003\",\r",
											"                \"creationDate\": \"20190619T000000000-0000\",\r",
											"                \"processedDate\": \"20190618T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-24000.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-4359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019061900003\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019061900002\",\r",
											"                \"creationDate\": \"20190619T000000000-0000\",\r",
											"                \"processedDate\": \"20190618T000000000-0000\",\r",
											"                \"description\": \"CANCEL PONTIFICE\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"24000.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"19640.62\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019061900002\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019061900001\",\r",
											"                \"creationDate\": \"20190619T000000000-0000\",\r",
											"                \"processedDate\": \"20190619T000000000-0000\",\r",
											"                \"description\": \"DEPOSITO RECIBOS (OUTROS)\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"1000.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-4359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019061900001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019060499999\",\r",
											"                \"creationDate\": \"20190604T000000000-0000\",\r",
											"                \"processedDate\": \"20190604T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-55.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019060499999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019060400001\",\r",
											"                \"creationDate\": \"20190604T000000000-0000\",\r",
											"                \"processedDate\": \"20190604T000000000-0000\",\r",
											"                \"description\": \"TRANSF.DO/CRT31003190856220011\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"55.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5304.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019060400001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019053099999\",\r",
											"                \"creationDate\": \"20190530T000000000-0000\",\r",
											"                \"processedDate\": \"20190530T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019053099999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019053000001\",\r",
											"                \"creationDate\": \"20190530T000000000-0000\",\r",
											"                \"processedDate\": \"20190530T000000000-0000\",\r",
											"                \"description\": \"SUBSCRIÇÃO SANTPOUPPRUDENTEFPR\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5384.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019053000001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019052899999\",\r",
											"                \"creationDate\": \"20190528T000000000-0000\",\r",
											"                \"processedDate\": \"20190524T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-5.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019052899999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019052399999\",\r",
											"                \"creationDate\": \"20190523T000000000-0000\",\r",
											"                \"processedDate\": \"20190524T000000000-0000\",\r",
											"                \"description\": \"TRF CRED INTRABANC DE ISABEL COM CARTAO-02210422\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"5.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5354.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019052399999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019050399999\",\r",
											"                \"creationDate\": \"20190503T000000000-0000\",\r",
											"                \"processedDate\": \"20190430T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019050399999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019050300001\",\r",
											"                \"creationDate\": \"20190503T000000000-0000\",\r",
											"                \"processedDate\": \"20190430T000000000-0000\",\r",
											"                \"description\": \"ORD PERM INTRABANCARIA P/ ISABEL FUSAO CL-03842172\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5371.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019050300001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019042999999\",\r",
											"                \"creationDate\": \"20190429T000000000-0000\",\r",
											"                \"processedDate\": \"20190429T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019042999999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019042900001\",\r",
											"                \"creationDate\": \"20190429T000000000-0000\",\r",
											"                \"processedDate\": \"20190429T000000000-0000\",\r",
											"                \"description\": \"SUBSCRIÇÃO SANTPOUPPRUDENTEFPR\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5384.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019042900001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019041199999\",\r",
											"                \"creationDate\": \"20190411T000000000-0000\",\r",
											"                \"processedDate\": \"20190411T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-1.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019041199999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019041100001\",\r",
											"                \"creationDate\": \"20190411T000000000-0000\",\r",
											"                \"processedDate\": \"20190411T000000000-0000\",\r",
											"                \"description\": \"TRF CRED INTRABANC DE ISABEL FUSAO CLIENT-02210324\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"1.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5358.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019041100001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019040499999\",\r",
											"                \"creationDate\": \"20190404T000000000-0000\",\r",
											"                \"processedDate\": \"20190404T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"250.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019040499999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019040400001\",\r",
											"                \"creationDate\": \"20190404T000000000-0000\",\r",
											"                \"processedDate\": \"20190404T000000000-0000\",\r",
											"                \"description\": \"PAG.CTA.CART.31003171531060011\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-250.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5609.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019040400001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019032899999\",\r",
											"                \"creationDate\": \"20190328T000000000-0000\",\r",
											"                \"processedDate\": \"20190328T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019032899999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019032800001\",\r",
											"                \"creationDate\": \"20190328T000000000-0000\",\r",
											"                \"processedDate\": \"20190328T000000000-0000\",\r",
											"                \"description\": \"SUBSCRIÇÃO SANTPOUPPRUDENTEFPR\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5384.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019032800001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019031399999\",\r",
											"                \"creationDate\": \"20190313T000000000-0000\",\r",
											"                \"processedDate\": \"20190313T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"824.21\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019031399999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019031300001\",\r",
											"                \"creationDate\": \"20190313T000000000-0000\",\r",
											"                \"processedDate\": \"20190313T000000000-0000\",\r",
											"                \"description\": \"5544356-00-PAG.CTA.CARTAO\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-824.21\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-6183.59\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019031300001\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019031199999\",\r",
											"                \"creationDate\": \"20190311T000000000-0000\",\r",
											"                \"processedDate\": \"20190311T000000000-0000\",\r",
											"                \"description\": \"CASH POOLING.31000004042162001\",\r",
											"                \"transactionType\": \"CREDIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"289.82\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5359.38\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019031199999\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019031100017\",\r",
											"                \"creationDate\": \"20190311T000000000-0000\",\r",
											"                \"processedDate\": \"20190311T000000000-0000\",\r",
											"                \"description\": \"SUBSCRIÇÃO SANTPOUPPRUDENTEFPR\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5649.20\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019031100017\"\r",
											"        },\r",
											"        {\r",
											"            \"transactionDetails\": {\r",
											"                \"transactionID\": \"2019031100016\",\r",
											"                \"creationDate\": \"20190311T000000000-0000\",\r",
											"                \"processedDate\": \"20190311T000000000-0000\",\r",
											"                \"description\": \"SUBSCRIÇÃO SANTPOUPPRUDENTEFPR\",\r",
											"                \"transactionType\": \"DEBIT\",\r",
											"                \"amount\": {\r",
											"                    \"amount\": \"-25.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"balanceResult\": {\r",
											"                    \"amount\": \"-5624.20\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                }\r",
											"            },\r",
											"            \"transactionDetailsLink\": \"/me/accounts/000008829664001/transactions/2019031100016\"\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"accountDetailsLink\": \"/me/accounts/000008829664001\",\r",
											"        \"_first\": \"/me/accounts/000008829664001/transactions?_limit=25&from_date=20190101T000000000-0000&to_date=20190620T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/accounts/000008829664001/transactions?_limit=25&from_date=20190101T000000000-0000&to_date=20190620T000000000-0000&_offset=25&_sort=-date\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-forwarded-host",
										"value": "srvapigdvlsu01.mx.santanderus.dev.corp",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-forwarded-port",
										"value": "943",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "##Otp-Id##8cacdd65-481e-4072-8b40-2204a49aebbd##Otp##654321##",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/retail_accounts/000031893960002/transactions?from_date=20210601T000000000-0000",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_accounts",
										"000031893960002",
										"transactions"
									],
									"query": [
										{
											"key": "_limit",
											"value": "25",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "20200720T000000000-0000",
											"disabled": true
										},
										{
											"key": "from_date",
											"value": "20210601T000000000-0000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PASSO 1 SCA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"SCA-ID\", pm.response.json().scaId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-forwarded-host",
										"value": "srvapigdvlsu01.mx.santanderus.dev.corp",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-forwarded-port",
										"value": "943",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "##Otp-Id##8cacdd65-481e-4072-8b40-2204a49aebbd##Otp##654321##",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/retail_accounts/000354456439020/transactions?from_date=20200815T000000000-0000&to_date=20210105T000000000-0000",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_accounts",
										"000354456439020",
										"transactions"
									],
									"query": [
										{
											"key": "_limit",
											"value": "25",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "20200720T000000000-0000",
											"disabled": true
										},
										{
											"key": "from_date",
											"value": "20200815T000000000-0000"
										},
										{
											"key": "to_date",
											"value": "20210105T000000000-0000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PASSO 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "x-forwarded-host",
										"value": "srvapigdvlsu01.mx.santanderus.dev.corp",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-forwarded-port",
										"value": "943",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "##Otp-Id##8cacdd65-481e-4072-8b40-2204a49aebbd##Otp##654321##",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/retail_accounts/000354553128020/transactions?otpCode=654321&from_date=20200815T000000000-0000&to_date=20210105T000000000-0000&scaId={{SCA-ID}}",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_accounts",
										"000354553128020",
										"transactions"
									],
									"query": [
										{
											"key": "otpCode",
											"value": "654321"
										},
										{
											"key": "_limit",
											"value": "25",
											"disabled": true
										},
										{
											"key": "from_date",
											"value": "20200815T000000000-0000"
										},
										{
											"key": "to_date",
											"value": "20210105T000000000-0000"
										},
										{
											"key": "scaId",
											"value": "{{SCA-ID}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bank & Branches",
					"item": [
						{
							"name": "Get Bank information",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/banks_branches/banks/0018/branch?branch_id=0231",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"banks_branches",
										"banks",
										"0018",
										"branch"
									],
									"query": [
										{
											"key": "branch_id",
											"value": "0231"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Calculate Bank",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Contract-Id",
										"value": "PT50001800035433149102053",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/banks_branches/banks/bank_calculate?contract_type=IBAN",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"banks_branches",
										"banks",
										"bank_calculate"
									],
									"query": [
										{
											"key": "contract_type",
											"value": "IBAN"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Customers",
					"item": [
						{
							"name": "Get Customer Manager",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"accountsDataList\": [\r",
											"        {\r",
											"            \"displayNumber\": \"PT50001800032142682602453\",\r",
											"            \"accountId\": \"000321426826024\",\r",
											"            \"alias\": \"hncg5\",\r",
											"            \"type\": \"Current Account\",\r",
											"            \"description\": \"DEP.ORDEM M.E.\",\r",
											"            \"status\": \"Open\",\r",
											"            \"customerId\": \"1000585557\",\r",
											"            \"mainBalance\": {\r",
											"                \"amount\": \"1831.75\",\r",
											"                \"currencyCode\": \"CHF\"\r",
											"            },\r",
											"            \"availableBalance\": {\r",
											"                \"amount\": \"1831.75\",\r",
											"                \"currencyCode\": \"CHF\"\r",
											"            },\r",
											"            \"_links\": {\r",
											"                \"accountDetailsLink\": \"/me/accounts/000321426826024\",\r",
											"                \"transactionsListLink\": \"/me/accounts/000321426826024/transactions\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"displayNumber\": \"PT50001800032142683402412\",\r",
											"            \"accountId\": \"000321426834024\",\r",
											"            \"alias\": \"000321426834024\",\r",
											"            \"type\": \"Current Account\",\r",
											"            \"description\": \"DEP.ORDEM M.E.\",\r",
											"            \"status\": \"Open\",\r",
											"            \"customerId\": \"1000585557\",\r",
											"            \"mainBalance\": {\r",
											"                \"amount\": \"7296.67\",\r",
											"                \"currencyCode\": \"GBP\"\r",
											"            },\r",
											"            \"availableBalance\": {\r",
											"                \"amount\": \"7272.57\",\r",
											"                \"currencyCode\": \"GBP\"\r",
											"            },\r",
											"            \"_links\": {\r",
											"                \"accountDetailsLink\": \"/me/accounts/000321426834024\",\r",
											"                \"transactionsListLink\": \"/me/accounts/000321426834024/transactions\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"displayNumber\": \"PT50001800032142740202411\",\r",
											"            \"accountId\": \"000321427402024\",\r",
											"            \"alias\": \"OpenBanking3\",\r",
											"            \"type\": \"Current Account\",\r",
											"            \"description\": \"DEP.ORDEM M.E.\",\r",
											"            \"status\": \"Open\",\r",
											"            \"customerId\": \"1000585557\",\r",
											"            \"mainBalance\": {\r",
											"                \"amount\": \"12740.33\",\r",
											"                \"currencyCode\": \"CHF\"\r",
											"            },\r",
											"            \"availableBalance\": {\r",
											"                \"amount\": \"12740.33\",\r",
											"                \"currencyCode\": \"CHF\"\r",
											"            },\r",
											"            \"_links\": {\r",
											"                \"accountDetailsLink\": \"/me/accounts/000321427402024\",\r",
											"                \"transactionsListLink\": \"/me/accounts/000321427402024/transactions\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"displayNumber\": \"PT50001800035432930502036\",\r",
											"            \"accountId\": \"000354329305020\",\r",
											"            \"alias\": \"Conta eur1\",\r",
											"            \"type\": \"Current Account\",\r",
											"            \"description\": \"D.O. - PARTICULARES\",\r",
											"            \"status\": \"Open\",\r",
											"            \"customerId\": \"1000585557\",\r",
											"            \"mainBalance\": {\r",
											"                \"amount\": \"566336.02\",\r",
											"                \"currencyCode\": \"EUR\"\r",
											"            },\r",
											"            \"availableBalance\": {\r",
											"                \"amount\": \"564444.09\",\r",
											"                \"currencyCode\": \"EUR\"\r",
											"            },\r",
											"            \"_links\": {\r",
											"                \"accountDetailsLink\": \"/me/accounts/000354329305020\",\r",
											"                \"transactionsListLink\": \"/me/accounts/000354329305020/transactions\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"displayNumber\": \"PT50001800035433037802078\",\r",
											"            \"accountId\": \"000354330378020\",\r",
											"            \"alias\": \"000354330378020\",\r",
											"            \"type\": \"Current Account\",\r",
											"            \"description\": \"D.O. - PARTICULARES\",\r",
											"            \"status\": \"Open\",\r",
											"            \"customerId\": \"1000585557\",\r",
											"            \"mainBalance\": {\r",
											"                \"amount\": \"79716.10\",\r",
											"                \"currencyCode\": \"EUR\"\r",
											"            },\r",
											"            \"availableBalance\": {\r",
											"                \"amount\": \"79716.10\",\r",
											"                \"currencyCode\": \"EUR\"\r",
											"            },\r",
											"            \"_links\": {\r",
											"                \"accountDetailsLink\": \"/me/accounts/000354330378020\",\r",
											"                \"transactionsListLink\": \"/me/accounts/000354330378020/transactions\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/accounts?_limit=5\",\r",
											"        \"_next\": \"/me/accounts?_limit=5&_offset=5\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Customer-Id",
										"value": "8043607161",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/customers/managers?modality_portfolio=commercial",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"customers",
										"managers"
									],
									"query": [
										{
											"key": "modality_portfolio",
											"value": "commercial"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Customer Details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/customers",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Customer Contacts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/customers/c20736931f796d44966d629764494446c69dd9ffbe2bc9d5a05e4f0d757b73e3/contacts",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"customers",
										"c20736931f796d44966d629764494446c69dd9ffbe2bc9d5a05e4f0d757b73e3",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Standing Orders",
					"item": [
						{
							"name": "Create Standing Order",
							"item": [
								{
									"name": "Success",
									"item": [
										{
											"name": "1- Fraud: Evaluate",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var soAmount = 5.52;\r",
															"var soIbanOriginator = \"PT50001800035445643902096\";\r",
															"var soIbanBeneficiary = \"PT50001800035445186902019\";\r",
															"\r",
															"let soPayload = \r",
															"{\r",
															"   \"standingOrdersInformation\":{\r",
															"      \"bankHolidayRule\":\"prev_day\",\r",
															"      \"standingOrderDayType\":[\r",
															"         {\r",
															"            \"byDayName\":{\r",
															"               \"dayName\":\"monday\",\r",
															"               \"orderInPeriod\":\"1st\"\r",
															"            },\r",
															"            \"byDayNumber\":\"2\"\r",
															"         }\r",
															"      ],\r",
															"      \"standingOrderEndDate\":\"2022-01-19\",\r",
															"      \"standingOrderPeriod\":\"monthly\",\r",
															"      \"standingOrderStartDate\":\"2021-04-06\"\r",
															"   },\r",
															"   \"transferInformation\":{\r",
															"      \"chargeBearer\": \"OUR\",\r",
															"      \"countryDestinationFunds\":\"PT\",\r",
															"      \"creditorCreditAccount\":{\r",
															"         \"accountId\":soIbanBeneficiary,\r",
															"         \"accountIdType\":\"IBAN\"\r",
															"      },\r",
															"      \"creditorName\":\"\",\r",
															"      \"debtorAccount\":{\r",
															"         \"accountId\":soIbanOriginator,\r",
															"         \"accountIdType\":\"IBAN\"\r",
															"      },\r",
															"      \"paymentAmount\":{\r",
															"         \"amount\":soAmount,\r",
															"         \"currency\":\"EUR\"\r",
															"      },\r",
															"      \"subject\":\"\",\r",
															"      \"urgencyIndicator\":\"Immediate\"\r",
															"   }\r",
															"}\r",
															"\r",
															"\r",
															"var soAmountStr = JSON.stringify(soAmount);\r",
															"\r",
															"let fraudMetadata = {\r",
															"            \"event\": {\r",
															"                \"originator\": {\r",
															"                    \"personalInformation\": {\r",
															"                        \"id\": \"1000585557\"\r",
															"                    },\r",
															"                    \"user\": {\r",
															"                        \"name\": \"EDITE FAGUNDES\"\r",
															"                    },\r",
															"                    \"corporateClientId\": \"1000585557\"\r",
															"                },\r",
															"                \"beneficiary\": {\r",
															"                    \"trustedIndicator\": \"0\"\r",
															"                },\r",
															"                \r",
															"            },\r",
															"            \"transaction\": {\r",
															"                \"trxResponse\": {\r",
															"                    \"authenticationAttempts\": \"1\",\r",
															"                    \"balance\": {\r",
															"                        \"currentAccountBalance\": \"6328951.19\",\r",
															"                        \"accntsQty\": \"37\"\r",
															"                    }\r",
															"                },\r",
															"                \"transactionId\": {\r",
															"                    \"localDatetime\": \"2019-05-20 15:14:40\",\r",
															"                    \"datetime\": \"2020-09-26 18:11:35\",\r",
															"                    \"operationCode\": \"APGSRV\"\r",
															"                },\r",
															"                \"transactionDetails\": {\r",
															"                    \"localCurrencyAmount\": \"5.00\",\r",
															"                    \"currency\": \"EUR\",\r",
															"                    \"amount\": soAmountStr,\r",
															"                    \"strongAuthIndicator\": \"0\",\r",
															"                    \"clientType\": \"C_\",\r",
															"                    \"fraudOperationCode\": \"Ps\",\r",
															"                    \"localCurrency\": \"EUR\"\r",
															"                }\r",
															"            },\r",
															"            \"context\": {\r",
															"                \"originatorData\": {\r",
															"                    \"device\": {\r",
															"                        \"fingerprint\": \"17d9d133e406b31b58c65f4f3abaffa6\",\r",
															"                        \"userAgent\": \"mozilla/5.0 (windows nt 6.1; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/73.0.3683.75 safari/537.36\"\r",
															"                    },\r",
															"                    \"application\": {\r",
															"                        \"language\": \"pt-PT\"\r",
															"                    },\r",
															"                    \"account\": {\r",
															"                        \"bic\": \"TOTAPTP0\",\r",
															"                        \"currency\": \"EUR\",\r",
															"                        \"iban\": soIbanOriginator\r",
															"                    }\r",
															"                },\r",
															"                \"sessionId\": \"hQjrFsChmXTv83Pem8mkbK5\",\r",
															"                \"channelSelectedType\": \"03\",\r",
															"                \"beneficiaryData\":{\r",
															"                    \"device\":null,\r",
															"                    \"application\":null,\r",
															"                    \"account\":{\r",
															"                        \"bic\":\"CCCMPTPL\",\r",
															"                        \"iban\":soIbanBeneficiary\r",
															"                    }\r",
															"                },\r",
															"                \"institutionalEntity\": {\r",
															"                    \"institutionalId\": {\r",
															"                        \"id\": \"0018\"\r",
															"                    }\r",
															"                }\r",
															"            }\r",
															"    }\r",
															"\r",
															"// Cleaning the environment:\r",
															"pm.environment.unset('standingOrdersPayload');\r",
															"pm.environment.unset('encryptedSOPayload');\r",
															"pm.environment.unset('soAmount');\r",
															"pm.environment.unset('soIbanOriginator');\r",
															"pm.environment.unset('soIbanBeneficiary');\r",
															"pm.environment.unset('metadata');\r",
															"\r",
															"pm.globals.unset(\"Fraud-Token\");\r",
															"pm.globals.unset(\"SCA-Request-Token\");\r",
															"pm.globals.unset(\"SCA-ID\");\r",
															"pm.globals.unset(\"SCA-JWT\");\r",
															"pm.environment.unset(\"Fraud-Token\");\r",
															"pm.environment.unset(\"SCA-Request-Token\");\r",
															"pm.environment.unset(\"SCA-ID\");\r",
															"pm.environment.unset(\"SCA-JWT\");\r",
															"\r",
															"// Setting globals:\r",
															"pm.globals.set('standingOrdersPayload', JSON.stringify(soPayload));\r",
															"pm.globals.set('encryptedSOPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account}#{}#\" + JSON.stringify(soPayload))));\r",
															"pm.globals.set('soAmount', soAmount);\r",
															"pm.globals.set('soIbanOriginator', soIbanOriginator);\r",
															"pm.globals.set('soIbanBeneficiary', soIbanBeneficiary);\r",
															"pm.globals.set('metadata', JSON.stringify(JSON.stringify(fraudMetadata)));\r",
															"\r",
															"// Logging globals:\r",
															"console.log('standingOrdersPayload: ' + pm.globals.get('standingOrdersPayload'));\r",
															"console.log('encryptedSOPayload: ' + pm.globals.get('encryptedSOPayload'));\r",
															"console.log('amount: ' + pm.globals.get('soAmount'));\r",
															"console.log('ibanOriginator: ' + pm.globals.get('soIbanOriginator'));\r",
															"console.log('ibanBeneficiary: ' + pm.globals.get('soIbanBeneficiary'));\r",
															"console.log('metadata: ' + pm.globals.get('metadata'));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"fraudId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"referenceId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"customerId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"operationType\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"operationSubtype\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"metaData\": {\r",
															"      \"type\": \"object\"\r",
															"    },\r",
															"    \"callType\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"score\": {\r",
															"      \"type\": \"integer\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"operationType\",\r",
															"    \"operationSubtype\",\r",
															"    \"metaData\",\r",
															"    \"callType\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"Fraud-Token\", pm.response.headers.get(\"Fraud-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "device-info-token",
														"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
														"type": "text"
													},
													{
														"key": "access-channel",
														"value": "mobile",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"fraudId\": \"\",\n    \"operationType\": \"161\",\n    \"operationSubtype\": \"BB\",\n    \"callType\": \"02\",\n    \"metaData\": {{metadata}}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/fraud/evaluate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"fraud",
														"evaluate"
													]
												}
											},
											"response": []
										},
										{
											"name": "2- SCA: Generate SCA",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"errors\": {\r",
															"      \"type\": \"array\",\r",
															"      \"items\": [\r",
															"        {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"code\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"message\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"level\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"description\": {\r",
															"              \"type\": \"string\"\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"code\",\r",
															"            \"message\",\r",
															"            \"level\",\r",
															"            \"description\"\r",
															"          ]\r",
															"        }\r",
															"      ]\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"errors\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 409\", function () {\r",
															"  pm.response.to.have.status(409);\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Access-channel",
														"type": "text",
														"value": "web"
													},
													{
														"key": "Account-id",
														"type": "text",
														"value": "PT50001800035433114502020"
													},
													{
														"key": "Fraud-Token",
														"type": "text",
														"value": "{{Fraud-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{standingOrdersPayload}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account"
													]
												}
											},
											"response": []
										},
										{
											"name": "3- SCA: Execute SCA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"const responseJson = pm.response.json();\r",
															"pm.globals.set(\"SCA-ID\", responseJson.scaId);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceId\": \"accounts_transactions\",\n    \"payLoadOperationRequesting\": \"{{encryptedSOPayload}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication"
													]
												}
											},
											"response": []
										},
										{
											"name": "4- SCA: Validate OTP",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\",\r",
															"    \"status\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-JWT\", pm.response.headers.get(\"Sca-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"embeddedSystem\":\"otp\",\n    \"serviceId\":\"accounts_transactions\",\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication/{{SCA-ID}}/validate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication",
														"{{SCA-ID}}",
														"validate"
													]
												}
											},
											"response": []
										},
										{
											"name": "5- Create Standing Order",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"requestBodyForPost\": {\r",
															"      \"type\": \"object\",\r",
															"      \"properties\": {\r",
															"        \"transferInformation\": {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"creditorName\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"creditorCreditAccount\": {\r",
															"              \"type\": \"object\",\r",
															"              \"properties\": {\r",
															"                \"accountIdType\": {\r",
															"                  \"type\": \"string\",\r",
															"\t\t  \"pattern\": \"^IBAN$\"\r",
															"                },\r",
															"                \"accountId\": {\r",
															"                  \"type\": \"string\",\r",
															"\t\t\"pattern\": \"^PT50\\\\d{21}$\"\r",
															"                }\r",
															"              },\r",
															"              \"required\": [\r",
															"                \"accountIdType\",\r",
															"                \"accountId\"\r",
															"              ]\r",
															"            },\r",
															"            \"countryDestinationFunds\": {\r",
															"              \"type\": \"string\",\r",
															"\t\t\"pattern\": \"^PT$\"\r",
															"            },\r",
															"            \"debtorAccount\": {\r",
															"              \"type\": \"object\",\r",
															"              \"properties\": {\r",
															"                \"accountIdType\": {\r",
															"                  \"type\": \"string\",\r",
															"\t\t\"pattern\": \"^IBAN$\"\r",
															"                },\r",
															"                \"accountId\": {\r",
															"                  \"type\": \"string\"\r",
															"                }\r",
															"              },\r",
															"              \"required\": [\r",
															"                \"accountIdType\",\r",
															"                \"accountId\"\r",
															"              ]\r",
															"            },\r",
															"            \"paymentAmount\": {\r",
															"              \"type\": \"object\",\r",
															"              \"properties\": {\r",
															"                \"currency\": {\r",
															"                  \"type\": \"string\",\r",
															"                \"pattern\": \"^EUR$\"\r",
															"                },\r",
															"                \"amount\": {\r",
															"                  \"type\": \"number\",\r",
															"                \"minimum\": 0\r",
															"                }\r",
															"              },\r",
															"              \"required\": [\r",
															"                \"currency\",\r",
															"                \"amount\"\r",
															"              ]\r",
															"            },\r",
															"            \"urgencyIndicator\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^Standard$\"\r",
															"            },\r",
															"            \"subject\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^Bank statement$\"\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"creditorName\",\r",
															"            \"creditorCreditAccount\",\r",
															"            \"countryDestinationFunds\",\r",
															"            \"debtorAccount\",\r",
															"            \"paymentAmount\",\r",
															"            \"urgencyIndicator\",\r",
															"            \"subject\"\r",
															"          ]\r",
															"        },\r",
															"        \"standingOrdersInformation\": {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"standingOrderPeriod\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^monthly$\"\r",
															"            },\r",
															"            \"bankHolidayRule\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^prev_day$\"\r",
															"            },\r",
															"            \"standingOrderStartDate\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\"\r",
															"            },\r",
															"            \"standingOrderEndDate\": {\r",
															"              \"type\": \"string\",\r",
															"            \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\"\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"standingOrderPeriod\",\r",
															"            \"bankHolidayRule\",\r",
															"            \"standingOrderStartDate\",\r",
															"            \"standingOrderEndDate\"\r",
															"          ]\r",
															"        }\r",
															"      },\r",
															"      \"required\": [\r",
															"        \"transferInformation\",\r",
															"        \"standingOrdersInformation\"\r",
															"      ]\r",
															"    },\r",
															"    \"standingOrderAccountId\": {\r",
															"      \"type\": \"string\",\r",
															"      \"pattern\": \"\\\\d*\"\r",
															"    },\r",
															"    \"standingOrderStatus\": {\r",
															"      \"type\": \"string\",\r",
															"      \"pattern\": \"^active$\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"requestBodyForPost\",\r",
															"    \"standingOrderAccountId\",\r",
															"    \"standingOrderStatus\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Access-channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Account-id",
														"value": "PT50001800035433114502020",
														"type": "text"
													},
													{
														"key": "Fraud-Token",
														"value": "{{Fraud-Token}}",
														"type": "text"
													},
													{
														"key": "Sca-Token",
														"value": "{{SCA-JWT}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{standingOrdersPayload}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Delete Standing Order",
							"item": [
								{
									"name": "Sucess",
									"item": [
										{
											"name": "1- Delete Standing Order",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.globals.set(\"Delete-SO-SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Account-Id",
														"value": "001800035433149102053",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "BBAN",
														"type": "text"
													},
													{
														"key": "Access-channel",
														"value": "Web",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account/10804993",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account",
														"10804993"
													],
													"query": [
														{
															"key": "isTest",
															"value": "false",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2 - SCA: Execute SCA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"console.log(\"instantPaymentScaEncryptedPayload: \" + JSON.stringify(pm.globals.get(\"instantPaymentScaEncryptedPayload\")));\r",
															"console.log(\"instantPaymentSCAToken: \" + JSON.stringify(pm.globals.get(\"instantPaymentSCAToken\")));\r",
															"\r",
															"let soPayload = \"{}\"\r",
															"\r",
															"// Setting globals:\r",
															"pm.globals.set('standingOrdersPayload', JSON.stringify(soPayload));\r",
															"pm.globals.set('encryptedCardsInfoPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account/10804993}#{}#\" + soPayload)));\r",
															"\r",
															"console.log(\"soPayload: \" + JSON.stringify(pm.globals.get(\"soPayload\")));\r",
															"console.log(\"encryptedCardsInfoPayload: \" + JSON.stringify(pm.globals.get(\"encryptedCardsInfoPayload\")));\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"const responseJson = pm.response.json();\r",
															"pm.globals.set(\"SCA-SO-ID\", responseJson.scaId);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{Delete-SO-SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceId\": \"standing_orders\",\n    \"payLoadOperationRequesting\": \"{{encryptedCardsInfoPayload}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication"
													]
												}
											},
											"response": []
										},
										{
											"name": "3- SCA: Validate OTP",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\",\r",
															"    \"status\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-SO-JWT\", pm.response.headers.get(\"Sca-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{Delete-SO-SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"embeddedSystem\":\"otp\",\n    \"serviceId\":\"standing_orders\",\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication/{{SCA-SO-ID}}/validate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication",
														"{{SCA-SO-ID}}",
														"validate"
													]
												}
											},
											"response": []
										},
										{
											"name": "4 - Delete Standing Order",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.globals.set(\"Delete-SO-SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Account-Id",
														"value": "001800035433149102053",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "BBAN",
														"type": "text"
													},
													{
														"key": "Access-channel",
														"value": "Web",
														"type": "text"
													},
													{
														"key": "Sca-Token",
														"value": "{{SCA-SO-JWT}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account/10804993",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account",
														"10804993"
													],
													"query": [
														{
															"key": "isTest",
															"value": "false",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Response body is null\", function () {",
													"    pm.responseBody === null",
													"})"
												]
											}
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Update Standing Orders",
							"item": [
								{
									"name": "Sucess",
									"item": [
										{
											"name": "1 - Edit Standing Order",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var soAmount = 10.52;\r",
															"var soIbanOriginator = \"PT50001800035433149102012\";\r",
															"var soIbanBeneficiary = \"PT50003300000019333254405\";\r",
															"\r",
															"let soEditPayload = \r",
															"{\r",
															"   \"standingOrdersInformation\":{\r",
															"      \"bankHolidayRule\":\"prev_day\",\r",
															"      \"standingOrderDayType\":[\r",
															"         {\r",
															"            \"byDayName\":{\r",
															"               \"dayName\":\"monday\",\r",
															"               \"orderInPeriod\":\"1st\"\r",
															"            },\r",
															"            \"byDayNumber\":\"2\"\r",
															"         }\r",
															"      ],\r",
															"      \"standingOrderEndDate\":\"2020-12-28\",\r",
															"      \"standingOrderPeriod\":\"monthly\",\r",
															"      \"standingOrderStartDate\":\"2020-12-20\"\r",
															"   },\r",
															"   \"transferInformation\":{\r",
															"      \"chargeBearer\": \"OUR\",\r",
															"      \"countryDestinationFunds\":\"PT\",\r",
															"      \"creditorCreditAccount\":{\r",
															"         \"accountId\":soIbanBeneficiary,\r",
															"         \"accountIdType\":\"IBAN\"\r",
															"      },\r",
															"      \"creditorName\":\"\",\r",
															"      \"debtorAccount\":{\r",
															"         \"accountId\":soIbanOriginator,\r",
															"         \"accountIdType\":\"IBAN\"\r",
															"      },\r",
															"      \"paymentAmount\":{\r",
															"         \"amount\":soAmount,\r",
															"         \"currency\":\"EUR\"\r",
															"      },\r",
															"      \"subject\":\"\",\r",
															"      \"urgencyIndicator\":\"Standard\"\r",
															"   }\r",
															"}\r",
															"\r",
															"// Setting globals:\r",
															"pm.globals.set('soEditPayload', JSON.stringify(soEditPayload));\r",
															"pm.globals.set('encryptedEditSOPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account/10812253}#{}#\" + JSON.stringify(soEditPayload))));\r",
															"\r",
															"\r",
															"console.log(\"soEditPayload: \" + JSON.stringify(pm.globals.get(\"soEditPayload\")));\r",
															"console.log(\"encryptedEditSOPayload: \" + JSON.stringify(pm.globals.get(\"encryptedEditSOPayload\")));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.globals.set(\"Update-SO-SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Account-Id",
														"value": "PT50001800035433149102012",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "IBAN",
														"type": "text"
													},
													{
														"key": "Access-channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Fraud-Token",
														"value": "{{Fraud-Token}}",
														"type": "text"
													},
													{
														"key": "Sca-Token",
														"value": "{{SCA-JWT}}",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{soEditPayload}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account/10812253",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account",
														"10812253"
													]
												}
											},
											"response": []
										},
										{
											"name": "2 - SCA: Execute SCA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"const responseJson = pm.response.json();\r",
															"pm.globals.set(\"SCA-EDIT-SO-ID\", responseJson.scaId);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{Update-SO-SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"serviceId\": \"standing_orders\",\n    \"payLoadOperationRequesting\": \"{{encryptedEditSOPayload}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication"
													]
												}
											},
											"response": []
										},
										{
											"name": "3- SCA: Validate OTP",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\",\r",
															"    \"status\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-EDIT-SO-JWT\", pm.response.headers.get(\"Sca-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Client-Id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{Update-SO-SCA-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"embeddedSystem\":\"otp\",\n    \"serviceId\":\"standing_orders\",\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication/{{SCA-EDIT-SO-ID}}/validate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication",
														"{{SCA-EDIT-SO-ID}}",
														"validate"
													]
												}
											},
											"response": []
										},
										{
											"name": "4 - Edit Standing Order",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"var soAmount = 40.3;\r",
															"var soIbanOriginator = \"PT50001800035433149102012\";\r",
															"var soIbanBeneficiary = \"PT50003300000019333254405\";\r",
															"\r",
															"let soPayload = {\r",
															"    \"transferInformation\": {\r",
															"        \"chargeBearer\": \"OUR\",\r",
															"        \"creditorCreditAccount\": {\r",
															"            \"accountIdType\": \"IBAN\",\r",
															"            \"accountId\": \"PT50003300000019333254405\"\r",
															"        },\r",
															"        \"countryDestinationFunds\": \"PT\",\r",
															"        \"debtorAccount\": {\r",
															"            \"accountIdType\": \"IBAN\",\r",
															"            \"accountId\": \"PT50001800035433114502020\"\r",
															"        },\r",
															"        \"paymentAmount\": {\r",
															"            \"currency\": \"EUR\",\r",
															"            \"amount\": 40.3\r",
															"        },\r",
															"        \"urgencyIndicator\": \"STANDARD\"\r",
															"    },\r",
															"    \"standingOrdersInformation\": {\r",
															"        \"standingOrderPeriod\": \"WEEK\",\r",
															"        \"bankHolidayRule\": \"PREV_DAY\",\r",
															"        \"standingOrderStartDate\": \"\",\r",
															"        \"standingOrderEndDate\": \"\"\r",
															"    }\r",
															"}\r",
															"\r",
															"// Setting globals:\r",
															"pm.globals.set('soPayload', JSON.stringify(soPayload));\r",
															"pm.environment.set('encryptedSOPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/standing_orders_account/10811307}#{}#\" + JSON.stringify(soPayload))));\r",
															"\r",
															"\r",
															"console.log(\"soPayload: \" + JSON.stringify(pm.globals.get(\"soPayload\")));\r",
															"console.log(\"encryptedSOPayload: \" + JSON.stringify(pm.globals.get(\"encryptedSOPayload\")));"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.globals.set(\"Update-SO-SCA-Request-Token\", pm.response.headers.get(\"Token-Request\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "tokenType",
															"value": "",
															"type": "string"
														},
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Account-Id",
														"value": "PT50001800035433149102012",
														"type": "text"
													},
													{
														"key": "Account-Type",
														"value": "IBAN",
														"type": "text"
													},
													{
														"key": "Access-channel",
														"value": "web",
														"type": "text"
													},
													{
														"key": "Fraud-Token",
														"value": "{{Fraud-Token}}",
														"type": "text"
													},
													{
														"key": "Sca-Token",
														"value": "{{SCA-EDIT-SO-JWT}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{{soEditPayload}}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/standing_orders_account/10811307",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"standing_orders_account",
														"10811307"
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Test\", () => {",
											"    var expected = pm.globals.get(\"expectedResponse\");",
											"    var result = pm.response.json();",
											"",
											"    if (result.details && result.details.trxNumber) {",
											"        delete result.details.trxNumber;",
											"    }",
											"",
											"    pm.expect(_.isEqual(result, expected)).to.be.true;",
											"});"
										]
									}
								}
							]
						},
						{
							"name": "Standing Orders",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Account-Id",
										"value": "PT50001800035433149102053",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "Mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/standing_orders_account?_sort=executionNumber",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"standing_orders_account"
									],
									"query": [
										{
											"key": "_offset",
											"value": "0",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "500",
											"disabled": true
										},
										{
											"key": "standing_creditor_name",
											"value": "Transf Internacional_ZonaEuro",
											"disabled": true
										},
										{
											"key": "from_payment_amount",
											"value": "4000",
											"disabled": true
										},
										{
											"key": "to_payment_amount",
											"value": "5000",
											"disabled": true
										},
										{
											"key": "_sort",
											"value": "executionNumber"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Standing Order Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Account-Id",
										"value": "PT50001800035433149102053",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "Mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/standing_orders_account/10812253",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"standing_orders_account",
										"10812253"
									]
								}
							},
							"response": []
						},
						{
							"name": "Standing Order Schedule list",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Account-Id",
										"value": "PT50001800035433149102053",
										"type": "text"
									},
									{
										"key": "Account-Type",
										"value": "IBAN",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "Mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/standing_orders_account/10812253/scheduled?from_scheduled_date=20161228T105858000-0100&to_scheduled_date=99991231T105858000-0100&_sort=-scheduledDate&_limit=64",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"standing_orders_account",
										"10812253",
										"scheduled"
									],
									"query": [
										{
											"key": "from_scheduled_date",
											"value": "20161228T105858000-0100"
										},
										{
											"key": "to_scheduled_date",
											"value": "99991231T105858000-0100"
										},
										{
											"key": "_sort",
											"value": "-scheduledDate"
										},
										{
											"key": "_limit",
											"value": "64"
										},
										{
											"key": "_offset",
											"value": "62",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "CVV",
							"item": [
								{
									"name": "Success",
									"item": [
										{
											"name": "1 - Get CVV",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"cvv\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"cvv\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"Cards-Info-Request-Token\", pm.response.headers.get(\"Token-Request\"));\r",
															"\r",
															"let soPayload = \"{}\"\r",
															"\r",
															"var id = pm.request.url.path[4];\r",
															"///sanpt/external-intcons/me/cards/bVQ9f0pI62u-vY7PcNNG1w/cvv -> 4th element in path\r",
															"console.log(\"id : \" + id);\r",
															"//Setting globals:\r",
															"pm.globals.set('encryptedCardsInfoPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/me/cards/\" + id + \"/cvv}#{}#\" + soPayload)));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "client-id",
														"value": "{{client-id}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{ext-intURL}}/me/cards/:card_id/cvv",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"me",
														"cards",
														":card_id",
														"cvv"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "card_id",
															"value": "Ro64IpkS9itV4ihuzrGLZQ"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2 - SCA: Execute SCA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"const responseJson = pm.response.json();\r",
															"pm.globals.set(\"SCA-CARD-INFO-ID\", responseJson.scaId);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"value": "{{Cards-Info-Request-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"serviceId\": \"cards_info\",\r\n    \"payLoadOperationRequesting\": \"{{encryptedCardsInfoPayload}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication"
													],
													"query": [
														{
															"key": "isTest",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3- SCA: Validate OTP",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\",\r",
															"    \"status\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-CARD-INFO-JWT\", pm.response.headers.get(\"Sca-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"value": "{{Cards-Info-Request-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"embeddedSystem\":\"otp\",\r\n    \"serviceId\":\"cards_info\",\r\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication/{{SCA-CARD-INFO-ID}}/validate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication",
														"{{SCA-CARD-INFO-ID}}",
														"validate"
													],
													"query": [
														{
															"key": "isTest",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4 - Get CVV",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"cvv\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"cvv\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"Cards-Info-Request-Token\", pm.response.headers.get(\"Token-Request\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "client-id",
														"value": "{{client-id}}",
														"type": "text"
													},
													{
														"key": "Sca-Token",
														"value": "{{SCA-CARD-INFO-JWT}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{ext-intURL}}/me/cards/:card_id/cvv",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"me",
														"cards",
														":card_id",
														"cvv"
													],
													"variable": [
														{
															"key": "card_id",
															"value": "Ro64IpkS9itV4ihuzrGLZQ"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PAN",
							"item": [
								{
									"name": "Success",
									"item": [
										{
											"name": "1- Get PAN",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"cardId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pan\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"cardId\",\r",
															"    \"pan\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"Cards-Info-Request-Token\", pm.response.headers.get(\"Token-Request\"));\r",
															"\r",
															"let soPayload = \"{}\"\r",
															"\r",
															"var id = pm.request.url.path[4];\r",
															"///sanpt/external-intcons/me/cards/bVQ9f0pI62u-vY7PcNNG1w/pan -> 4th element in path\r",
															"console.log(\"id : \" + id);\r",
															"//Setting globals:\r",
															"pm.globals.set('encryptedCardsInfoPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/me/cards/\" + id + \"/pan}#{}#\" + soPayload)));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Sca-Token",
														"type": "text",
														"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIwMDE4U0NBTWljcm9zZXJ2aWNlIiwiaWF0IjoxNTk1OTU1MDE3LCJ0cmFuc2FjdGlvbl9kYXRhIjoiVGJqTkZGT3l1Yld2YTBqdmxSbDVNYnNobXh3bTNQMGtJbzNicXBmbEFQbz0iLCJub25jZSI6IjU2MTBmYWFkLTkwMmEtNDZhZi04ZjgwLTViYzNlZDkxYTRmNSIsImV4cCI6MTU5NTk1NTMxNywianRpIjoiNDk0NzMzOTY1MDMxNTM5Iiwic2NhX2lkIjoiMGFiMzIxNjMtMTMxMC00OGMwLWJjNDMtNDFmZmU2YWNhMzRhIiwic2lnbmF0dXJlIjoiT0sifQ.icl7pDApEgfTLacviEE3EgGDtIgIPC25GdzKdc4g7Bt4CGWeXjX9JQpj_BiFRiNSrdAHT6dx-fDze4GiwNt2sCHUbr38V4dC1_VVp3KKLHzsgF5QbpqZPZPH5LBhtK1AYc_45nF_lep4i-gkUCol5vznxJab4Crk1g2eDjcFxpQm8AJddfPAsWzHT3TIZQiipZBxbGoCBHrnVZLwxsOUsAOSt8Pfl4z_UZKWaI5hBttHx6R-qwr3kloFEffFWHVQArlaPTu8uhqMeJ1_e-jhjgtLJFkWaP_VioPGVoQo_l9EOewqjugWNBDQ7KRFUCDczobC7IfbhL4B8D1RJ6vCLK0iiMLfQLninzNxdlf43-6Zx5FyCalRaJGNYw7Hp4H7YNxCsTYQXWA4TlGcW_emwqVFX_RLPiGwFrH93GQr2RVW_Snh4Bpyc_IHe67Kw-pzWekhPwgY9uiTRnquibNC2RfbPxciD8MxORFpAfwZ4RQtJCndSsCYptciepFlKnjTMqlmOyhh7xlMtRf9YBc8_Fj0vzfLtPtgvO09i29ztp5B8dO10ee_q_NOxc_BhfpYAiiTH27gKG2HGDdaMcwli-LBxXuB7azGbnYeXxmoGW-2VVHfaFWnf_nuCfHT0rnJRLEHlXj2BnsSfw4wSE77FG9qy7Pk6NPCd2pbRKHHoyQ",
														"disabled": true
													},
													{
														"key": "Sca-Token",
														"type": "text",
														"value": "##Otp-Id##e1e07623-8a98-4970-8b6a-0476b1b4e579##Otp##860600##",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{ext-intURL}}/me/cards/:card_id/pan?_expand=cvv",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"me",
														"cards",
														":card_id",
														"pan"
													],
													"query": [
														{
															"key": "_expand",
															"value": "cvv"
														}
													],
													"variable": [
														{
															"key": "card_id",
															"value": "Ro64IpkS9itV4ihuzrGLZQ"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2- SCA: Execute SCA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 201\", function () {\r",
															"  pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"const responseJson = pm.response.json();\r",
															"pm.globals.set(\"SCA-CARD-INFO-ID\", responseJson.scaId);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"type": "text",
														"value": "{{Cards-Info-Request-Token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"serviceId\": \"cards_info\",\r\n    \"payLoadOperationRequesting\": \"{{encryptedCardsInfoPayload}}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication"
													]
												}
											},
											"response": []
										},
										{
											"name": "3- SCA: Validate OTP",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"scaId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"status\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"scaId\",\r",
															"    \"status\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															"pm.globals.set(\"SCA-CARD-INFO-JWT\", pm.response.headers.get(\"Sca-Token\"));\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Request-Token",
														"value": "{{Cards-Info-Request-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"embeddedSystem\":\"otp\",\r\n    \"serviceId\":\"cards_info\",\r\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{ext-intURL}}/sca_authentication/{{SCA-CARD-INFO-ID}}/validate",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"sca_authentication",
														"{{SCA-CARD-INFO-ID}}",
														"validate"
													]
												}
											},
											"response": []
										},
										{
											"name": "4- Get PAN",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema = {\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"cardId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pan\": {\r",
															"      \"type\": \"string\"\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"cardId\",\r",
															"    \"pan\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "accessToken",
															"value": "{{access_token}}",
															"type": "string"
														},
														{
															"key": "addTokenTo",
															"value": "header",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "client-id",
														"type": "text",
														"value": "{{client-id}}"
													},
													{
														"key": "Sca-Token",
														"type": "text",
														"value": "{{SCA-CARD-INFO-JWT}}"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{ext-intURL}}/me/cards/:card_id/pan",
													"host": [
														"{{ext-intURL}}"
													],
													"path": [
														"me",
														"cards",
														":card_id",
														"pan"
													],
													"query": [
														{
															"key": "_expand",
															"value": "cvv",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "card_id",
															"value": "Ro64IpkS9itV4ihuzrGLZQ"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Cards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/retail_cards_info",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_cards_info"
									],
									"query": [
										{
											"key": "_offset",
											"value": "20",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "500",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Card Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{ext-intURL}}/retail_cards_info/HsJZWssp6KVXpQfPOTlQVw",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"retail_cards_info",
										"HsJZWssp6KVXpQfPOTlQVw"
									]
								}
							},
							"response": []
						},
						{
							"name": "Card Transactions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"cardTransactionsList\": [\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820181009683804582\",\r",
											"                \"creationDate\": \"20181009T000000000-0000\",\r",
											"                \"processedDate\": \"20181011T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"20.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820181009683804582\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802042\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.56\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802042\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802043\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.95\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802043\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180921683800383\",\r",
											"                \"creationDate\": \"20180921T000000000-0000\",\r",
											"                \"processedDate\": \"20180925T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"0.10\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180921683800383\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180906683399717\",\r",
											"                \"creationDate\": \"20180906T000000000-0000\",\r",
											"                \"processedDate\": \"20180910T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"1.29\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180906683399717\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180806682532648\",\r",
											"                \"creationDate\": \"20180806T000000000-0000\",\r",
											"                \"processedDate\": \"20180806T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"4.50\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMISSAO DISPONIBILIZACAO CARTAO DÉBITO-3569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180806682532648\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180725682167114\",\r",
											"                \"creationDate\": \"20180725T000000000-0000\",\r",
											"                \"processedDate\": \"20180725T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180725682167114\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_offset=7&_sort=-date\",\r",
											"        \"cardDetailsLink\": \"/me/cards/5539060255443569\",\r",
											"        \"statementsListLink\": \"/me/cards/5539060255443569/statements\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ext-intURL}}/me/cards/cLRW7tye2us-It6T9rxI5Q/transactions",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"me",
										"cards",
										"cLRW7tye2us-It6T9rxI5Q",
										"transactions"
									],
									"query": [
										{
											"key": "_offset",
											"value": "7",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace Card",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "client-id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"replaceType\": \"stolen\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/common/me/cards/cLRW7tye2us-It6T9rxI5Q/replace_card?isTest=true",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"common",
										"me",
										"cards",
										"cLRW7tye2us-It6T9rxI5Q",
										"replace_card"
									],
									"query": [
										{
											"key": "isTest",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate Card",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "client-id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"replaceType\": \"stolen\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/common/me/cards/cLRW7tye2us-It6T9rxI5Q/activate_card?isTest=true",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"common",
										"me",
										"cards",
										"cLRW7tye2us-It6T9rxI5Q",
										"activate_card"
									],
									"query": [
										{
											"key": "isTest",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "modify_card_properties Limit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const basePath = pm.request.url.getPath();\r",
											"const queryParams = pm.request.url.getQueryString({ignoreDisabled: true});\r",
											"\r",
											"//warning! the request body should be structured in alphabetic order for SCA validation\r",
											"const requestBody = JSON.stringify(JSON.parse(pm.request.body));\r",
											"\r",
											"pm.globals.set('cardsManagementRequestBody', requestBody);\r",
											"\r",
											"pm.globals.set('cardsManagementScaEncryptedPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{\" + basePath + \"}#{\" + queryParams + \"}#\" + requestBody + \"\")));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseJson = pm.response.json();\r",
											"pm.globals.set(\"cardsManagementRequestToken\", pm.response.headers.get(\"Token-Request\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenName",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIwMDE4U0NBTWljcm9zZXJ2aWNlIiwiaWF0IjoxNTk1OTU1MDE3LCJ0cmFuc2FjdGlvbl9kYXRhIjoiVGJqTkZGT3l1Yld2YTBqdmxSbDVNYnNobXh3bTNQMGtJbzNicXBmbEFQbz0iLCJub25jZSI6IjU2MTBmYWFkLTkwMmEtNDZhZi04ZjgwLTViYzNlZDkxYTRmNSIsImV4cCI6MTU5NTk1NTMxNywianRpIjoiNDk0NzMzOTY1MDMxNTM5Iiwic2NhX2lkIjoiMGFiMzIxNjMtMTMxMC00OGMwLWJjNDMtNDFmZmU2YWNhMzRhIiwic2lnbmF0dXJlIjoiT0sifQ.icl7pDApEgfTLacviEE3EgGDtIgIPC25GdzKdc4g7Bt4CGWeXjX9JQpj_BiFRiNSrdAHT6dx-fDze4GiwNt2sCHUbr38V4dC1_VVp3KKLHzsgF5QbpqZPZPH5LBhtK1AYc_45nF_lep4i-gkUCol5vznxJab4Crk1g2eDjcFxpQm8AJddfPAsWzHT3TIZQiipZBxbGoCBHrnVZLwxsOUsAOSt8Pfl4z_UZKWaI5hBttHx6R-qwr3kloFEffFWHVQArlaPTu8uhqMeJ1_e-jhjgtLJFkWaP_VioPGVoQo_l9EOewqjugWNBDQ7KRFUCDczobC7IfbhL4B8D1RJ6vCLK0iiMLfQLninzNxdlf43-6Zx5FyCalRaJGNYw7Hp4H7YNxCsTYQXWA4TlGcW_emwqVFX_RLPiGwFrH93GQr2RVW_Snh4Bpyc_IHe67Kw-pzWekhPwgY9uiTRnquibNC2RfbPxciD8MxORFpAfwZ4RQtJCndSsCYptciepFlKnjTMqlmOyhh7xlMtRf9YBc8_Fj0vzfLtPtgvO09i29ztp5B8dO10ee_q_NOxc_BhfpYAiiTH27gKG2HGDdaMcwli-LBxXuB7azGbnYeXxmoGW-2VVHfaFWnf_nuCfHT0rnJRLEHlXj2BnsSfw4wSE77FG9qy7Pk6NPCd2pbRKHHoyQ",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"cardConfiguration\": {\r\n        \"cardUsabilityIndicatorsList\": [\r\n            {\r\n                \"indicatorDescription\": \"Allow International Operations\",\r\n                \"usabilityIndicator\": true,\r\n                \"usabilityIndicatorId\": \"INTERNATIONAL\"\r\n            }\r\n        ]\r\n    }\r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/common/me/cards/Pc7Wipu7W3tTLfZvmAtpPA?isTest=true",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"common",
										"me",
										"cards",
										"Pc7Wipu7W3tTLfZvmAtpPA"
									],
									"query": [
										{
											"key": "isTest",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "step 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"  pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"scaId\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"scaId\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											"const responseJson = pm.response.json();\r",
											"pm.globals.set(\"cardsManagementScaId\", responseJson.scaId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Santander-Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Request-Token",
										"value": "{{cardsManagementRequestToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"serviceId\": \"cards_management\",\r\n    \"payLoadOperationRequesting\":\"{{cardsManagementScaEncryptedPayload}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/sca_authentication",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"sca_authentication"
									],
									"query": [
										{
											"key": "isTest",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "step 3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"scaId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"scaId\",\r",
											"    \"status\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											"pm.globals.set(\"cardsManagementSCAValidatedOTPToken\", pm.response.headers.get(\"Sca-Token\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Santander-Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Request-Token",
										"value": "{{cardsManagementRequestToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"embeddedSystem\":\"otp\",\r\n    \"serviceId\":\"cards_management\",\r\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/sca_authentication/{{cardsManagementScaId}}/validate",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"sca_authentication",
										"{{cardsManagementScaId}}",
										"validate"
									],
									"query": [
										{
											"key": "isTest",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "step 4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenName",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "{{cardsManagementSCAValidatedOTPToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{cardsManagementRequestBody}}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/common/me/cards/T0pAc7-R0bPvRyS5g6_69g",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"common",
										"me",
										"cards",
										"T0pAc7-R0bPvRyS5g6_69g"
									],
									"query": [
										{
											"key": "isTest",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "modify_card_properties Indicator",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Sca-Token",
										"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiIwMDE4U0NBTWljcm9zZXJ2aWNlIiwiaWF0IjoxNTk1OTU1MDE3LCJ0cmFuc2FjdGlvbl9kYXRhIjoiVGJqTkZGT3l1Yld2YTBqdmxSbDVNYnNobXh3bTNQMGtJbzNicXBmbEFQbz0iLCJub25jZSI6IjU2MTBmYWFkLTkwMmEtNDZhZi04ZjgwLTViYzNlZDkxYTRmNSIsImV4cCI6MTU5NTk1NTMxNywianRpIjoiNDk0NzMzOTY1MDMxNTM5Iiwic2NhX2lkIjoiMGFiMzIxNjMtMTMxMC00OGMwLWJjNDMtNDFmZmU2YWNhMzRhIiwic2lnbmF0dXJlIjoiT0sifQ.icl7pDApEgfTLacviEE3EgGDtIgIPC25GdzKdc4g7Bt4CGWeXjX9JQpj_BiFRiNSrdAHT6dx-fDze4GiwNt2sCHUbr38V4dC1_VVp3KKLHzsgF5QbpqZPZPH5LBhtK1AYc_45nF_lep4i-gkUCol5vznxJab4Crk1g2eDjcFxpQm8AJddfPAsWzHT3TIZQiipZBxbGoCBHrnVZLwxsOUsAOSt8Pfl4z_UZKWaI5hBttHx6R-qwr3kloFEffFWHVQArlaPTu8uhqMeJ1_e-jhjgtLJFkWaP_VioPGVoQo_l9EOewqjugWNBDQ7KRFUCDczobC7IfbhL4B8D1RJ6vCLK0iiMLfQLninzNxdlf43-6Zx5FyCalRaJGNYw7Hp4H7YNxCsTYQXWA4TlGcW_emwqVFX_RLPiGwFrH93GQr2RVW_Snh4Bpyc_IHe67Kw-pzWekhPwgY9uiTRnquibNC2RfbPxciD8MxORFpAfwZ4RQtJCndSsCYptciepFlKnjTMqlmOyhh7xlMtRf9YBc8_Fj0vzfLtPtgvO09i29ztp5B8dO10ee_q_NOxc_BhfpYAiiTH27gKG2HGDdaMcwli-LBxXuB7azGbnYeXxmoGW-2VVHfaFWnf_nuCfHT0rnJRLEHlXj2BnsSfw4wSE77FG9qy7Pk6NPCd2pbRKHHoyQ",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"cardConfiguration\": {\r\n    \"cardUsabilityIndicatorsList\": [\r\n      {\r\n        \"usabilityIndicatorId\": \"general\",\r\n        \"indicatorDescription\": \"Temporaly frozen card\",\r\n        \"usabilityIndicator\": \"false\"\r\n      }\r\n    ]\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/common/me/cards/HsJZWssp6KVXpQfPOTlQVw",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"common",
										"me",
										"cards",
										"HsJZWssp6KVXpQfPOTlQVw"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Third Party Consents",
					"item": [
						{
							"name": "Consents List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/third_party_consents",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"third_party_consents"
									],
									"query": [
										{
											"key": "status",
											"value": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Consent Change Status",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"tppConsentStatusDataEntry\": \r\n    {\r\n        \"tppNewConsentStatus\": \"REV\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/third_party_consents/8ec75fb61ae6445f95f1fe1a06943f31/status",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"third_party_consents",
										"8ec75fb61ae6445f95f1fe1a06943f31",
										"status"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payees",
					"item": [
						{
							"name": "List Payees",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Access-Channel",
										"value": "mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/payees",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"payees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Payee Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Access-Channel",
										"value": "mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/payees/0015",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"payees",
										"0015"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Payee",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Access-Channel",
										"type": "text",
										"value": "mobile"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"alias\": \"SAlias\",\r\n    \"payeeName\": \"Payee 123\",\r\n    \"serviceType\": \"transfer\",\r\n    \"contractType\": \"account\",\r\n    \"contractAccountType\": {\r\n        \"accountIdType\": \"IBAN\",\r\n        \"accountId\": \"PT50001800031517482402026\",\r\n        \"payeeAddress\": {\r\n            \"streetName\": \"Name of the Street\",\r\n            \"townName\": \"Town\",\r\n            \"location\": \"Location\",\r\n            \"country\": \"PRT\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/payees",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"payees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Payee",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Access-Channel",
										"type": "text",
										"value": "mobile"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/payees/0015",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"payees",
										"0015"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Loans",
					"item": [
						{
							"name": "Loans List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/loans",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans"
									],
									"query": [
										{
											"key": "_offset",
											"value": "20",
											"disabled": true
										},
										{
											"key": "_limit",
											"value": "500",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Loan Detail",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{ext-intURL}}/loans/000320824016096",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans",
										"000320824016096"
									]
								}
							},
							"response": []
						},
						{
							"name": "Payments List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"cardTransactionsList\": [\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820181009683804582\",\r",
											"                \"creationDate\": \"20181009T000000000-0000\",\r",
											"                \"processedDate\": \"20181011T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"20.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820181009683804582\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802042\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.56\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802042\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802043\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.95\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802043\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180921683800383\",\r",
											"                \"creationDate\": \"20180921T000000000-0000\",\r",
											"                \"processedDate\": \"20180925T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"0.10\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180921683800383\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180906683399717\",\r",
											"                \"creationDate\": \"20180906T000000000-0000\",\r",
											"                \"processedDate\": \"20180910T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"1.29\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180906683399717\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180806682532648\",\r",
											"                \"creationDate\": \"20180806T000000000-0000\",\r",
											"                \"processedDate\": \"20180806T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"4.50\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMISSAO DISPONIBILIZACAO CARTAO DÉBITO-3569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180806682532648\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180725682167114\",\r",
											"                \"creationDate\": \"20180725T000000000-0000\",\r",
											"                \"processedDate\": \"20180725T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180725682167114\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_offset=7&_sort=-date\",\r",
											"        \"cardDetailsLink\": \"/me/cards/5539060255443569\",\r",
											"        \"statementsListLink\": \"/me/cards/5539060255443569/statements\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ext-intURL}}/loans/000320842562096/payments",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans",
										"000320842562096",
										"payments"
									],
									"query": [
										{
											"key": "_offset",
											"value": "7",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Payment Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"cardTransactionsList\": [\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820181009683804582\",\r",
											"                \"creationDate\": \"20181009T000000000-0000\",\r",
											"                \"processedDate\": \"20181011T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"20.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820181009683804582\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802042\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.56\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802042\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802043\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.95\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802043\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180921683800383\",\r",
											"                \"creationDate\": \"20180921T000000000-0000\",\r",
											"                \"processedDate\": \"20180925T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"0.10\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180921683800383\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180906683399717\",\r",
											"                \"creationDate\": \"20180906T000000000-0000\",\r",
											"                \"processedDate\": \"20180910T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"1.29\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180906683399717\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180806682532648\",\r",
											"                \"creationDate\": \"20180806T000000000-0000\",\r",
											"                \"processedDate\": \"20180806T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"4.50\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMISSAO DISPONIBILIZACAO CARTAO DÉBITO-3569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180806682532648\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180725682167114\",\r",
											"                \"creationDate\": \"20180725T000000000-0000\",\r",
											"                \"processedDate\": \"20180725T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180725682167114\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_offset=7&_sort=-date\",\r",
											"        \"cardDetailsLink\": \"/me/cards/5539060255443569\",\r",
											"        \"statementsListLink\": \"/me/cards/5539060255443569/statements\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ext-intURL}}/loans/000320842562096/payments/10",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans",
										"000320842562096",
										"payments",
										"10"
									],
									"query": [
										{
											"key": "_offset",
											"value": "7",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Installments List",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"cardTransactionsList\": [\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820181009683804582\",\r",
											"                \"creationDate\": \"20181009T000000000-0000\",\r",
											"                \"processedDate\": \"20181011T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"20.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820181009683804582\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802042\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.56\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802042\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802043\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.95\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802043\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180921683800383\",\r",
											"                \"creationDate\": \"20180921T000000000-0000\",\r",
											"                \"processedDate\": \"20180925T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"0.10\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180921683800383\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180906683399717\",\r",
											"                \"creationDate\": \"20180906T000000000-0000\",\r",
											"                \"processedDate\": \"20180910T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"1.29\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180906683399717\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180806682532648\",\r",
											"                \"creationDate\": \"20180806T000000000-0000\",\r",
											"                \"processedDate\": \"20180806T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"4.50\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMISSAO DISPONIBILIZACAO CARTAO DÉBITO-3569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180806682532648\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180725682167114\",\r",
											"                \"creationDate\": \"20180725T000000000-0000\",\r",
											"                \"processedDate\": \"20180725T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180725682167114\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_offset=7&_sort=-date\",\r",
											"        \"cardDetailsLink\": \"/me/cards/5539060255443569\",\r",
											"        \"statementsListLink\": \"/me/cards/5539060255443569/statements\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ext-intURL}}/loans/000320842562096/installments",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans",
										"000320842562096",
										"installments"
									],
									"query": [
										{
											"key": "_offset",
											"value": "7",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Installment Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const expectedResponse = {\r",
											"    \"cardTransactionsList\": [\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820181009683804582\",\r",
											"                \"creationDate\": \"20181009T000000000-0000\",\r",
											"                \"processedDate\": \"20181011T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"20.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820181009683804582\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802042\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.56\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802042\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180927683802043\",\r",
											"                \"creationDate\": \"20180927T000000000-0000\",\r",
											"                \"processedDate\": \"20181003T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"24.95\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180927683802043\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180921683800383\",\r",
											"                \"creationDate\": \"20180921T000000000-0000\",\r",
											"                \"processedDate\": \"20180925T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"0.10\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180921683800383\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000042037\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000042037\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180906683399717\",\r",
											"                \"creationDate\": \"20180906T000000000-0000\",\r",
											"                \"processedDate\": \"20180910T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"1.29\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMPRA TPA*3569 LIDL TESTE 1 SINTRA\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COMPRAS MULTIBANCO\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180906683399717\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmId\": \"000040612\",\r",
											"                \"atmAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"atmCountry\": \"PORTUGAL\",\r",
											"                \"atmOwnerId\": \"000040612\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopAddress\": \"LIDL TESTE 1        SINTRA\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180806682532648\",\r",
											"                \"creationDate\": \"20180806T000000000-0000\",\r",
											"                \"processedDate\": \"20180806T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"4.50\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"COMISSAO DISPONIBILIZACAO CARTAO DÉBITO-3569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180806682532648\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopAddress\": \"ANUIDADE 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        },\r",
											"        {\r",
											"            \"cardTransaction\": {\r",
											"                \"transactionId\": \"1820180725682167114\",\r",
											"                \"creationDate\": \"20180725T000000000-0000\",\r",
											"                \"processedDate\": \"20180725T000000000-0000\",\r",
											"                \"amountTransaction\": {\r",
											"                    \"amount\": \"12.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"description\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"feeAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"originalAmount\": {\r",
											"                    \"amount\": \"0.00\",\r",
											"                    \"currencyCode\": \"EUR\"\r",
											"                },\r",
											"                \"currencyRate\": \"0.00000\",\r",
											"                \"transactionStatus\": \"settled\",\r",
											"                \"transactionType\": \"COBRANCA DE TAXAS\",\r",
											"                \"cardTransactionDetailsLink\": \"/me/cards/5539060255443569/transactions/1820180725682167114\"\r",
											"            },\r",
											"            \"atmInformation\": {\r",
											"                \"atmAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"atmCountry\": \"PORTUGAL\"\r",
											"            },\r",
											"            \"posInformation\": {\r",
											"                \"shopName\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopAddress\": \"TAXA SUBSTITUICAO 5539060255443569\",\r",
											"                \"shopCountry\": \"PORTUGAL\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"_links\": {\r",
											"        \"_first\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_sort=-date\",\r",
											"        \"_next\": \"/me/cards/5539060255443569/transactions?_limit=7&from_date=20180125T000000000-0000&to_date=20190125T000000000-0000&_offset=7&_sort=-date\",\r",
											"        \"cardDetailsLink\": \"/me/cards/5539060255443569\",\r",
											"        \"statementsListLink\": \"/me/cards/5539060255443569/statements\"\r",
											"    }\r",
											"};\r",
											"pm.globals.set(\"expectedResponse\", expectedResponse); "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ext-intURL}}/loans/000320842562096/installments/9",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"loans",
										"000320842562096",
										"installments",
										"9"
									],
									"query": [
										{
											"key": "_offset",
											"value": "7",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "POST Instant Payments",
							"item": [
								{
									"name": "1 - Simulation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let creditorAccountId = \"PT50003300000019333254405\";\r",
													"let debtorAccountId = \"PT50001800031744991902037\";\r",
													"let amount = 7.05; //not use \".00\" because of the postman string conversion (not a service error)\r",
													"\r",
													"console.log(\"creditorAccountId\", creditorAccountId);\r",
													"console.log(\"debtorAccountId\", debtorAccountId);\r",
													"console.log(\"amount\", amount);\r",
													"\r",
													"let instantPaymentRequestBody =\r",
													"{\r",
													"   \"chargeBearer\":\"OUR\",\r",
													"   \"countryDestinationFunds\":\"PT\",\r",
													"   \"creditorCreditAccount\":{\r",
													"      \"accountId\":creditorAccountId,\r",
													"      \"accountIdType\":\"IBAN\"\r",
													"   },\r",
													"   \"creditorName\":\"DANIEL\",\r",
													"   \"debtorAccount\":{\r",
													"      \"accountId\":debtorAccountId,\r",
													"      \"accountIdType\":\"IBAN\"\r",
													"   },\r",
													"   \"idempotentReference\":\"ref\",\r",
													"   \"institutionalPaymentIndicator\":false,\r",
													"   \"paymentAmount\":{\r",
													"      \"amount\":amount,\r",
													"      \"currency\":\"EUR\"\r",
													"   },\r",
													"   \"requestExecutionDate\":\"2020-12-11\",\r",
													"   \"senderReference\":\"reference\",\r",
													"   \"urgencyIndicator\":\"standard\"\r",
													"}\r",
													"\r",
													"//global variables\r",
													"pm.globals.set(\"instantPaymentRequestBody\", JSON.stringify(instantPaymentRequestBody));\r",
													"pm.globals.set(\"instantPaymentDebtorAccountId\", debtorAccountId);\r",
													"pm.globals.set(\"instantPaymentCreditorAccountId\", creditorAccountId);\r",
													"pm.globals.set(\"instantPaymentAmount\", amount);\r",
													"pm.globals.set('instantPaymentScaEncryptedPayload', CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"{/instant_payments}#{}#\" + JSON.stringify(instantPaymentRequestBody))));\r",
													"\r",
													"console.log(\"instantPaymentRequestBody: \" + JSON.stringify(instantPaymentRequestBody));\r",
													"console.log(pm.globals.get('instantPaymentScaEncryptedPayload'));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1aWQ6T1BYUTk5Iiwic2VjQ3R4SXYiOiIzNkVpd2ZQdW0yYVlJa2ZmbU9CWVNnPT0iLCJuYmYiOjE1NjIzMTY1NTcsInVzZXJfbmFtZSI6IjgwMDAwMjI2NTMiLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiXSwiaXNzIjoiMDAxOFNlY3VyaXR5TWljcm9zZXJ2aWNlIiwiZXhwIjoxNTYyMzIzNzU3LCJzZWNDdHgiOiIzNWU2ZDA3NTJkNmQwMzU4ODdlY2NjNTlhMGNhYjZhYjc5YWY2NDYyZTdlMGZhZTJhMWUxYTgyNjAyODRmMjhjM2UzZDJhM2U2MjM3MGY2ZWY1MzE2OGY4MjBmYmQ5MjAyZjkzOGJhZTdiNTIxNWMwODkwYzdhNWI1MTY4YzExMzY2NWQzNDhlY2YzMTI3ZjQ1ZTYzNjc3Yzg2N2RlOWNmZjdkNWYyNDNhMTkzNTM4MWY5YmVlYzFkNTc0ODFiYTk5NDZkYTVlYjVkMTIzMmQ2OGZjY2MwMmQ0NDFiZjRjN2QzYjZjMGRkMTAxYWM0NjQ2NzM1YjQ3NDE5ZTkyMzk4MmVlYTI3ZGVjMzE3YmM3MjZkYWJmYjIyOWY3NmM4YjVlNzVlNmJkODU2YTdkZGZkNmY4MTA5NjhjYWQ1MmY3ZTIyNzQyYjA2NWYyYTEyZjQ4OWFlNTQzMWQwMzIxODY5YWJlN2M2MTA1OGU4OTU1NDgwMTg1OTZkYjFlMDBjOThiNWRlMTUyNjVmODBmNDUzMTBmNGY4MzY0NWQ2NTA4YmY0ZGM0YThhNGE4YTk0NmQ0MTU1MmRlN2FkNDczNTgwZmQxMzRlZWEzYzJiYTZkNjg3YTZmM2FhZWY4NjNmMTNkOTNhNDAwYTY1YjY5N2YwODAyMDc3OGYzZmFkZjE5ZjExZjI0Zjg2MTAwOWNkNmNhOWEwZTIxNzgyNjQ0MzUyNWZkNGQwZGFjNGI5ZGExOGIzYzUzNDk5ZTU3MWI4ZTA5OGUyZGFiZGUzMzg0N2FhYzMzMjM4NTU0Yzk3NjZhZGE5ZjgwZWMzNjM4ZmQ5ZThiYzVmMzRiY2IzMzE5Y2JlNDgyOTBlZDgyZjU5ZTFiZDBiMTQ3YzU3YTk0ODgyYTczNmVjNmYwOTU1YjIyYzQ4OGRlNTQwZWVlYzU3MTg3ODRiYWIxMGNjNDczZWVjZjE3MGM5NDIxZmNiYTAzZDQ2NzVjNzY0OTdjYWMwOWE2OGFjYmRjNDgwNGY0OTM5MTkyNzY3OGQ1ODg3MTU1N2U4ZGQ3NWU2OTUyZmNmMWYzYmY5MGNlNTVkZWE2OWY2YmU4OTdiYjUxZTRjZTM3NmNiZDA1OGU0ZTEzYTMyNzkyMDIwOGNmMzIwMDg4NjZkMGU5NTQ1YTc4YmVhNzVjZjE5MWE3OGQ2ODRjNDJmIiwiaWF0IjoxNTYyMzE2NTU3LCJqdGkiOiJkMmY4ZDVlYi1hZmU3LTQxNjMtODgzMC1mMGI1ZWIyOGJhNzciLCJjbGllbnRfaWQiOiI1MDAxMjYzOC1TQU9OUEYtNTAwNjQ1MzAtMDAxIn0.mSlxShjJgA--R5FyFwNGe-BGmT516BaodiKuwbD0gB6DD2MXf4RGBw6HX1GEjqMDOOb-3lG7So0YDiJ0NCygUd8M_SN87O9qMdWb51vR__Nle3kRRurnPFXG08aabnF5XrEXqf22Vzfwx2W3puI5jIUE9BKu03mspDXIh1ZjrvHlDSpE6klHbHLpISrCd2wyYMzOODjnr9ILyhLOdtV9g_NZ4muiWESfre2WrB53VlT_TeFWyOst8d4sZEFIef4KTiKcH8qdc0hnvaE6_u--N8vVXX2H-KSE1F8lUFt989qu4gBPnElJTYonXR44IVuQmugShX76s9aU_cY3VnCWuw",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"to\" : \"fmq8dUb1dEQ:APA91bGjVlhc6g2YENNNz4eLwER_PoApefxGH9YYqA0FI73kJP2Sqd4QOLWSUk3Vrbds-2Bhv3WNFxMAenmr2gatLTwUtoRCmSM6bj17QANreKfwpBPQN2op1dTyVMehe3raPmlKNHaz\",\r\n  \"notification\" : {\r\n    \"titleBase64\" : \"VGl0dWxv\",\r\n    \"messageBase64\" : \"VGVzdGUgTm90aWZpY2F0aW9u\"\r\n  },\r\n  \"data\" : {\r\n    \"key\" : \"value\",\r\n    \"key1\" : \"value\"\r\n  }\r\n}\r\n"
										},
										"url": {
											"raw": "https://notification-api.totta.dev.corp/push/sendWs",
											"protocol": "https",
											"host": [
												"notification-api",
												"totta",
												"dev",
												"corp"
											],
											"path": [
												"push",
												"sendWs"
											]
										}
									},
									"response": []
								},
								{
									"name": "2 - Fraud: Evaluate",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//local variables\r",
													"let amount = pm.globals.get('instantPaymentAmount');\r",
													"let debtorAccountId = pm.globals.get('instantPaymentDebtorAccountId');\r",
													"let creditorAccountId = pm.globals.get('instantPaymentCreditorAccountId');\r",
													"//let creditorAccountId = 'PT50001800035445643902096';\r",
													"\r",
													"//build today's datetime\r",
													"\r",
													"//let day = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(today);\r",
													"//let month = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(today);\r",
													"//let year = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(today);\r",
													"//let datetime = year + \"-\" + month + \"-\" + day + \" 00:00:00\";\r",
													"\r",
													"console.log(\"amount: \" + amount);\r",
													"console.log(\"debtorAccountId\", debtorAccountId);\r",
													"console.log(\"creditorAccountId\", creditorAccountId);\r",
													"console.log(\"datetime\", \"2020-11-05\");\r",
													"\r",
													"let query = {\r",
													"    \"event\": {\r",
													"        \"originator\": {\r",
													"            \"personalInformation\": {\r",
													"                \"id\": \"1000585557\"\r",
													"            },\r",
													"            \"user\": {\r",
													"                \"name\": \"EDITE FAGUNDES\"\r",
													"            },\r",
													"            \"corporateClientId\": \"1000585557\"\r",
													"        },\r",
													"        \"beneficiary\": {\r",
													"            \"trustedIndicator\": \"0\"\r",
													"        }\r",
													"    },\r",
													"    \"transaction\": {\r",
													"        \"trxResponse\": {\r",
													"            \"authenticationAttempts\": \"1\",\r",
													"            \"balance\": {\r",
													"                \"currentAccountBalance\": \"6328951.19\",\r",
													"                \"accntsQty\": \"37\"\r",
													"            }\r",
													"        },\r",
													"        \"transactionId\": {\r",
													"            \"localDatetime\": \"2019-05-20 15:14:40\",\r",
													"            \"datetime\": \"2020-11-05 00:00:00\",\r",
													"            \"operationCode\": \"APGSRV\"\r",
													"        },\r",
													"        \"transactionDetails\": {\r",
													"            \"localCurrencyAmount\": \"5.00\",\r",
													"            \"currency\": \"EUR\",\r",
													"            \"amount\": amount.toFixed(2),\r",
													"            \"strongAuthIndicator\": \"0\",\r",
													"            \"clientType\": \"C_\",\r",
													"            \"fraudOperationCode\": \"Ps\",\r",
													"            \"localCurrency\": \"EUR\"\r",
													"        }\r",
													"    },\r",
													"    \"context\": {\r",
													"        \"originatorData\": {\r",
													"            \"device\": {\r",
													"                \"fingerprint\": \"17d9d133e406b31b58c65f4f3abaffa6\",\r",
													"                \"userAgent\": \"mozilla/5.0 (windows nt 6.1; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/73.0.3683.75 safari/537.36\"\r",
													"            },\r",
													"            \"application\": {\r",
													"                \"language\": \"pt-PT\"\r",
													"            },\r",
													"            \"account\": {\r",
													"                \"bic\": \"TOTAPTP0\",\r",
													"                \"currency\": \"EUR\",\r",
													"                \"iban\": debtorAccountId\r",
													"            }\r",
													"        },\r",
													"        \"sessionId\": \"hQjrFsChmXTv83Pem8mkbK5\",\r",
													"        \"channelSelectedType\": \"03\",\r",
													"        \"beneficiaryData\":{\r",
													"            \"device\":null,\r",
													"            \"application\":null,\r",
													"            \"account\":{\r",
													"                \"bic\":\"CCCMPTPL\",\r",
													"                \"iban\": creditorAccountId\r",
													"            }\r",
													"        },\r",
													"        \"institutionalEntity\": {\r",
													"            \"institutionalId\": {\r",
													"                \"id\": \"0018\"\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"console.log(\"Fraud query metadata: \" + JSON.stringify(query))\r",
													"\r",
													"pm.globals.set('instantPaymentFraudMetadata', JSON.stringify(JSON.stringify(query)));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"fraudId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"referenceId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"customerId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"operationType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"operationSubtype\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"metaData\": {\r",
													"      \"type\": \"object\"\r",
													"    },\r",
													"    \"callType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"status\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"score\": {\r",
													"      \"type\": \"integer\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"operationType\",\r",
													"    \"operationSubtype\",\r",
													"    \"metaData\",\r",
													"    \"callType\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"instantPaymentFraudToken\", pm.response.headers.get(\"Fraud-Token\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "device-info-token",
												"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"fraudId\": \"\",\r\n    \"operationType\": \"161\",\r\n    \"operationSubtype\": \"BB\",\r\n    \"callType\": \"02\",\r\n    \"metaData\": {{instantPaymentFraudMetadata}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/fraud/evaluate",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"fraud",
												"evaluate"
											]
										}
									},
									"response": []
								},
								{
									"name": "3 - Execution Generate SCA (409)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"instantPaymentSCAToken\", pm.response.headers.get(\"SCA-Request\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"instantPaymentRequestBody: \" + JSON.stringify(pm.globals.get(\"instantPaymentRequestBody\")));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "Access-Channel",
												"value": "web",
												"type": "text"
											},
											{
												"key": "Payment-Request",
												"value": "{{instantPaymentRequestToken}}",
												"type": "text"
											},
											{
												"key": "Fraud-Token",
												"value": "{{instantPaymentFraudToken}}",
												"type": "text"
											},
											{
												"key": "Device-Info-Token",
												"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{instantPaymentRequestBody}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/instant_payments",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"instant_payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "4 - SCA: Execute SCA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"instantPaymentScaEncryptedPayload: \" + JSON.stringify(pm.globals.get(\"instantPaymentScaEncryptedPayload\")));\r",
													"console.log(\"instantPaymentSCAToken: \" + JSON.stringify(pm.globals.get(\"instantPaymentSCAToken\")));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"  pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"scaId\": {\r",
													"      \"type\": \"string\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"scaId\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"instantPaymentScaId\", responseJson.scaId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"type": "text",
												"value": "{{client-id}}"
											},
											{
												"key": "Request-Token",
												"type": "text",
												"value": "{{instantPaymentSCAToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceId\": \"instant_payments\",\n    \"payLoadOperationRequesting\": \"{{instantPaymentScaEncryptedPayload}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/sca_authentication",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"sca_authentication"
											]
										}
									},
									"response": []
								},
								{
									"name": "5 - SCA: Validate OTP",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"scaId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"status\": {\r",
													"      \"type\": \"string\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"scaId\",\r",
													"    \"status\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.globals.set(\"instantPaymentSCAValidatedOTPToken\", pm.response.headers.get(\"Sca-Token\"));\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"type": "text",
												"value": "{{clientId}}"
											},
											{
												"key": "Request-Token",
												"type": "text",
												"value": "{{instantPaymentSCAToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"embeddedSystem\":\"otp\",\n    \"serviceId\":\"instant_payments\",\n    \"metaData\":\"{ \\\"otp\\\" : \\\"654321\\\"}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/sca_authentication/{{instantPaymentScaId}}/validate",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"sca_authentication",
												"{{instantPaymentScaId}}",
												"validate"
											]
										}
									},
									"response": []
								},
								{
									"name": "6 - Execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const responseJson = pm.response.json();\r",
													"pm.globals.set(\"instantPaymentSCAToken\", pm.response.headers.get(\"SCA-Request\"));"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"instantPaymentRequestBody: \" + JSON.stringify(pm.globals.get(\"instantPaymentRequestBody\")));\r",
													"console.log(\"SCA-Token: \" + JSON.stringify(pm.globals.get(\"instantPaymentSCAToken\")));"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "tokenType",
													"value": "",
													"type": "string"
												},
												{
													"key": "accessToken",
													"value": "{{access_token}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Client-Id",
												"type": "text",
												"value": "{{client-id}}"
											},
											{
												"key": "Access-Channel",
												"type": "text",
												"value": "web"
											},
											{
												"key": "Payment-Request",
												"type": "text",
												"value": "{{instantPaymentRequestToken}}"
											},
											{
												"key": "Fraud-Token",
												"type": "text",
												"value": "{{instantPaymentFraudToken}}"
											},
											{
												"key": "SCA-Token",
												"value": "{{instantPaymentSCAValidatedOTPToken}}",
												"type": "text"
											},
											{
												"key": "Device-Info-Token",
												"value": "{\"device-id\": \"1234567\", \"device-ip-address\": \"127.0.0.1\", \"device-language\": \"en-US\", \"device-user-agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; SM-G960F Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36\", \"device-timezone\": \"UTC\", \"device-browser\": \"Chrome\", \"device-charge-indicator\": \"0\", \"device-fingerprint\": \"dfjsfliasufleiufbearuiggefiuwaebi324234kjbsadfuw3\", \"device-inclination\": \"90\", \"device-latitude\": \"38.735501\", \"device-longitude\": \"-9.160288\", \"device-malware-indicator\": \"0\", \"device-operating-system\": \"ChromeOS\", \"device-rooted-indicator\": \"0\", \"device-universal-id\": \"12345-98765-22-45556766\", \"finger-print-elements\": \"fingerPrintElements\", \"application-language\": \"en-US\", \"channel\": \"MBP\"}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{instantPaymentRequestBody}}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ext-intURL}}/instant_payments",
											"host": [
												"{{ext-intURL}}"
											],
											"path": [
												"instant_payments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Instant Payments Simulation",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Access-Channel",
										"value": "mobile",
										"type": "text"
									},
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"creditorCreditAccount\": {\r\n        \"accountIdType\": \"IBAN\",\r\n        \"accountId\": \"PT50001800003189396000285\"\r\n    },\r\n    \"debtorAccount\": {\r\n        \"accountIdType\": \"IBAN\",\r\n        \"accountId\": \"PT50001800035432930502036\"\r\n    },\r\n    \"paymentAmount\": {\r\n        \"currency\": \"EUR\",\r\n        \"amount\": 1.01\r\n    },\r\n    \"urgencyIndicator\": \"standard\",\r\n    \"chargeBearer\": \"OUR\",\r\n    \"subject\": \"whatever!\",\r\n    \"countryDestinationFunds\": \"PT\",\r\n    \"creditorName\": \"Amazon Poland\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/instant_payments/simulate_payment",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"instant_payments",
										"simulate_payment"
									]
								}
							},
							"response": []
						},
						{
							"name": "Instant Payment Detail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/instant_payments/6936NE01610774",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"instant_payments",
										"6936NE01610774"
									]
								}
							},
							"response": []
						},
						{
							"name": "Instant Payment Status",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Access-Channel",
										"value": "mobile",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/instant_payments/6936IE02212730/status",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"instant_payments",
										"6936IE02212730",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Instant Payment",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/instant_payments/6922NE03196723",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"instant_payments",
										"6922NE03196723"
									]
								}
							},
							"response": []
						},
						{
							"name": "Instant Payments List",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "Access-Channel",
										"value": "web",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/instant_payments?debtor_account_id=001800035455409202011&from_request_execution_date=2020-08-01&to_request_execution_date=2021-09-30",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"instant_payments"
									],
									"query": [
										{
											"key": "_limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "from_payment_amount",
											"value": "",
											"disabled": true
										},
										{
											"key": "to_payment_amount",
											"value": "100",
											"disabled": true
										},
										{
											"key": "debtor_account_id",
											"value": "001800035455409202011"
										},
										{
											"key": "payment_status",
											"value": "ACCC",
											"disabled": true
										},
										{
											"key": "_offset",
											"value": "0",
											"disabled": true
										},
										{
											"key": "from_request_execution_date",
											"value": "2020-08-01"
										},
										{
											"key": "to_request_execution_date",
											"value": "2021-09-30"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Identity Management",
					"item": [
						{
							"name": "Register PIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"if(pm.globals.get(\"sessionId\") == null) {\r",
											"    pm.globals.set(\"sca_code\", \"\");\r",
											"} else {\r",
											"    pm.globals.set(\"sca_code\", \"654321\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"sessionId\", pm.response.json().session_id);\r",
											"pm.globals.set(\"userDeviceId\", pm.response.json().userDeviceId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "tokenName",
											"value": "Bearer",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "santander-session-id",
										"value": "{{sessionId}}",
										"type": "text"
									},
									{
										"key": "client-id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "deviceKey",
											"value": "1234567891234568",
											"type": "text"
										},
										{
											"key": "sca_code",
											"value": "{{sca_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{ext-intURL}}/user_identity_mgmt/pin",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"user_identity_mgmt",
										"pin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change PIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"userDeviceId\", pm.response.json().userDeviceId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "client-id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"deviceKey\": \"1234567891234567\",\r\n    \"pinValidationId\": \"{{pinValidationId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/user_identity_mgmt/pin",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"user_identity_mgmt",
										"pin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPassword\": \"9639639\",\r\n    \"newPassword\": \"9639639\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/user_identity_mgmt/password",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"user_identity_mgmt",
										"password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate PIN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"pinValidationId\", pm.response.json().pinValidationId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "client-Id",
										"type": "text",
										"value": "{{client-id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userDeviceId\": \"{{userDeviceId}}\",\r\n    \"challenge\": \"M0a6c5zG7Swih4IxkbgOUoNj2BY9uDAe\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/user_identity_mgmt/pin/validation",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"user_identity_mgmt",
										"pin",
										"validation"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel PIN",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "tokenType",
											"value": "",
											"type": "string"
										},
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "client-Id",
										"value": "{{client-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"challenge\": \"wN4GKna9LjryYfBTMpzZV21XA3xREHc6\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ext-intURL}}/user_identity_mgmt/pin/{{userDeviceId}}",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"user_identity_mgmt",
										"pin",
										"{{userDeviceId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Commercial Model",
					"item": [
						{
							"name": "Get Customer Commercial Actions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Customer-Id",
										"value": "8043607161",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/customers/{{customer_id}}/commercial_actions",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"customers",
										"{{customer_id}}",
										"commercial_actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Customer Commercial Actions DMZ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Customer-Id",
										"value": "8043607161",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://apigw.dmzbackclient.totta.pre.corp/sanpt/internal-dmz/customers/{{customer_id}}/commercial_actions",
									"protocol": "https",
									"host": [
										"apigw",
										"dmzbackclient",
										"totta",
										"pre",
										"corp"
									],
									"path": [
										"sanpt",
										"internal-dmz",
										"customers",
										"{{customer_id}}",
										"commercial_actions"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "MBWay",
					"item": [
						{
							"name": "MBWay Notifications",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessToken",
											"value": "{{access_token}}",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Client-Id",
										"type": "text",
										"value": "{{client-id}}"
									},
									{
										"key": "Accept-Language",
										"value": "pt-PT",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{ext-intURL}}/mbway/notifications",
									"host": [
										"{{ext-intURL}}"
									],
									"path": [
										"mbway",
										"notifications"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ext-intURL",
			"value": "https://eeic9.apis.santander.pt/sanpt/external-intcons"
		},
		{
			"key": "client-id",
			"value": "3d32073c-6317-4b54-a4c6-6ca3b766758e"
		}
	]
}