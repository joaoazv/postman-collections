{
	"info": {
		"_postman_id": "f0132e85-0a9d-4afb-9983-bc766756beca",
		"name": "[LOANPT] Loans",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3409554"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{tokenClientId}}",
									"description": "dev",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{tokenClientSecret}}",
									"description": "dev",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://security-service.totta.pre.corp/oauth/token",
							"protocol": "https",
							"host": [
								"security-service",
								"totta",
								"pre",
								"corp"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Common",
			"item": [
				{
					"name": "List",
					"item": [
						{
							"name": "Success",
							"item": [
								{
									"name": "Loans List",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"loansDataList\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"displayNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"loanId\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"mainItem\": {\r",
													"              \"type\": \"boolean\"\r",
													"            },\r",
													"            \"alias\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"loanType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"loanProductDescription\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"status\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"interestType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"interestRate\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"loanBalances\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                }\r",
													"              ]\r",
													"            },\r",
													"            \"loanDetailsLink\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"displayNumber\",\r",
													"            \"loanId\",\r",
													"            \"mainItem\",\r",
													"            \"alias\",\r",
													"            \"loanType\",\r",
													"            \"loanProductDescription\",\r",
													"            \"status\",\r",
													"            \"interestType\",\r",
													"            \"interestRate\",\r",
													"            \"loanBalances\",\r",
													"            \"loanDetailsLink\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"_links\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"_first\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"_first\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"loansDataList\",\r",
													"    \"_links\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dmzUrl}}/loans",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans"
											],
											"query": [
												{
													"key": "historical",
													"value": "false",
													"disabled": true
												},
												{
													"key": "loan_type",
													"value": "PERSONAL",
													"disabled": true
												},
												{
													"key": "customer_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_limit",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Fail",
							"item": [
								{
									"name": "Error Messages",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: _limit\",\r",
													"        description:\"Value 'A' is invalid for parameter '_limit'.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "accessToken",
													"value": "{{accessToken}}",
													"type": "string"
												},
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{dmzUrl}}/loans?historical=true&loan_type=DURABLE&customer_id=d&_offset=-2&_limit=A",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans"
											],
											"query": [
												{
													"key": "historical",
													"value": "true"
												},
												{
													"key": "loan_type",
													"value": "DURABLE"
												},
												{
													"key": "customer_id",
													"value": "d"
												},
												{
													"key": "_offset",
													"value": "-2"
												},
												{
													"key": "_limit",
													"value": "A"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Details",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Loans details",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"displayNumber\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"loanId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"mainItem\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"alias\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"loanType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"loanProductDescription\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"currentSettlementConditions\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"interestType\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"interestRate\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"referenceRate\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"interestType\",\r",
													"        \"interestRate\",\r",
													"        \"referenceRate\"\r",
													"      ]\r",
													"    },\r",
													"    \"constitutionDate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"maturityDate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"status\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"installmentPeriodicity\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"loanBalances\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"displayNumber\",\r",
													"    \"loanId\",\r",
													"    \"mainItem\",\r",
													"    \"alias\",\r",
													"    \"loanType\",\r",
													"    \"loanProductDescription\",\r",
													"    \"currentSettlementConditions\",\r",
													"    \"constitutionDate\",\r",
													"    \"maturityDate\",\r",
													"    \"status\",\r",
													"    \"installmentPeriodicity\",\r",
													"    \"loanBalances\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Fail",
							"item": [
								{
									"name": "Wrong param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: getLoanDetails.loanId\",\r",
													"        description:\"{javax.validation.constraints.Pattern.message}\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096A/",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096A",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://gitlab-ce-scm.paas.totta.dev.corp/E858287/postman-library/raw/master/modules/validation/index.js\", function (err, response) {",
									" ",
									"    var arr = new Uint8Array(response.stream);",
									"    var str = String.fromCharCode.apply(String, arr);",
									" ",
									"    pm.globals.set('loadUtilsValidation', str);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Loans accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"loanId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"linkedAccounts\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"displayNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"accountId\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"accountIdType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"accountDetailsLink\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"initialDate\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"endDate\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"displayNumber\",\r",
													"            \"accountId\",\r",
													"            \"accountIdType\",\r",
													"            \"accountDetailsLink\",\r",
													"            \"initialDate\",\r",
													"            \"endDate\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"loanId\",\r",
													"    \"linkedAccounts\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/accounts",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"accounts"
											],
											"query": [
												{
													"key": "active",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Wrong param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: getLoanPayments.loanId\",\r",
													"        description:\"{javax.validation.constraints.Pattern.message}\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096A/accounts",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096A",
												"accounts"
											],
											"query": [
												{
													"key": "active",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wrong param Active",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: active\",\r",
													"        description:\"Value 'true' is invalid for parameter 'active'.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/accounts?active=true",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"accounts"
											],
											"query": [
												{
													"key": "active",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wrong Loan id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^404$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"This loan does not exist.\",\r",
													"        description:\"This loan does not exist.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320830047091/accounts",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320830047091",
												"accounts"
											],
											"query": [
												{
													"key": "active",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://gitlab-ce-scm.paas.totta.dev.corp/E858287/postman-library/raw/master/modules/validation/index.js\", function (err, response) {",
									" ",
									"    var arr = new Uint8Array(response.stream);",
									"    var str = String.fromCharCode.apply(String, arr);",
									" ",
									"    pm.globals.set('loadUtilsValidation', str);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "defaultLimit",
									"item": [
										{
											"name": "Default Limit",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema ={\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"loanId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pastPayments\": {\r",
															"      \"type\": \"array\",\r",
															"      \"items\": [\r",
															"        {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"issuedDate\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"paymentId\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"previousPaymentAmount\": {\r",
															"              \"type\": \"array\",\r",
															"              \"items\": [\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                }\r",
															"              ]\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"issuedDate\",\r",
															"            \"paymentId\",\r",
															"            \"previousPaymentAmount\"\r",
															"          ]\r",
															"        }\r",
															"      ]\r",
															"    },\r",
															"    \"_links\": {\r",
															"      \"type\": \"object\",\r",
															"      \"properties\": {\r",
															"        \"_first\": {\r",
															"          \"type\": \"string\"\r",
															"        }\r",
															"      },\r",
															"      \"required\": [\r",
															"        \"_first\"\r",
															"      ]\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"loanId\",\r",
															"    \"pastPayments\",\r",
															"    \"_links\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Client-id",
														"value": "{{tokenClientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/loans/000310749256096/payments",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"loans",
														"000310749256096",
														"payments"
													],
													"query": [
														{
															"key": "max_number_payments",
															"value": "1",
															"disabled": true
														},
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Limit1",
									"item": [
										{
											"name": "FirstPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema ={\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"loanId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pastPayments\": {\r",
															"      \"type\": \"array\",\r",
															"      \"items\": [\r",
															"        {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"issuedDate\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"paymentId\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"previousPaymentAmount\": {\r",
															"              \"type\": \"array\",\r",
															"              \"items\": [\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                }\r",
															"              ]\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"issuedDate\",\r",
															"            \"paymentId\",\r",
															"            \"previousPaymentAmount\"\r",
															"          ]\r",
															"        }\r",
															"      ]\r",
															"    },\r",
															"    \"_links\": {\r",
															"      \"type\": \"object\",\r",
															"      \"properties\": {\r",
															"        \"_first\": {\r",
															"          \"type\": \"string\"\r",
															"        }\r",
															"      },\r",
															"      \"required\": [\r",
															"        \"_first\"\r",
															"      ]\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"loanId\",\r",
															"    \"pastPayments\",\r",
															"    \"_links\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Client-id",
														"value": "{{tokenClientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/loans/000310749256096/payments?_limit=1&_offset=0",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"loans",
														"000310749256096",
														"payments"
													],
													"query": [
														{
															"key": "_limit",
															"value": "1"
														},
														{
															"key": "max_number_payments",
															"value": "1",
															"disabled": true
														},
														{
															"key": "_offset",
															"value": "0"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "SecondPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema ={\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"loanId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pastPayments\": {\r",
															"      \"type\": \"array\",\r",
															"      \"items\": [\r",
															"        {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"issuedDate\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"paymentId\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"previousPaymentAmount\": {\r",
															"              \"type\": \"array\",\r",
															"              \"items\": [\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                }\r",
															"              ]\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"issuedDate\",\r",
															"            \"paymentId\",\r",
															"            \"previousPaymentAmount\"\r",
															"          ]\r",
															"        }\r",
															"      ]\r",
															"    },\r",
															"    \"_links\": {\r",
															"      \"type\": \"object\",\r",
															"      \"properties\": {\r",
															"        \"_first\": {\r",
															"          \"type\": \"string\"\r",
															"        }\r",
															"      },\r",
															"      \"required\": [\r",
															"        \"_first\"\r",
															"      ]\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"loanId\",\r",
															"    \"pastPayments\",\r",
															"    \"_links\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Client-id",
														"value": "{{tokenClientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/loans/000310749256096/payments?_limit=1&_offset=1",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"loans",
														"000310749256096",
														"payments"
													],
													"query": [
														{
															"key": "max_number_payments",
															"value": "1",
															"disabled": true
														},
														{
															"key": "_limit",
															"value": "1"
														},
														{
															"key": "_offset",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "LastPage",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var Ajv = require('ajv'),\r",
															"  ajv = new Ajv({ logger: console }),\r",
															"  schema ={\r",
															"  \"type\": \"object\",\r",
															"  \"properties\": {\r",
															"    \"loanId\": {\r",
															"      \"type\": \"string\"\r",
															"    },\r",
															"    \"pastPayments\": {\r",
															"      \"type\": \"array\",\r",
															"      \"items\": [\r",
															"        {\r",
															"          \"type\": \"object\",\r",
															"          \"properties\": {\r",
															"            \"issuedDate\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"paymentId\": {\r",
															"              \"type\": \"string\"\r",
															"            },\r",
															"            \"previousPaymentAmount\": {\r",
															"              \"type\": \"array\",\r",
															"              \"items\": [\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                },\r",
															"                {\r",
															"                  \"type\": \"object\",\r",
															"                  \"properties\": {\r",
															"                    \"balanceType\": {\r",
															"                      \"type\": \"string\"\r",
															"                    },\r",
															"                    \"amount\": {\r",
															"                      \"type\": \"number\"\r",
															"                    },\r",
															"                    \"currencyCode\": {\r",
															"                      \"type\": \"string\"\r",
															"                    }\r",
															"                  },\r",
															"                  \"required\": [\r",
															"                    \"balanceType\",\r",
															"                    \"amount\",\r",
															"                    \"currencyCode\"\r",
															"                  ]\r",
															"                }\r",
															"              ]\r",
															"            }\r",
															"          },\r",
															"          \"required\": [\r",
															"            \"issuedDate\",\r",
															"            \"paymentId\",\r",
															"            \"previousPaymentAmount\"\r",
															"          ]\r",
															"        }\r",
															"      ]\r",
															"    },\r",
															"    \"_links\": {\r",
															"      \"type\": \"object\",\r",
															"      \"properties\": {\r",
															"        \"_first\": {\r",
															"          \"type\": \"string\"\r",
															"        }\r",
															"      },\r",
															"      \"required\": [\r",
															"        \"_first\"\r",
															"      ]\r",
															"    }\r",
															"  },\r",
															"  \"required\": [\r",
															"    \"loanId\",\r",
															"    \"pastPayments\",\r",
															"    \"_links\"\r",
															"  ]\r",
															"};\r",
															"\r",
															"pm.test('Schema is valid', function () {\r",
															"  var data = pm.response.json();\r",
															"  var valid = ajv.validate(schema, data);\r",
															"  if (!valid) {\r",
															"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
															"  }\r",
															"  pm.expect(valid).to.be.true;\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Client-id",
														"value": "{{tokenClientId}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{dmzUrl}}/loans/000310749256096/payments?_limit=1&_offset=7",
													"host": [
														"{{dmzUrl}}"
													],
													"path": [
														"loans",
														"000310749256096",
														"payments"
													],
													"query": [
														{
															"key": "max_number_payments",
															"value": "1",
															"disabled": true
														},
														{
															"key": "_limit",
															"value": "1"
														},
														{
															"key": "_offset",
															"value": "7"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Wrong param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: getLoanPayments.loanId\",\r",
													"        description:\"{javax.validation.constraints.Pattern.message}\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096A/payments",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096A",
												"payments"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Limit 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: limit\",\r",
													"        description:\"Value '0' is invalid for parameter 'limit'.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/payments?_limit=0",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"payments"
											],
											"query": [
												{
													"key": "_limit",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wrong Loan id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: getLoanPayments.loanId\",\r",
													"        description:\"{javax.validation.constraints.Pattern.message}\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/0003208540880236/payments",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"0003208540880236",
												"payments"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "70",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wrong param Max_number_payment",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"errors\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"code\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"message\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"level\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"description\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"code\",\r",
													"            \"message\",\r",
													"            \"level\",\r",
													"            \"description\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"errors\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/payments?max_number_payments=2",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"payments"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://gitlab-ce-scm.paas.totta.dev.corp/E858287/postman-library/raw/master/modules/validation/index.js\", function (err, response) {",
									" ",
									"    var arr = new Uint8Array(response.stream);",
									"    var str = String.fromCharCode.apply(String, arr);",
									" ",
									"    pm.globals.set('loadUtilsValidation', str);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Payments Details",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "PayementDetails",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema ={\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"loanId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"paymentId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"issuedDate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"interestType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"interestRate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"previousPaymentAmount\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"number\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"number\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"number\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"number\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"number\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"loanId\",\r",
													"    \"paymentId\",\r",
													"    \"issuedDate\",\r",
													"    \"interestType\",\r",
													"    \"interestRate\",\r",
													"    \"previousPaymentAmount\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/payments/23",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"payments",
												"23"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Fail",
							"item": [
								{
									"name": "Wrong Loan id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^404$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"This loan does not exist.\",\r",
													"        description:\"This loan does not exist.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320842562096/payments/44",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320842562096",
												"payments",
												"44"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "70",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Installment Details",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Loans installment details",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"loanId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"installmentId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"interestRate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"interestType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"installmentDate\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"nextInstallmentAmount\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"balanceType\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"amount\": {\r",
													"              \"type\": \"integer\"\r",
													"            },\r",
													"            \"currencyCode\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"balanceType\",\r",
													"            \"amount\",\r",
													"            \"currencyCode\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"loanId\",\r",
													"    \"installmentId\",\r",
													"    \"interestRate\",\r",
													"    \"interestType\",\r",
													"    \"installmentDate\",\r",
													"    \"nextInstallmentAmount\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{tokenClientId}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/installments/60",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"installments",
												"60"
											],
											"query": [
												{
													"key": "max_number_installments",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Wrong params",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^400$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"Invalid field: getLoanInstalmentsDetail.loanId\",\r",
													"        description:\"{javax.validation.constraints.Pattern.message}\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/00032083360309A/installments/12A",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"00032083360309A",
												"installments",
												"12A"
											],
											"query": [
												{
													"key": "max_number_installments",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Loan Id not exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^404$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"This loan does not exist.\",\r",
													"        description:\"This loan does not exist.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320830047091/installments/12",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320830047091",
												"installments",
												"12"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "70",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Installment Id not exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var Ajv = require('ajv'),\r",
													"    ajv = new Ajv({\r",
													"        logger: console\r",
													"    }),\r",
													"    schema = {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"            \"errors\": {\r",
													"                \"type\": \"array\",\r",
													"                \"uniqueItems\": true,\r",
													"                \"contains\": {\r",
													"\r",
													"                    \"type\": \"object\",\r",
													"                    \"properties\": {\r",
													"                        \"code\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^404$\"\r",
													"                        },\r",
													"                        \"message\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \".*\"\r",
													"                        },\r",
													"                        \"level\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"pattern\": \"^ERROR$\"\r",
													"                        },\r",
													"                        \"description\": {\r",
													"                            \"type\": \"string\"\r",
													"                        }\r",
													"                    },\r",
													"                    \"required\": [\r",
													"                        \"code\",\r",
													"                        \"message\",\r",
													"                        \"level\",\r",
													"                        \"description\"\r",
													"                    ]\r",
													"\r",
													"                }\r",
													"\r",
													"            }\r",
													"        },\r",
													"        \"required\": [\r",
													"            \"errors\"\r",
													"        ]\r",
													"    }\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"    var data = pm.response.json();\r",
													"    var valid = ajv.validate(schema, data);\r",
													"    if (!valid) {\r",
													"        console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"    }\r",
													"    pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test('Error messages', function () {\r",
													"    var data = pm.response.json();\r",
													"    var messages = [{\r",
													"        message: \"This loan does not exist.\",\r",
													"        description:\"This loan does not exist.\"\r",
													"    }\r",
													"    ]\r",
													"    var errors = data.errors;\r",
													"    for (var i = 0; i < errors.length; i++) {\r",
													"        for (var j = 0; j < messages.length; j++) {\r",
													"            if (messages[j].message == errors[i].message && messages[j].description == errors[i].description) {\r",
													"                messages[j].found = true;\r",
													"            }\r",
													"        }\r",
													"    }\r",
													"\r",
													"    var allTrue = true;\r",
													"    for (var j = 0; j < messages.length; j++) {\r",
													"        if (!messages[j].found) {\r",
													"            console.warn(pm.info.requestName + \" not found:\", messages[j].message);\r",
													"            allTrue = false;\r",
													"        }\r",
													"    }\r",
													"\r",
													"    pm.expect(allTrue).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"type": "text",
												"value": "{{tokenClientId}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320842562096/installments/12",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320842562096",
												"installments",
												"12"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "70",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://gitlab-ce-scm.paas.totta.dev.corp/E858287/postman-library/raw/master/modules/validation/index.js\", function (err, response) {",
									" ",
									"    var arr = new Uint8Array(response.stream);",
									"    var str = String.fromCharCode.apply(String, arr);",
									" ",
									"    pm.globals.set('loadUtilsValidation', str);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Installments",
					"item": [
						{
							"name": "Sucess",
							"item": [
								{
									"name": "Loans installments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"loanId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"nextInstallments\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"installmentId\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"installmentDate\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"nextInstallmentAmount\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"object\",\r",
													"                  \"properties\": {\r",
													"                    \"balanceType\": {\r",
													"                      \"type\": \"string\"\r",
													"                    },\r",
													"                    \"amount\": {\r",
													"                      \"type\": \"integer\"\r",
													"                    },\r",
													"                    \"currencyCode\": {\r",
													"                      \"type\": \"string\"\r",
													"                    }\r",
													"                  },\r",
													"                  \"required\": [\r",
													"                    \"balanceType\",\r",
													"                    \"amount\",\r",
													"                    \"currencyCode\"\r",
													"                  ]\r",
													"                }\r",
													"              ]\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"installmentId\",\r",
													"            \"installmentDate\",\r",
													"            \"nextInstallmentAmount\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"loanId\",\r",
													"    \"nextInstallments\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000310749256096/installments",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000310749256096",
												"installments"
											],
											"query": [
												{
													"key": "max_number_installments",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Faill",
							"item": [
								{
									"name": "Wrong param",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"errors\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"code\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"message\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"level\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"description\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"code\",\r",
													"            \"message\",\r",
													"            \"level\",\r",
													"            \"description\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"errors\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/00032083360309A/installments",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"00032083360309A",
												"installments"
											],
											"query": [
												{
													"key": "max_number_installments",
													"value": "2",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wrong param max_number_installments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"errors\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"code\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"message\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"level\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"description\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"code\",\r",
													"            \"message\",\r",
													"            \"level\",\r",
													"            \"description\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"errors\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320854088096/installments?max_number_installments=2",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320854088096",
												"installments"
											],
											"query": [
												{
													"key": "max_number_installments",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Loan Id not exist",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"  pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"var Ajv = require('ajv'),\r",
													"  ajv = new Ajv({ logger: console }),\r",
													"  schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"errors\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"code\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"message\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"level\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"description\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"code\",\r",
													"            \"message\",\r",
													"            \"level\",\r",
													"            \"description\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"errors\"\r",
													"  ]\r",
													"};\r",
													"\r",
													"pm.test('Schema is valid', function () {\r",
													"  var data = pm.response.json();\r",
													"  var valid = ajv.validate(schema, data);\r",
													"  if (!valid) {\r",
													"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
													"  }\r",
													"  pm.expect(valid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Client-id",
												"value": "{{tokenClientId}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{dmzUrl}}/loans/000320830047091/installments",
											"host": [
												"{{dmzUrl}}"
											],
											"path": [
												"loans",
												"000320830047091",
												"installments"
											],
											"query": [
												{
													"key": "max_number_payments",
													"value": "2",
													"disabled": true
												},
												{
													"key": "_offset",
													"value": "70",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://gitlab-ce-scm.paas.totta.dev.corp/E858287/postman-library/raw/master/modules/validation/index.js\", function (err, response) {",
									" ",
									"    var arr = new Uint8Array(response.stream);",
									"    var str = String.fromCharCode.apply(String, arr);",
									" ",
									"    pm.globals.set('loadUtilsValidation', str);",
									"});"
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Local",
			"item": [
				{
					"name": "List",
					"item": [
						{
							"name": "Loans List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"loansDataList\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"displayNumber\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"loanId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mainItem\": {\r",
											"              \"type\": \"boolean\"\r",
											"            },\r",
											"            \"alias\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"loanType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"loanProductDescription\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"status\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"interestType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"interestRate\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"loanBalances\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": [\r",
											"                {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"balanceType\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"amount\": {\r",
											"                      \"type\": \"integer\"\r",
											"                    },\r",
											"                    \"currencyCode\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"balanceType\",\r",
											"                    \"amount\",\r",
											"                    \"currencyCode\"\r",
											"                  ]\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"balanceType\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"amount\": {\r",
											"                      \"type\": \"integer\"\r",
											"                    },\r",
											"                    \"currencyCode\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"balanceType\",\r",
											"                    \"amount\",\r",
											"                    \"currencyCode\"\r",
											"                  ]\r",
											"                },\r",
											"                {\r",
											"                  \"type\": \"object\",\r",
											"                  \"properties\": {\r",
											"                    \"balanceType\": {\r",
											"                      \"type\": \"string\"\r",
											"                    },\r",
											"                    \"amount\": {\r",
											"                      \"type\": \"integer\"\r",
											"                    },\r",
											"                    \"currencyCode\": {\r",
											"                      \"type\": \"string\"\r",
											"                    }\r",
											"                  },\r",
											"                  \"required\": [\r",
											"                    \"balanceType\",\r",
											"                    \"amount\",\r",
											"                    \"currencyCode\"\r",
											"                  ]\r",
											"                }\r",
											"              ]\r",
											"            },\r",
											"            \"loanDetailsLink\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"displayNumber\",\r",
											"            \"loanId\",\r",
											"            \"mainItem\",\r",
											"            \"alias\",\r",
											"            \"loanType\",\r",
											"            \"loanProductDescription\",\r",
											"            \"status\",\r",
											"            \"interestType\",\r",
											"            \"interestRate\",\r",
											"            \"loanBalances\",\r",
											"            \"loanDetailsLink\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    },\r",
											"    \"_links\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"_first\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"_first\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"loansDataList\",\r",
											"    \"_links\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"url": {
									"raw": "{{intraUrl}}/local/loans?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Details",
					"item": [
						{
							"name": "Loans details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/000310749256096?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"000310749256096"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Accounts",
					"item": [
						{
							"name": "Accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/000310749256096/accounts?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"000310749256096",
										"accounts"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payments",
					"item": [
						{
							"name": "Payments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/352500000115096/payments?customer_id=9000752212&_offset=0&_limit=3",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"352500000115096",
										"payments"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "9000752212"
										},
										{
											"key": "_offset",
											"value": "0"
										},
										{
											"key": "_limit",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payment Details",
					"item": [
						{
							"name": "Payment details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/000310749256096/payments/23?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"000310749256096",
										"payments",
										"23"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Installments",
					"item": [
						{
							"name": "Installments",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/000310749256096/installments?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"000310749256096",
										"installments"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Installment Details",
					"item": [
						{
							"name": "Installment details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var Ajv = require('ajv'),\r",
											"  ajv = new Ajv({ logger: console }),\r",
											"  schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"displayNumber\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanId\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"mainItem\": {\r",
											"      \"type\": \"boolean\"\r",
											"    },\r",
											"    \"alias\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanType\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanProductDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"currentSettlementConditions\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"interestType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"interestRate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"referenceRate\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"interestType\",\r",
											"        \"interestRate\",\r",
											"        \"referenceRate\"\r",
											"      ]\r",
											"    },\r",
											"    \"constitutionDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"maturityDate\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"status\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"installmentPeriodicity\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"loanBalances\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        },\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"balanceType\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"amount\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"currencyCode\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"balanceType\",\r",
											"            \"amount\",\r",
											"            \"currencyCode\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"displayNumber\",\r",
											"    \"loanId\",\r",
											"    \"mainItem\",\r",
											"    \"alias\",\r",
											"    \"loanType\",\r",
											"    \"loanProductDescription\",\r",
											"    \"currentSettlementConditions\",\r",
											"    \"constitutionDate\",\r",
											"    \"maturityDate\",\r",
											"    \"status\",\r",
											"    \"installmentPeriodicity\",\r",
											"    \"loanBalances\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"  var data = pm.response.json();\r",
											"  var valid = ajv.validate(schema, data);\r",
											"  if (!valid) {\r",
											"    console.error(pm.info.requestName + \" Errors:\", ajv.errors);\r",
											"  }\r",
											"  pm.expect(valid).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Client-id",
										"type": "text",
										"value": "{{clientIdInternal}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{intraUrl}}/local/loans/000310749256096/installments/60?customer_id=1006",
									"host": [
										"{{intraUrl}}"
									],
									"path": [
										"local",
										"loans",
										"000310749256096",
										"installments",
										"60"
									],
									"query": [
										{
											"key": "customer_id",
											"value": "1006"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenType",
				"value": "",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{token}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/*pm.sendRequest(\"https://github.alm.europe.cloudcenter.corp/raw/tot-pt-apis/postman-lib/master/modules/authorization/authLib.js\", function (error, response) {",
					"*/",
					"    var environment = pm.variables.get(\"env1\");",
					"    pm.collectionVariables.set(\"env\", environment);",
					"",
					"   if(environment==\"dev\"){",
					"        pm.collectionVariables.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"        pm.collectionVariables.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"        pm.collectionVariables.set(\"dmzUrl\", \"https://apigw.dmzbackclient.totta.dev.corp/sanpt/internal-dmz\");",
					"        pm.collectionVariables.set(\"intraUrl\", \"https://apigw.intraclient.totta.dev.corp/sanpt/internal\");",
					"        pm.collectionVariables.set(\"clientIdInternal\", \"edc91ff5-7975-413e-9040-4bb31cb6637b\");",
					"    };",
					"",
					"    if(environment==\"pre\"){",
					"        pm.collectionVariables.set(\"tokenClientId\", \"4853771c-70b4-4c9e-a575-1ab701678311\");",
					"        pm.collectionVariables.set(\"tokenClientSecret\", \"T1tK7iA7rG8oW0uP3kD7oF1eM4iC1wJ2yL2eQ6wH0aY4wN6uY2\");",
					"        pm.collectionVariables.set(\"dmzUrl\", \"https://apigw.dmzbackclient.totta.pre.corp/sanpt/internal-dmz\");",
					"        pm.collectionVariables.set(\"intraUrl\", \"https://apigw.intraclient.totta.pre.corp/sanpt/internal\");",
					"        pm.collectionVariables.set(\"clientIdInternal\", \"4853771c-70b4-4c9e-a575-1ab701678311\");",
					"    };",
					"",
					"    if(environment==\"localhost\"){",
					"        pm.collectionVariables.set(\"env\", \"dev\");",
					"        pm.collectionVariables.set(\"tokenClientId\", \"b5f69d0d-b1a4-4a22-81d8-fda6d98708f2\");",
					"        pm.collectionVariables.set(\"tokenClientSecret\", \"uD0eR6jY8lQ3lC0tW8bQ7fN4vW7fG7eN6qJ3cX3cT0tX0gI6iA\");",
					"        pm.collectionVariables.set(\"dmzUrl\", \"localhost:8080\");",
					"        pm.collectionVariables.set(\"intraUrl\", \"localhost:8080\");",
					"        pm.collectionVariables.set(\"clientIdInternal\", \"edc91ff5-7975-413e-9040-4bb31cb6637b\");",
					"    };",
					"    pm.environment.set(\"clientId\", pm.environment.get(\"tokenClientId\"));",
					"",
					"/*",
					"    eval(String.fromCharCode.apply(String, new Uint8Array(response.stream)));",
					"    auth1000585557();",
					"    ",
					"});*/"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "env",
			"value": "pre"
		},
		{
			"key": "env1",
			"value": "pre"
		},
		{
			"key": "channelLayer",
			"value": ""
		},
		{
			"key": "commonLayer",
			"value": ""
		},
		{
			"key": "localLayer",
			"value": ""
		},
		{
			"key": "tokenClientId",
			"value": ""
		},
		{
			"key": "tokenClientSecret",
			"value": ""
		},
		{
			"key": "tokenClientIdV000105",
			"value": ""
		},
		{
			"key": "tokenClientSecretV000105",
			"value": ""
		},
		{
			"key": "xIbmClientId",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "dmzUrl",
			"value": ""
		},
		{
			"key": "intraUrl",
			"value": ""
		},
		{
			"key": "clientIdInternal",
			"value": ""
		}
	]
}